-- BP 7.1 content: InstanceStateMachine syschar: 3 persistence-version: 7.1.6

INSERT INTO SM_ISM
	VALUES ("3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"2e6883f6-3fb1-4a92-b4c5-94dbca221dc6");
INSERT INTO SM_SM
	VALUES ("3b81eb79-08ec-4e48-af03-785245ae5d3a",
	'',
	3);
INSERT INTO SM_MOORE
	VALUES ("3b81eb79-08ec-4e48-af03-785245ae5d3a");
INSERT INTO SM_EVTDI
	VALUES ("d6467fe4-3618-4bb5-8808-45147aff18e1",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	'name',
	'',
	"ba5eda7a-def5-0000-0000-000000000004",
	'',
	"5109ee3b-8321-4f83-91d6-8bd8fa58df34",
	"8e5f05b4-1942-4afa-9259-20e9194974bc");
INSERT INTO SM_EVTDI
	VALUES ("8e5f05b4-1942-4afa-9259-20e9194974bc",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	'age',
	'',
	"ba5eda7a-def5-0000-0000-000000000004",
	'',
	"5109ee3b-8321-4f83-91d6-8bd8fa58df34",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_EVTDI
	VALUES ("0c64f64d-34ba-45f0-8e68-563867ec0061",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	'i1',
	'',
	"ba5eda7a-def5-0000-0000-000000000002",
	'',
	"3d9fb728-1f2f-4994-b8de-ef15a8932490",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_EVTDI
	VALUES ("67e0ec5f-11b6-444d-a335-773df1a7a731",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	'i2',
	'',
	"ba5eda7a-def5-0000-0000-000000000002",
	'',
	"e5418def-fa9e-4bf9-9a84-924ea2d35cc0",
	"e8447d10-390f-47e2-af38-13efe1201561");
INSERT INTO SM_EVTDI
	VALUES ("ce618a09-efa2-409a-aeda-204bdaa74251",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	'b1',
	'',
	"ba5eda7a-def5-0000-0000-000000000001",
	'',
	"be59427c-1d54-4b90-a05a-a84c560328ad",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_EVTDI
	VALUES ("7f12f239-570e-4a6f-b903-18456cd80cb0",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	'b2',
	'',
	"ba5eda7a-def5-0000-0000-000000000001",
	'',
	"e5418def-fa9e-4bf9-9a84-924ea2d35cc0",
	"70a9f848-1dd6-4cc6-af09-9258f51670b3");
INSERT INTO SM_EVTDI
	VALUES ("b59b55d2-7530-40e4-a3c9-c0ac6d6f2d41",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	'r1',
	'',
	"ba5eda7a-def5-0000-0000-000000000003",
	'',
	"e5418def-fa9e-4bf9-9a84-924ea2d35cc0",
	"67e0ec5f-11b6-444d-a335-773df1a7a731");
INSERT INTO SM_EVTDI
	VALUES ("c1a877ac-40e7-404c-a989-628ee0031b84",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	'r2',
	'',
	"ba5eda7a-def5-0000-0000-000000000003",
	'',
	"e5418def-fa9e-4bf9-9a84-924ea2d35cc0",
	"b59b55d2-7530-40e4-a3c9-c0ac6d6f2d41");
INSERT INTO SM_EVTDI
	VALUES ("e8447d10-390f-47e2-af38-13efe1201561",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	'i1',
	'',
	"ba5eda7a-def5-0000-0000-000000000002",
	'',
	"e5418def-fa9e-4bf9-9a84-924ea2d35cc0",
	"7f12f239-570e-4a6f-b903-18456cd80cb0");
INSERT INTO SM_EVTDI
	VALUES ("70a9f848-1dd6-4cc6-af09-9258f51670b3",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	'b1',
	'',
	"ba5eda7a-def5-0000-0000-000000000001",
	'',
	"e5418def-fa9e-4bf9-9a84-924ea2d35cc0",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_LEVT
	VALUES ("17b1c4fa-93e9-47e3-ac10-49978234d41f",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_SEVT
	VALUES ("17b1c4fa-93e9-47e3-ac10-49978234d41f",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_EVT
	VALUES ("17b1c4fa-93e9-47e3-ac10-49978234d41f",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000",
	1,
	'start test',
	0,
	'',
	'TCE1',
	'');
INSERT INTO SM_LEVT
	VALUES ("7fd3414c-86ea-4c63-8b87-40d1ca300b2b",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_SEVT
	VALUES ("7fd3414c-86ea-4c63-8b87-40d1ca300b2b",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_EVT
	VALUES ("7fd3414c-86ea-4c63-8b87-40d1ca300b2b",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000",
	2,
	'next test',
	0,
	'',
	'TCE2',
	'');
INSERT INTO SM_LEVT
	VALUES ("5109ee3b-8321-4f83-91d6-8bd8fa58df34",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_SEVT
	VALUES ("5109ee3b-8321-4f83-91d6-8bd8fa58df34",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_EVT
	VALUES ("5109ee3b-8321-4f83-91d6-8bd8fa58df34",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000",
	3,
	'event with supp data',
	0,
	'',
	'TCE3',
	'');
INSERT INTO SM_LEVT
	VALUES ("e5418def-fa9e-4bf9-9a84-924ea2d35cc0",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_SEVT
	VALUES ("e5418def-fa9e-4bf9-9a84-924ea2d35cc0",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_EVT
	VALUES ("e5418def-fa9e-4bf9-9a84-924ea2d35cc0",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000",
	4,
	'next test with supp data',
	0,
	'',
	'TCE4',
	'');
INSERT INTO SM_LEVT
	VALUES ("be59427c-1d54-4b90-a05a-a84c560328ad",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_SEVT
	VALUES ("be59427c-1d54-4b90-a05a-a84c560328ad",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_EVT
	VALUES ("be59427c-1d54-4b90-a05a-a84c560328ad",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000",
	5,
	'bool event',
	0,
	'',
	'TCE5',
	'');
INSERT INTO SM_LEVT
	VALUES ("3d9fb728-1f2f-4994-b8de-ef15a8932490",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_SEVT
	VALUES ("3d9fb728-1f2f-4994-b8de-ef15a8932490",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_EVT
	VALUES ("3d9fb728-1f2f-4994-b8de-ef15a8932490",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000",
	6,
	'int event',
	0,
	'',
	'TCE6',
	'');
INSERT INTO SM_STATE
	VALUES ("bfc299c3-5fe5-4498-ab77-97d2d5b7896d",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000",
	'Compound Expressions Using Constants',
	1,
	0);
INSERT INTO SM_SEME
	VALUES ("bfc299c3-5fe5-4498-ab77-97d2d5b7896d",
	"17b1c4fa-93e9-47e3-ac10-49978234d41f",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_SEME
	VALUES ("bfc299c3-5fe5-4498-ab77-97d2d5b7896d",
	"7fd3414c-86ea-4c63-8b87-40d1ca300b2b",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_EIGN
	VALUES ("bfc299c3-5fe5-4498-ab77-97d2d5b7896d",
	"5109ee3b-8321-4f83-91d6-8bd8fa58df34",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("bfc299c3-5fe5-4498-ab77-97d2d5b7896d",
	"5109ee3b-8321-4f83-91d6-8bd8fa58df34",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_CH
	VALUES ("bfc299c3-5fe5-4498-ab77-97d2d5b7896d",
	"e5418def-fa9e-4bf9-9a84-924ea2d35cc0",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("bfc299c3-5fe5-4498-ab77-97d2d5b7896d",
	"e5418def-fa9e-4bf9-9a84-924ea2d35cc0",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_CH
	VALUES ("bfc299c3-5fe5-4498-ab77-97d2d5b7896d",
	"be59427c-1d54-4b90-a05a-a84c560328ad",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("bfc299c3-5fe5-4498-ab77-97d2d5b7896d",
	"be59427c-1d54-4b90-a05a-a84c560328ad",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_CH
	VALUES ("bfc299c3-5fe5-4498-ab77-97d2d5b7896d",
	"3d9fb728-1f2f-4994-b8de-ef15a8932490",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("bfc299c3-5fe5-4498-ab77-97d2d5b7896d",
	"3d9fb728-1f2f-4994-b8de-ef15a8932490",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_STATE
	VALUES ("038e88f8-7ace-47ef-a50f-f888460af294",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000",
	'Compound Expressions Using Local Variables',
	2,
	0);
INSERT INTO SM_EIGN
	VALUES ("038e88f8-7ace-47ef-a50f-f888460af294",
	"17b1c4fa-93e9-47e3-ac10-49978234d41f",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("038e88f8-7ace-47ef-a50f-f888460af294",
	"17b1c4fa-93e9-47e3-ac10-49978234d41f",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_SEME
	VALUES ("038e88f8-7ace-47ef-a50f-f888460af294",
	"7fd3414c-86ea-4c63-8b87-40d1ca300b2b",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_EIGN
	VALUES ("038e88f8-7ace-47ef-a50f-f888460af294",
	"5109ee3b-8321-4f83-91d6-8bd8fa58df34",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("038e88f8-7ace-47ef-a50f-f888460af294",
	"5109ee3b-8321-4f83-91d6-8bd8fa58df34",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_CH
	VALUES ("038e88f8-7ace-47ef-a50f-f888460af294",
	"e5418def-fa9e-4bf9-9a84-924ea2d35cc0",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("038e88f8-7ace-47ef-a50f-f888460af294",
	"e5418def-fa9e-4bf9-9a84-924ea2d35cc0",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_CH
	VALUES ("038e88f8-7ace-47ef-a50f-f888460af294",
	"be59427c-1d54-4b90-a05a-a84c560328ad",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("038e88f8-7ace-47ef-a50f-f888460af294",
	"be59427c-1d54-4b90-a05a-a84c560328ad",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_CH
	VALUES ("038e88f8-7ace-47ef-a50f-f888460af294",
	"3d9fb728-1f2f-4994-b8de-ef15a8932490",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("038e88f8-7ace-47ef-a50f-f888460af294",
	"3d9fb728-1f2f-4994-b8de-ef15a8932490",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_STATE
	VALUES ("41349bad-35a3-45e9-87ec-9669abc548e0",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000",
	'Compound Expressions Using Object Attributes',
	3,
	0);
INSERT INTO SM_EIGN
	VALUES ("41349bad-35a3-45e9-87ec-9669abc548e0",
	"17b1c4fa-93e9-47e3-ac10-49978234d41f",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("41349bad-35a3-45e9-87ec-9669abc548e0",
	"17b1c4fa-93e9-47e3-ac10-49978234d41f",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_EIGN
	VALUES ("41349bad-35a3-45e9-87ec-9669abc548e0",
	"7fd3414c-86ea-4c63-8b87-40d1ca300b2b",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("41349bad-35a3-45e9-87ec-9669abc548e0",
	"7fd3414c-86ea-4c63-8b87-40d1ca300b2b",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_SEME
	VALUES ("41349bad-35a3-45e9-87ec-9669abc548e0",
	"5109ee3b-8321-4f83-91d6-8bd8fa58df34",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_CH
	VALUES ("41349bad-35a3-45e9-87ec-9669abc548e0",
	"e5418def-fa9e-4bf9-9a84-924ea2d35cc0",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("41349bad-35a3-45e9-87ec-9669abc548e0",
	"e5418def-fa9e-4bf9-9a84-924ea2d35cc0",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_CH
	VALUES ("41349bad-35a3-45e9-87ec-9669abc548e0",
	"be59427c-1d54-4b90-a05a-a84c560328ad",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("41349bad-35a3-45e9-87ec-9669abc548e0",
	"be59427c-1d54-4b90-a05a-a84c560328ad",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_CH
	VALUES ("41349bad-35a3-45e9-87ec-9669abc548e0",
	"3d9fb728-1f2f-4994-b8de-ef15a8932490",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("41349bad-35a3-45e9-87ec-9669abc548e0",
	"3d9fb728-1f2f-4994-b8de-ef15a8932490",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_STATE
	VALUES ("fe52ac30-3fd7-4731-ad00-5b83a8efed4d",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000",
	'Compound Expressions Using Supplemental Data Items Received From An Event',
	4,
	0);
INSERT INTO SM_EIGN
	VALUES ("fe52ac30-3fd7-4731-ad00-5b83a8efed4d",
	"17b1c4fa-93e9-47e3-ac10-49978234d41f",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("fe52ac30-3fd7-4731-ad00-5b83a8efed4d",
	"17b1c4fa-93e9-47e3-ac10-49978234d41f",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_SEME
	VALUES ("fe52ac30-3fd7-4731-ad00-5b83a8efed4d",
	"7fd3414c-86ea-4c63-8b87-40d1ca300b2b",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_EIGN
	VALUES ("fe52ac30-3fd7-4731-ad00-5b83a8efed4d",
	"5109ee3b-8321-4f83-91d6-8bd8fa58df34",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("fe52ac30-3fd7-4731-ad00-5b83a8efed4d",
	"5109ee3b-8321-4f83-91d6-8bd8fa58df34",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_CH
	VALUES ("fe52ac30-3fd7-4731-ad00-5b83a8efed4d",
	"e5418def-fa9e-4bf9-9a84-924ea2d35cc0",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("fe52ac30-3fd7-4731-ad00-5b83a8efed4d",
	"e5418def-fa9e-4bf9-9a84-924ea2d35cc0",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_CH
	VALUES ("fe52ac30-3fd7-4731-ad00-5b83a8efed4d",
	"be59427c-1d54-4b90-a05a-a84c560328ad",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("fe52ac30-3fd7-4731-ad00-5b83a8efed4d",
	"be59427c-1d54-4b90-a05a-a84c560328ad",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_CH
	VALUES ("fe52ac30-3fd7-4731-ad00-5b83a8efed4d",
	"3d9fb728-1f2f-4994-b8de-ef15a8932490",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("fe52ac30-3fd7-4731-ad00-5b83a8efed4d",
	"3d9fb728-1f2f-4994-b8de-ef15a8932490",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_STATE
	VALUES ("cd578d26-c528-4867-9d12-a0dd8bb2c794",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000",
	'Compound Expressions Using Function Invocations',
	5,
	0);
INSERT INTO SM_EIGN
	VALUES ("cd578d26-c528-4867-9d12-a0dd8bb2c794",
	"17b1c4fa-93e9-47e3-ac10-49978234d41f",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("cd578d26-c528-4867-9d12-a0dd8bb2c794",
	"17b1c4fa-93e9-47e3-ac10-49978234d41f",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_SEME
	VALUES ("cd578d26-c528-4867-9d12-a0dd8bb2c794",
	"7fd3414c-86ea-4c63-8b87-40d1ca300b2b",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_EIGN
	VALUES ("cd578d26-c528-4867-9d12-a0dd8bb2c794",
	"5109ee3b-8321-4f83-91d6-8bd8fa58df34",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("cd578d26-c528-4867-9d12-a0dd8bb2c794",
	"5109ee3b-8321-4f83-91d6-8bd8fa58df34",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_CH
	VALUES ("cd578d26-c528-4867-9d12-a0dd8bb2c794",
	"e5418def-fa9e-4bf9-9a84-924ea2d35cc0",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("cd578d26-c528-4867-9d12-a0dd8bb2c794",
	"e5418def-fa9e-4bf9-9a84-924ea2d35cc0",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_CH
	VALUES ("cd578d26-c528-4867-9d12-a0dd8bb2c794",
	"be59427c-1d54-4b90-a05a-a84c560328ad",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("cd578d26-c528-4867-9d12-a0dd8bb2c794",
	"be59427c-1d54-4b90-a05a-a84c560328ad",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_CH
	VALUES ("cd578d26-c528-4867-9d12-a0dd8bb2c794",
	"3d9fb728-1f2f-4994-b8de-ef15a8932490",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("cd578d26-c528-4867-9d12-a0dd8bb2c794",
	"3d9fb728-1f2f-4994-b8de-ef15a8932490",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_STATE
	VALUES ("99cf819c-57ce-491f-8e16-9ce51a02d744",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000",
	'Compound Expressions Using Transformer Invocations',
	6,
	0);
INSERT INTO SM_EIGN
	VALUES ("99cf819c-57ce-491f-8e16-9ce51a02d744",
	"17b1c4fa-93e9-47e3-ac10-49978234d41f",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("99cf819c-57ce-491f-8e16-9ce51a02d744",
	"17b1c4fa-93e9-47e3-ac10-49978234d41f",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_SEME
	VALUES ("99cf819c-57ce-491f-8e16-9ce51a02d744",
	"7fd3414c-86ea-4c63-8b87-40d1ca300b2b",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_EIGN
	VALUES ("99cf819c-57ce-491f-8e16-9ce51a02d744",
	"5109ee3b-8321-4f83-91d6-8bd8fa58df34",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("99cf819c-57ce-491f-8e16-9ce51a02d744",
	"5109ee3b-8321-4f83-91d6-8bd8fa58df34",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_CH
	VALUES ("99cf819c-57ce-491f-8e16-9ce51a02d744",
	"e5418def-fa9e-4bf9-9a84-924ea2d35cc0",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("99cf819c-57ce-491f-8e16-9ce51a02d744",
	"e5418def-fa9e-4bf9-9a84-924ea2d35cc0",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_CH
	VALUES ("99cf819c-57ce-491f-8e16-9ce51a02d744",
	"be59427c-1d54-4b90-a05a-a84c560328ad",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("99cf819c-57ce-491f-8e16-9ce51a02d744",
	"be59427c-1d54-4b90-a05a-a84c560328ad",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_CH
	VALUES ("99cf819c-57ce-491f-8e16-9ce51a02d744",
	"3d9fb728-1f2f-4994-b8de-ef15a8932490",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("99cf819c-57ce-491f-8e16-9ce51a02d744",
	"3d9fb728-1f2f-4994-b8de-ef15a8932490",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_STATE
	VALUES ("cb0d6055-dabf-4c4e-9450-6b83abb81bc7",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000",
	'Compound Expressions Using Bridge Invocations',
	7,
	0);
INSERT INTO SM_EIGN
	VALUES ("cb0d6055-dabf-4c4e-9450-6b83abb81bc7",
	"17b1c4fa-93e9-47e3-ac10-49978234d41f",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("cb0d6055-dabf-4c4e-9450-6b83abb81bc7",
	"17b1c4fa-93e9-47e3-ac10-49978234d41f",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_SEME
	VALUES ("cb0d6055-dabf-4c4e-9450-6b83abb81bc7",
	"7fd3414c-86ea-4c63-8b87-40d1ca300b2b",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_EIGN
	VALUES ("cb0d6055-dabf-4c4e-9450-6b83abb81bc7",
	"5109ee3b-8321-4f83-91d6-8bd8fa58df34",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("cb0d6055-dabf-4c4e-9450-6b83abb81bc7",
	"5109ee3b-8321-4f83-91d6-8bd8fa58df34",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_CH
	VALUES ("cb0d6055-dabf-4c4e-9450-6b83abb81bc7",
	"e5418def-fa9e-4bf9-9a84-924ea2d35cc0",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("cb0d6055-dabf-4c4e-9450-6b83abb81bc7",
	"e5418def-fa9e-4bf9-9a84-924ea2d35cc0",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_CH
	VALUES ("cb0d6055-dabf-4c4e-9450-6b83abb81bc7",
	"be59427c-1d54-4b90-a05a-a84c560328ad",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("cb0d6055-dabf-4c4e-9450-6b83abb81bc7",
	"be59427c-1d54-4b90-a05a-a84c560328ad",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_CH
	VALUES ("cb0d6055-dabf-4c4e-9450-6b83abb81bc7",
	"3d9fb728-1f2f-4994-b8de-ef15a8932490",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("cb0d6055-dabf-4c4e-9450-6b83abb81bc7",
	"3d9fb728-1f2f-4994-b8de-ef15a8932490",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_STATE
	VALUES ("f9c96bd8-6bd7-459e-9f9d-3ab33c2295b5",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000",
	'Order of Operations',
	8,
	0);
INSERT INTO SM_EIGN
	VALUES ("f9c96bd8-6bd7-459e-9f9d-3ab33c2295b5",
	"17b1c4fa-93e9-47e3-ac10-49978234d41f",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("f9c96bd8-6bd7-459e-9f9d-3ab33c2295b5",
	"17b1c4fa-93e9-47e3-ac10-49978234d41f",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_SEME
	VALUES ("f9c96bd8-6bd7-459e-9f9d-3ab33c2295b5",
	"7fd3414c-86ea-4c63-8b87-40d1ca300b2b",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_EIGN
	VALUES ("f9c96bd8-6bd7-459e-9f9d-3ab33c2295b5",
	"5109ee3b-8321-4f83-91d6-8bd8fa58df34",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("f9c96bd8-6bd7-459e-9f9d-3ab33c2295b5",
	"5109ee3b-8321-4f83-91d6-8bd8fa58df34",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_CH
	VALUES ("f9c96bd8-6bd7-459e-9f9d-3ab33c2295b5",
	"e5418def-fa9e-4bf9-9a84-924ea2d35cc0",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("f9c96bd8-6bd7-459e-9f9d-3ab33c2295b5",
	"e5418def-fa9e-4bf9-9a84-924ea2d35cc0",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_CH
	VALUES ("f9c96bd8-6bd7-459e-9f9d-3ab33c2295b5",
	"be59427c-1d54-4b90-a05a-a84c560328ad",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("f9c96bd8-6bd7-459e-9f9d-3ab33c2295b5",
	"be59427c-1d54-4b90-a05a-a84c560328ad",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_CH
	VALUES ("f9c96bd8-6bd7-459e-9f9d-3ab33c2295b5",
	"3d9fb728-1f2f-4994-b8de-ef15a8932490",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("f9c96bd8-6bd7-459e-9f9d-3ab33c2295b5",
	"3d9fb728-1f2f-4994-b8de-ef15a8932490",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_STATE
	VALUES ("b4856d67-433a-4a0f-b9dc-f632cd2c36eb",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000",
	'Stress Limits of Compound Expressions',
	9,
	0);
INSERT INTO SM_EIGN
	VALUES ("b4856d67-433a-4a0f-b9dc-f632cd2c36eb",
	"17b1c4fa-93e9-47e3-ac10-49978234d41f",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("b4856d67-433a-4a0f-b9dc-f632cd2c36eb",
	"17b1c4fa-93e9-47e3-ac10-49978234d41f",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_SEME
	VALUES ("b4856d67-433a-4a0f-b9dc-f632cd2c36eb",
	"7fd3414c-86ea-4c63-8b87-40d1ca300b2b",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_EIGN
	VALUES ("b4856d67-433a-4a0f-b9dc-f632cd2c36eb",
	"5109ee3b-8321-4f83-91d6-8bd8fa58df34",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("b4856d67-433a-4a0f-b9dc-f632cd2c36eb",
	"5109ee3b-8321-4f83-91d6-8bd8fa58df34",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_CH
	VALUES ("b4856d67-433a-4a0f-b9dc-f632cd2c36eb",
	"e5418def-fa9e-4bf9-9a84-924ea2d35cc0",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("b4856d67-433a-4a0f-b9dc-f632cd2c36eb",
	"e5418def-fa9e-4bf9-9a84-924ea2d35cc0",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_CH
	VALUES ("b4856d67-433a-4a0f-b9dc-f632cd2c36eb",
	"be59427c-1d54-4b90-a05a-a84c560328ad",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("b4856d67-433a-4a0f-b9dc-f632cd2c36eb",
	"be59427c-1d54-4b90-a05a-a84c560328ad",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_CH
	VALUES ("b4856d67-433a-4a0f-b9dc-f632cd2c36eb",
	"3d9fb728-1f2f-4994-b8de-ef15a8932490",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("b4856d67-433a-4a0f-b9dc-f632cd2c36eb",
	"3d9fb728-1f2f-4994-b8de-ef15a8932490",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_STATE
	VALUES ("d608d1fa-09f3-494a-9e55-7d2f25ff1438",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000",
	'Bridges Within Expressions',
	11,
	0);
INSERT INTO SM_EIGN
	VALUES ("d608d1fa-09f3-494a-9e55-7d2f25ff1438",
	"17b1c4fa-93e9-47e3-ac10-49978234d41f",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("d608d1fa-09f3-494a-9e55-7d2f25ff1438",
	"17b1c4fa-93e9-47e3-ac10-49978234d41f",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_SEME
	VALUES ("d608d1fa-09f3-494a-9e55-7d2f25ff1438",
	"7fd3414c-86ea-4c63-8b87-40d1ca300b2b",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_EIGN
	VALUES ("d608d1fa-09f3-494a-9e55-7d2f25ff1438",
	"5109ee3b-8321-4f83-91d6-8bd8fa58df34",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("d608d1fa-09f3-494a-9e55-7d2f25ff1438",
	"5109ee3b-8321-4f83-91d6-8bd8fa58df34",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_CH
	VALUES ("d608d1fa-09f3-494a-9e55-7d2f25ff1438",
	"e5418def-fa9e-4bf9-9a84-924ea2d35cc0",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("d608d1fa-09f3-494a-9e55-7d2f25ff1438",
	"e5418def-fa9e-4bf9-9a84-924ea2d35cc0",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_CH
	VALUES ("d608d1fa-09f3-494a-9e55-7d2f25ff1438",
	"be59427c-1d54-4b90-a05a-a84c560328ad",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("d608d1fa-09f3-494a-9e55-7d2f25ff1438",
	"be59427c-1d54-4b90-a05a-a84c560328ad",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_CH
	VALUES ("d608d1fa-09f3-494a-9e55-7d2f25ff1438",
	"3d9fb728-1f2f-4994-b8de-ef15a8932490",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("d608d1fa-09f3-494a-9e55-7d2f25ff1438",
	"3d9fb728-1f2f-4994-b8de-ef15a8932490",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_STATE
	VALUES ("df7d54b8-0ad7-41ad-b8e3-2ce23bb315af",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000",
	'Transforms Within Expressions',
	12,
	0);
INSERT INTO SM_EIGN
	VALUES ("df7d54b8-0ad7-41ad-b8e3-2ce23bb315af",
	"17b1c4fa-93e9-47e3-ac10-49978234d41f",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("df7d54b8-0ad7-41ad-b8e3-2ce23bb315af",
	"17b1c4fa-93e9-47e3-ac10-49978234d41f",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_EIGN
	VALUES ("df7d54b8-0ad7-41ad-b8e3-2ce23bb315af",
	"7fd3414c-86ea-4c63-8b87-40d1ca300b2b",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("df7d54b8-0ad7-41ad-b8e3-2ce23bb315af",
	"7fd3414c-86ea-4c63-8b87-40d1ca300b2b",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_EIGN
	VALUES ("df7d54b8-0ad7-41ad-b8e3-2ce23bb315af",
	"5109ee3b-8321-4f83-91d6-8bd8fa58df34",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("df7d54b8-0ad7-41ad-b8e3-2ce23bb315af",
	"5109ee3b-8321-4f83-91d6-8bd8fa58df34",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_SEME
	VALUES ("df7d54b8-0ad7-41ad-b8e3-2ce23bb315af",
	"e5418def-fa9e-4bf9-9a84-924ea2d35cc0",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_CH
	VALUES ("df7d54b8-0ad7-41ad-b8e3-2ce23bb315af",
	"be59427c-1d54-4b90-a05a-a84c560328ad",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("df7d54b8-0ad7-41ad-b8e3-2ce23bb315af",
	"be59427c-1d54-4b90-a05a-a84c560328ad",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_CH
	VALUES ("df7d54b8-0ad7-41ad-b8e3-2ce23bb315af",
	"3d9fb728-1f2f-4994-b8de-ef15a8932490",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("df7d54b8-0ad7-41ad-b8e3-2ce23bb315af",
	"3d9fb728-1f2f-4994-b8de-ef15a8932490",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_STATE
	VALUES ("5b5539aa-4c6c-409b-bf63-624d2d811d4a",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000",
	'Combinine Real and Integer Data Types',
	13,
	1);
INSERT INTO SM_EIGN
	VALUES ("5b5539aa-4c6c-409b-bf63-624d2d811d4a",
	"17b1c4fa-93e9-47e3-ac10-49978234d41f",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("5b5539aa-4c6c-409b-bf63-624d2d811d4a",
	"17b1c4fa-93e9-47e3-ac10-49978234d41f",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_EIGN
	VALUES ("5b5539aa-4c6c-409b-bf63-624d2d811d4a",
	"7fd3414c-86ea-4c63-8b87-40d1ca300b2b",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("5b5539aa-4c6c-409b-bf63-624d2d811d4a",
	"7fd3414c-86ea-4c63-8b87-40d1ca300b2b",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_EIGN
	VALUES ("5b5539aa-4c6c-409b-bf63-624d2d811d4a",
	"5109ee3b-8321-4f83-91d6-8bd8fa58df34",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("5b5539aa-4c6c-409b-bf63-624d2d811d4a",
	"5109ee3b-8321-4f83-91d6-8bd8fa58df34",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_CH
	VALUES ("5b5539aa-4c6c-409b-bf63-624d2d811d4a",
	"e5418def-fa9e-4bf9-9a84-924ea2d35cc0",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("5b5539aa-4c6c-409b-bf63-624d2d811d4a",
	"e5418def-fa9e-4bf9-9a84-924ea2d35cc0",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_CH
	VALUES ("5b5539aa-4c6c-409b-bf63-624d2d811d4a",
	"be59427c-1d54-4b90-a05a-a84c560328ad",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("5b5539aa-4c6c-409b-bf63-624d2d811d4a",
	"be59427c-1d54-4b90-a05a-a84c560328ad",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_CH
	VALUES ("5b5539aa-4c6c-409b-bf63-624d2d811d4a",
	"3d9fb728-1f2f-4994-b8de-ef15a8932490",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("5b5539aa-4c6c-409b-bf63-624d2d811d4a",
	"3d9fb728-1f2f-4994-b8de-ef15a8932490",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_STATE
	VALUES ("9a6ec027-95e8-426c-bcfc-c5c617b7497e",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000",
	'Unary Ops',
	14,
	0);
INSERT INTO SM_CH
	VALUES ("9a6ec027-95e8-426c-bcfc-c5c617b7497e",
	"17b1c4fa-93e9-47e3-ac10-49978234d41f",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("9a6ec027-95e8-426c-bcfc-c5c617b7497e",
	"17b1c4fa-93e9-47e3-ac10-49978234d41f",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_EIGN
	VALUES ("9a6ec027-95e8-426c-bcfc-c5c617b7497e",
	"7fd3414c-86ea-4c63-8b87-40d1ca300b2b",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("9a6ec027-95e8-426c-bcfc-c5c617b7497e",
	"7fd3414c-86ea-4c63-8b87-40d1ca300b2b",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_CH
	VALUES ("9a6ec027-95e8-426c-bcfc-c5c617b7497e",
	"5109ee3b-8321-4f83-91d6-8bd8fa58df34",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("9a6ec027-95e8-426c-bcfc-c5c617b7497e",
	"5109ee3b-8321-4f83-91d6-8bd8fa58df34",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_SEME
	VALUES ("9a6ec027-95e8-426c-bcfc-c5c617b7497e",
	"e5418def-fa9e-4bf9-9a84-924ea2d35cc0",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_CH
	VALUES ("9a6ec027-95e8-426c-bcfc-c5c617b7497e",
	"be59427c-1d54-4b90-a05a-a84c560328ad",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("9a6ec027-95e8-426c-bcfc-c5c617b7497e",
	"be59427c-1d54-4b90-a05a-a84c560328ad",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_CH
	VALUES ("9a6ec027-95e8-426c-bcfc-c5c617b7497e",
	"3d9fb728-1f2f-4994-b8de-ef15a8932490",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("9a6ec027-95e8-426c-bcfc-c5c617b7497e",
	"3d9fb728-1f2f-4994-b8de-ef15a8932490",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_STATE
	VALUES ("87d30ca1-58fa-4102-8f5e-2507b306b940",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000",
	'If Expressions',
	15,
	0);
INSERT INTO SM_CH
	VALUES ("87d30ca1-58fa-4102-8f5e-2507b306b940",
	"17b1c4fa-93e9-47e3-ac10-49978234d41f",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("87d30ca1-58fa-4102-8f5e-2507b306b940",
	"17b1c4fa-93e9-47e3-ac10-49978234d41f",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_EIGN
	VALUES ("87d30ca1-58fa-4102-8f5e-2507b306b940",
	"7fd3414c-86ea-4c63-8b87-40d1ca300b2b",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("87d30ca1-58fa-4102-8f5e-2507b306b940",
	"7fd3414c-86ea-4c63-8b87-40d1ca300b2b",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_CH
	VALUES ("87d30ca1-58fa-4102-8f5e-2507b306b940",
	"5109ee3b-8321-4f83-91d6-8bd8fa58df34",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("87d30ca1-58fa-4102-8f5e-2507b306b940",
	"5109ee3b-8321-4f83-91d6-8bd8fa58df34",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_SEME
	VALUES ("87d30ca1-58fa-4102-8f5e-2507b306b940",
	"e5418def-fa9e-4bf9-9a84-924ea2d35cc0",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_CH
	VALUES ("87d30ca1-58fa-4102-8f5e-2507b306b940",
	"be59427c-1d54-4b90-a05a-a84c560328ad",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("87d30ca1-58fa-4102-8f5e-2507b306b940",
	"be59427c-1d54-4b90-a05a-a84c560328ad",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_CH
	VALUES ("87d30ca1-58fa-4102-8f5e-2507b306b940",
	"3d9fb728-1f2f-4994-b8de-ef15a8932490",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("87d30ca1-58fa-4102-8f5e-2507b306b940",
	"3d9fb728-1f2f-4994-b8de-ef15a8932490",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_STATE
	VALUES ("29616112-4df6-4783-af08-bcb54bce972a",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000",
	'Expressions Within Parameters',
	16,
	0);
INSERT INTO SM_CH
	VALUES ("29616112-4df6-4783-af08-bcb54bce972a",
	"17b1c4fa-93e9-47e3-ac10-49978234d41f",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("29616112-4df6-4783-af08-bcb54bce972a",
	"17b1c4fa-93e9-47e3-ac10-49978234d41f",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_CH
	VALUES ("29616112-4df6-4783-af08-bcb54bce972a",
	"7fd3414c-86ea-4c63-8b87-40d1ca300b2b",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("29616112-4df6-4783-af08-bcb54bce972a",
	"7fd3414c-86ea-4c63-8b87-40d1ca300b2b",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_CH
	VALUES ("29616112-4df6-4783-af08-bcb54bce972a",
	"5109ee3b-8321-4f83-91d6-8bd8fa58df34",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("29616112-4df6-4783-af08-bcb54bce972a",
	"5109ee3b-8321-4f83-91d6-8bd8fa58df34",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_CH
	VALUES ("29616112-4df6-4783-af08-bcb54bce972a",
	"e5418def-fa9e-4bf9-9a84-924ea2d35cc0",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("29616112-4df6-4783-af08-bcb54bce972a",
	"e5418def-fa9e-4bf9-9a84-924ea2d35cc0",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_SEME
	VALUES ("29616112-4df6-4783-af08-bcb54bce972a",
	"be59427c-1d54-4b90-a05a-a84c560328ad",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_SEME
	VALUES ("29616112-4df6-4783-af08-bcb54bce972a",
	"3d9fb728-1f2f-4994-b8de-ef15a8932490",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_STATE
	VALUES ("45d77703-d3e3-43ee-b5cd-5049112b265c",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000",
	'Count Acks from Bool Event',
	17,
	0);
INSERT INTO SM_CH
	VALUES ("45d77703-d3e3-43ee-b5cd-5049112b265c",
	"17b1c4fa-93e9-47e3-ac10-49978234d41f",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("45d77703-d3e3-43ee-b5cd-5049112b265c",
	"17b1c4fa-93e9-47e3-ac10-49978234d41f",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_CH
	VALUES ("45d77703-d3e3-43ee-b5cd-5049112b265c",
	"7fd3414c-86ea-4c63-8b87-40d1ca300b2b",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("45d77703-d3e3-43ee-b5cd-5049112b265c",
	"7fd3414c-86ea-4c63-8b87-40d1ca300b2b",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_CH
	VALUES ("45d77703-d3e3-43ee-b5cd-5049112b265c",
	"5109ee3b-8321-4f83-91d6-8bd8fa58df34",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("45d77703-d3e3-43ee-b5cd-5049112b265c",
	"5109ee3b-8321-4f83-91d6-8bd8fa58df34",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_SEME
	VALUES ("45d77703-d3e3-43ee-b5cd-5049112b265c",
	"e5418def-fa9e-4bf9-9a84-924ea2d35cc0",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_SEME
	VALUES ("45d77703-d3e3-43ee-b5cd-5049112b265c",
	"be59427c-1d54-4b90-a05a-a84c560328ad",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_SEME
	VALUES ("45d77703-d3e3-43ee-b5cd-5049112b265c",
	"3d9fb728-1f2f-4994-b8de-ef15a8932490",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_STATE
	VALUES ("66142144-e6dc-4d4f-a593-5dd7963818a0",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000",
	'Count Acks from Int Event',
	18,
	0);
INSERT INTO SM_CH
	VALUES ("66142144-e6dc-4d4f-a593-5dd7963818a0",
	"17b1c4fa-93e9-47e3-ac10-49978234d41f",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("66142144-e6dc-4d4f-a593-5dd7963818a0",
	"17b1c4fa-93e9-47e3-ac10-49978234d41f",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_CH
	VALUES ("66142144-e6dc-4d4f-a593-5dd7963818a0",
	"7fd3414c-86ea-4c63-8b87-40d1ca300b2b",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("66142144-e6dc-4d4f-a593-5dd7963818a0",
	"7fd3414c-86ea-4c63-8b87-40d1ca300b2b",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_CH
	VALUES ("66142144-e6dc-4d4f-a593-5dd7963818a0",
	"5109ee3b-8321-4f83-91d6-8bd8fa58df34",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("66142144-e6dc-4d4f-a593-5dd7963818a0",
	"5109ee3b-8321-4f83-91d6-8bd8fa58df34",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_SEME
	VALUES ("66142144-e6dc-4d4f-a593-5dd7963818a0",
	"e5418def-fa9e-4bf9-9a84-924ea2d35cc0",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_SEME
	VALUES ("66142144-e6dc-4d4f-a593-5dd7963818a0",
	"be59427c-1d54-4b90-a05a-a84c560328ad",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_SEME
	VALUES ("66142144-e6dc-4d4f-a593-5dd7963818a0",
	"3d9fb728-1f2f-4994-b8de-ef15a8932490",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_STATE
	VALUES ("524fae2c-6c1e-4c64-a790-5020c19fc83d",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000",
	'More Expressions within Parms',
	19,
	0);
INSERT INTO SM_CH
	VALUES ("524fae2c-6c1e-4c64-a790-5020c19fc83d",
	"17b1c4fa-93e9-47e3-ac10-49978234d41f",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("524fae2c-6c1e-4c64-a790-5020c19fc83d",
	"17b1c4fa-93e9-47e3-ac10-49978234d41f",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_CH
	VALUES ("524fae2c-6c1e-4c64-a790-5020c19fc83d",
	"7fd3414c-86ea-4c63-8b87-40d1ca300b2b",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("524fae2c-6c1e-4c64-a790-5020c19fc83d",
	"7fd3414c-86ea-4c63-8b87-40d1ca300b2b",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_CH
	VALUES ("524fae2c-6c1e-4c64-a790-5020c19fc83d",
	"5109ee3b-8321-4f83-91d6-8bd8fa58df34",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("524fae2c-6c1e-4c64-a790-5020c19fc83d",
	"5109ee3b-8321-4f83-91d6-8bd8fa58df34",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_CH
	VALUES ("524fae2c-6c1e-4c64-a790-5020c19fc83d",
	"e5418def-fa9e-4bf9-9a84-924ea2d35cc0",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("524fae2c-6c1e-4c64-a790-5020c19fc83d",
	"e5418def-fa9e-4bf9-9a84-924ea2d35cc0",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_SEME
	VALUES ("524fae2c-6c1e-4c64-a790-5020c19fc83d",
	"be59427c-1d54-4b90-a05a-a84c560328ad",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_SEME
	VALUES ("524fae2c-6c1e-4c64-a790-5020c19fc83d",
	"3d9fb728-1f2f-4994-b8de-ef15a8932490",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_STATE
	VALUES ("728b7882-730f-41c1-ae4e-7ab03e7f35e6",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000",
	'Bool Event Acks',
	20,
	0);
INSERT INTO SM_CH
	VALUES ("728b7882-730f-41c1-ae4e-7ab03e7f35e6",
	"17b1c4fa-93e9-47e3-ac10-49978234d41f",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("728b7882-730f-41c1-ae4e-7ab03e7f35e6",
	"17b1c4fa-93e9-47e3-ac10-49978234d41f",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_CH
	VALUES ("728b7882-730f-41c1-ae4e-7ab03e7f35e6",
	"7fd3414c-86ea-4c63-8b87-40d1ca300b2b",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("728b7882-730f-41c1-ae4e-7ab03e7f35e6",
	"7fd3414c-86ea-4c63-8b87-40d1ca300b2b",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_CH
	VALUES ("728b7882-730f-41c1-ae4e-7ab03e7f35e6",
	"5109ee3b-8321-4f83-91d6-8bd8fa58df34",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("728b7882-730f-41c1-ae4e-7ab03e7f35e6",
	"5109ee3b-8321-4f83-91d6-8bd8fa58df34",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_SEME
	VALUES ("728b7882-730f-41c1-ae4e-7ab03e7f35e6",
	"e5418def-fa9e-4bf9-9a84-924ea2d35cc0",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_SEME
	VALUES ("728b7882-730f-41c1-ae4e-7ab03e7f35e6",
	"be59427c-1d54-4b90-a05a-a84c560328ad",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_SEME
	VALUES ("728b7882-730f-41c1-ae4e-7ab03e7f35e6",
	"3d9fb728-1f2f-4994-b8de-ef15a8932490",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_STATE
	VALUES ("cbcfa0d1-6fac-454e-924b-9c9916d2bd1f",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000",
	'Int Event Acks',
	21,
	0);
INSERT INTO SM_CH
	VALUES ("cbcfa0d1-6fac-454e-924b-9c9916d2bd1f",
	"17b1c4fa-93e9-47e3-ac10-49978234d41f",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("cbcfa0d1-6fac-454e-924b-9c9916d2bd1f",
	"17b1c4fa-93e9-47e3-ac10-49978234d41f",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_CH
	VALUES ("cbcfa0d1-6fac-454e-924b-9c9916d2bd1f",
	"7fd3414c-86ea-4c63-8b87-40d1ca300b2b",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("cbcfa0d1-6fac-454e-924b-9c9916d2bd1f",
	"7fd3414c-86ea-4c63-8b87-40d1ca300b2b",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_CH
	VALUES ("cbcfa0d1-6fac-454e-924b-9c9916d2bd1f",
	"5109ee3b-8321-4f83-91d6-8bd8fa58df34",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("cbcfa0d1-6fac-454e-924b-9c9916d2bd1f",
	"5109ee3b-8321-4f83-91d6-8bd8fa58df34",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_SEME
	VALUES ("cbcfa0d1-6fac-454e-924b-9c9916d2bd1f",
	"e5418def-fa9e-4bf9-9a84-924ea2d35cc0",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_SEME
	VALUES ("cbcfa0d1-6fac-454e-924b-9c9916d2bd1f",
	"be59427c-1d54-4b90-a05a-a84c560328ad",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_SEME
	VALUES ("cbcfa0d1-6fac-454e-924b-9c9916d2bd1f",
	"3d9fb728-1f2f-4994-b8de-ef15a8932490",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_STATE
	VALUES ("0c4ad770-749f-491c-b878-9e1fad95531e",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000",
	'Compound Expressions Using inst_ref_set<Object>',
	22,
	0);
INSERT INTO SM_EIGN
	VALUES ("0c4ad770-749f-491c-b878-9e1fad95531e",
	"17b1c4fa-93e9-47e3-ac10-49978234d41f",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("0c4ad770-749f-491c-b878-9e1fad95531e",
	"17b1c4fa-93e9-47e3-ac10-49978234d41f",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_SEME
	VALUES ("0c4ad770-749f-491c-b878-9e1fad95531e",
	"7fd3414c-86ea-4c63-8b87-40d1ca300b2b",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_EIGN
	VALUES ("0c4ad770-749f-491c-b878-9e1fad95531e",
	"5109ee3b-8321-4f83-91d6-8bd8fa58df34",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("0c4ad770-749f-491c-b878-9e1fad95531e",
	"5109ee3b-8321-4f83-91d6-8bd8fa58df34",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_EIGN
	VALUES ("0c4ad770-749f-491c-b878-9e1fad95531e",
	"e5418def-fa9e-4bf9-9a84-924ea2d35cc0",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("0c4ad770-749f-491c-b878-9e1fad95531e",
	"e5418def-fa9e-4bf9-9a84-924ea2d35cc0",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_EIGN
	VALUES ("0c4ad770-749f-491c-b878-9e1fad95531e",
	"be59427c-1d54-4b90-a05a-a84c560328ad",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("0c4ad770-749f-491c-b878-9e1fad95531e",
	"be59427c-1d54-4b90-a05a-a84c560328ad",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_EIGN
	VALUES ("0c4ad770-749f-491c-b878-9e1fad95531e",
	"3d9fb728-1f2f-4994-b8de-ef15a8932490",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("0c4ad770-749f-491c-b878-9e1fad95531e",
	"3d9fb728-1f2f-4994-b8de-ef15a8932490",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_STATE
	VALUES ("b68b373c-42d2-47f2-91fd-5fca65f3b979",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000",
	'Compound Expressions Using inst_ref<Object>',
	23,
	0);
INSERT INTO SM_EIGN
	VALUES ("b68b373c-42d2-47f2-91fd-5fca65f3b979",
	"17b1c4fa-93e9-47e3-ac10-49978234d41f",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("b68b373c-42d2-47f2-91fd-5fca65f3b979",
	"17b1c4fa-93e9-47e3-ac10-49978234d41f",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_SEME
	VALUES ("b68b373c-42d2-47f2-91fd-5fca65f3b979",
	"7fd3414c-86ea-4c63-8b87-40d1ca300b2b",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_EIGN
	VALUES ("b68b373c-42d2-47f2-91fd-5fca65f3b979",
	"5109ee3b-8321-4f83-91d6-8bd8fa58df34",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("b68b373c-42d2-47f2-91fd-5fca65f3b979",
	"5109ee3b-8321-4f83-91d6-8bd8fa58df34",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_EIGN
	VALUES ("b68b373c-42d2-47f2-91fd-5fca65f3b979",
	"e5418def-fa9e-4bf9-9a84-924ea2d35cc0",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("b68b373c-42d2-47f2-91fd-5fca65f3b979",
	"e5418def-fa9e-4bf9-9a84-924ea2d35cc0",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_EIGN
	VALUES ("b68b373c-42d2-47f2-91fd-5fca65f3b979",
	"be59427c-1d54-4b90-a05a-a84c560328ad",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("b68b373c-42d2-47f2-91fd-5fca65f3b979",
	"be59427c-1d54-4b90-a05a-a84c560328ad",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_EIGN
	VALUES ("b68b373c-42d2-47f2-91fd-5fca65f3b979",
	"3d9fb728-1f2f-4994-b8de-ef15a8932490",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("b68b373c-42d2-47f2-91fd-5fca65f3b979",
	"3d9fb728-1f2f-4994-b8de-ef15a8932490",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_NSTXN
	VALUES ("3655d86a-ecd8-4a12-8738-c84d1545e543",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"bfc299c3-5fe5-4498-ab77-97d2d5b7896d",
	"17b1c4fa-93e9-47e3-ac10-49978234d41f",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_TXN
	VALUES ("3655d86a-ecd8-4a12-8738-c84d1545e543",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"bfc299c3-5fe5-4498-ab77-97d2d5b7896d",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_NSTXN
	VALUES ("bd83c792-3ef8-437a-92d4-c11af4887e99",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"bfc299c3-5fe5-4498-ab77-97d2d5b7896d",
	"7fd3414c-86ea-4c63-8b87-40d1ca300b2b",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_TXN
	VALUES ("bd83c792-3ef8-437a-92d4-c11af4887e99",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"038e88f8-7ace-47ef-a50f-f888460af294",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_NSTXN
	VALUES ("6b9abeec-4070-4547-93fa-cdf507839249",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"038e88f8-7ace-47ef-a50f-f888460af294",
	"7fd3414c-86ea-4c63-8b87-40d1ca300b2b",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_TXN
	VALUES ("6b9abeec-4070-4547-93fa-cdf507839249",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"41349bad-35a3-45e9-87ec-9669abc548e0",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_NSTXN
	VALUES ("08805801-aa2c-414b-9a65-2a1253115452",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"fe52ac30-3fd7-4731-ad00-5b83a8efed4d",
	"7fd3414c-86ea-4c63-8b87-40d1ca300b2b",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_TXN
	VALUES ("08805801-aa2c-414b-9a65-2a1253115452",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"cd578d26-c528-4867-9d12-a0dd8bb2c794",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_NSTXN
	VALUES ("7a5764bd-3f87-4b45-9a0a-771d16926045",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"cd578d26-c528-4867-9d12-a0dd8bb2c794",
	"7fd3414c-86ea-4c63-8b87-40d1ca300b2b",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_TXN
	VALUES ("7a5764bd-3f87-4b45-9a0a-771d16926045",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"99cf819c-57ce-491f-8e16-9ce51a02d744",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_NSTXN
	VALUES ("3996d6de-1bf5-4f5c-af57-cc5fb9bd4f68",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"99cf819c-57ce-491f-8e16-9ce51a02d744",
	"7fd3414c-86ea-4c63-8b87-40d1ca300b2b",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_TXN
	VALUES ("3996d6de-1bf5-4f5c-af57-cc5fb9bd4f68",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"cb0d6055-dabf-4c4e-9450-6b83abb81bc7",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_NSTXN
	VALUES ("374e427a-f022-4a0f-9e52-7b37877478d4",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"cb0d6055-dabf-4c4e-9450-6b83abb81bc7",
	"7fd3414c-86ea-4c63-8b87-40d1ca300b2b",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_TXN
	VALUES ("374e427a-f022-4a0f-9e52-7b37877478d4",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"f9c96bd8-6bd7-459e-9f9d-3ab33c2295b5",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_NSTXN
	VALUES ("764cd8a3-38fb-49a0-b07c-2ff52d3d45b8",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"d608d1fa-09f3-494a-9e55-7d2f25ff1438",
	"7fd3414c-86ea-4c63-8b87-40d1ca300b2b",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_TXN
	VALUES ("764cd8a3-38fb-49a0-b07c-2ff52d3d45b8",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"df7d54b8-0ad7-41ad-b8e3-2ce23bb315af",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_NSTXN
	VALUES ("07decc7e-e56a-4381-93f8-8abfee46840c",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"41349bad-35a3-45e9-87ec-9669abc548e0",
	"5109ee3b-8321-4f83-91d6-8bd8fa58df34",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_TXN
	VALUES ("07decc7e-e56a-4381-93f8-8abfee46840c",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"fe52ac30-3fd7-4731-ad00-5b83a8efed4d",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_NSTXN
	VALUES ("328063bb-b837-409d-9b21-dfd80704d257",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"b4856d67-433a-4a0f-b9dc-f632cd2c36eb",
	"7fd3414c-86ea-4c63-8b87-40d1ca300b2b",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_TXN
	VALUES ("328063bb-b837-409d-9b21-dfd80704d257",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"d608d1fa-09f3-494a-9e55-7d2f25ff1438",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_NSTXN
	VALUES ("ee780f64-2976-42c8-86c3-588512e0fef4",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"df7d54b8-0ad7-41ad-b8e3-2ce23bb315af",
	"e5418def-fa9e-4bf9-9a84-924ea2d35cc0",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_TXN
	VALUES ("ee780f64-2976-42c8-86c3-588512e0fef4",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"9a6ec027-95e8-426c-bcfc-c5c617b7497e",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_NSTXN
	VALUES ("83f1e1e3-724d-4c21-93e9-d65ecb05c0a2",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"9a6ec027-95e8-426c-bcfc-c5c617b7497e",
	"e5418def-fa9e-4bf9-9a84-924ea2d35cc0",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_TXN
	VALUES ("83f1e1e3-724d-4c21-93e9-d65ecb05c0a2",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"87d30ca1-58fa-4102-8f5e-2507b306b940",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_NSTXN
	VALUES ("cded7adf-872f-47a7-bbf1-c73866058db1",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"87d30ca1-58fa-4102-8f5e-2507b306b940",
	"e5418def-fa9e-4bf9-9a84-924ea2d35cc0",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_TXN
	VALUES ("cded7adf-872f-47a7-bbf1-c73866058db1",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"29616112-4df6-4783-af08-bcb54bce972a",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_NSTXN
	VALUES ("75982f72-184c-4512-a8c5-efb1c205cf0c",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"29616112-4df6-4783-af08-bcb54bce972a",
	"be59427c-1d54-4b90-a05a-a84c560328ad",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_TXN
	VALUES ("75982f72-184c-4512-a8c5-efb1c205cf0c",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"45d77703-d3e3-43ee-b5cd-5049112b265c",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_NSTXN
	VALUES ("49d4b123-5205-4fd5-b246-b05ab91a78b7",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"29616112-4df6-4783-af08-bcb54bce972a",
	"3d9fb728-1f2f-4994-b8de-ef15a8932490",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_TXN
	VALUES ("49d4b123-5205-4fd5-b246-b05ab91a78b7",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"66142144-e6dc-4d4f-a593-5dd7963818a0",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_NSTXN
	VALUES ("067825df-f096-41ad-90b0-c40200cf671b",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"45d77703-d3e3-43ee-b5cd-5049112b265c",
	"3d9fb728-1f2f-4994-b8de-ef15a8932490",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_TXN
	VALUES ("067825df-f096-41ad-90b0-c40200cf671b",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"66142144-e6dc-4d4f-a593-5dd7963818a0",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_NSTXN
	VALUES ("8b62f101-a759-498c-bf73-b15fd2f582dc",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"66142144-e6dc-4d4f-a593-5dd7963818a0",
	"be59427c-1d54-4b90-a05a-a84c560328ad",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_TXN
	VALUES ("8b62f101-a759-498c-bf73-b15fd2f582dc",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"45d77703-d3e3-43ee-b5cd-5049112b265c",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_NSTXN
	VALUES ("b6b9f10b-274f-4b2d-8570-f584f6b4d47c",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"45d77703-d3e3-43ee-b5cd-5049112b265c",
	"be59427c-1d54-4b90-a05a-a84c560328ad",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_TXN
	VALUES ("b6b9f10b-274f-4b2d-8570-f584f6b4d47c",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"45d77703-d3e3-43ee-b5cd-5049112b265c",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_NSTXN
	VALUES ("1021bc60-f8ff-4c51-b941-3acf4fd98990",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"66142144-e6dc-4d4f-a593-5dd7963818a0",
	"3d9fb728-1f2f-4994-b8de-ef15a8932490",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_TXN
	VALUES ("1021bc60-f8ff-4c51-b941-3acf4fd98990",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"66142144-e6dc-4d4f-a593-5dd7963818a0",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_NSTXN
	VALUES ("8522426e-d0bb-400e-be05-ac2a8da8a082",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"66142144-e6dc-4d4f-a593-5dd7963818a0",
	"e5418def-fa9e-4bf9-9a84-924ea2d35cc0",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_TXN
	VALUES ("8522426e-d0bb-400e-be05-ac2a8da8a082",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"524fae2c-6c1e-4c64-a790-5020c19fc83d",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_NSTXN
	VALUES ("29bf3b38-2e58-43e9-97c6-e37d5a6ed2ea",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"45d77703-d3e3-43ee-b5cd-5049112b265c",
	"e5418def-fa9e-4bf9-9a84-924ea2d35cc0",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_TXN
	VALUES ("29bf3b38-2e58-43e9-97c6-e37d5a6ed2ea",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"524fae2c-6c1e-4c64-a790-5020c19fc83d",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_NSTXN
	VALUES ("194a6611-16e8-4855-9aa7-54266d5bf421",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"728b7882-730f-41c1-ae4e-7ab03e7f35e6",
	"be59427c-1d54-4b90-a05a-a84c560328ad",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_TXN
	VALUES ("194a6611-16e8-4855-9aa7-54266d5bf421",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"728b7882-730f-41c1-ae4e-7ab03e7f35e6",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_NSTXN
	VALUES ("085d387a-8d88-4012-8657-057ab08adbc8",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"cbcfa0d1-6fac-454e-924b-9c9916d2bd1f",
	"be59427c-1d54-4b90-a05a-a84c560328ad",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_TXN
	VALUES ("085d387a-8d88-4012-8657-057ab08adbc8",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"728b7882-730f-41c1-ae4e-7ab03e7f35e6",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_NSTXN
	VALUES ("b50a700e-10d3-4c6d-ab1b-bc73166259e4",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"728b7882-730f-41c1-ae4e-7ab03e7f35e6",
	"3d9fb728-1f2f-4994-b8de-ef15a8932490",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_TXN
	VALUES ("b50a700e-10d3-4c6d-ab1b-bc73166259e4",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"cbcfa0d1-6fac-454e-924b-9c9916d2bd1f",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_NSTXN
	VALUES ("8f49ac2e-6d97-4d53-96a7-c9be2d72d200",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"cbcfa0d1-6fac-454e-924b-9c9916d2bd1f",
	"3d9fb728-1f2f-4994-b8de-ef15a8932490",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_TXN
	VALUES ("8f49ac2e-6d97-4d53-96a7-c9be2d72d200",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"cbcfa0d1-6fac-454e-924b-9c9916d2bd1f",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_NSTXN
	VALUES ("607921f3-580a-4ddd-8d53-1a70e723c788",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"524fae2c-6c1e-4c64-a790-5020c19fc83d",
	"3d9fb728-1f2f-4994-b8de-ef15a8932490",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_TXN
	VALUES ("607921f3-580a-4ddd-8d53-1a70e723c788",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"cbcfa0d1-6fac-454e-924b-9c9916d2bd1f",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_NSTXN
	VALUES ("c4808869-4080-4e6f-be96-371726d3da72",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"524fae2c-6c1e-4c64-a790-5020c19fc83d",
	"be59427c-1d54-4b90-a05a-a84c560328ad",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_TXN
	VALUES ("c4808869-4080-4e6f-be96-371726d3da72",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"728b7882-730f-41c1-ae4e-7ab03e7f35e6",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_NSTXN
	VALUES ("6b753678-3406-4c73-8912-a10455d69f20",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"cbcfa0d1-6fac-454e-924b-9c9916d2bd1f",
	"e5418def-fa9e-4bf9-9a84-924ea2d35cc0",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_TXN
	VALUES ("6b753678-3406-4c73-8912-a10455d69f20",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"5b5539aa-4c6c-409b-bf63-624d2d811d4a",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_NSTXN
	VALUES ("0ba44e92-9191-4f60-bbdc-5785a6932b04",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"728b7882-730f-41c1-ae4e-7ab03e7f35e6",
	"e5418def-fa9e-4bf9-9a84-924ea2d35cc0",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_TXN
	VALUES ("0ba44e92-9191-4f60-bbdc-5785a6932b04",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"5b5539aa-4c6c-409b-bf63-624d2d811d4a",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_NSTXN
	VALUES ("87c007d1-836d-4901-b8e0-6bdd54795893",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"b68b373c-42d2-47f2-91fd-5fca65f3b979",
	"7fd3414c-86ea-4c63-8b87-40d1ca300b2b",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_TXN
	VALUES ("87c007d1-836d-4901-b8e0-6bdd54795893",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"0c4ad770-749f-491c-b878-9e1fad95531e",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_NSTXN
	VALUES ("05297d72-1d45-4c0a-8506-f29ef770b96a",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"0c4ad770-749f-491c-b878-9e1fad95531e",
	"7fd3414c-86ea-4c63-8b87-40d1ca300b2b",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_TXN
	VALUES ("05297d72-1d45-4c0a-8506-f29ef770b96a",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"b4856d67-433a-4a0f-b9dc-f632cd2c36eb",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_NSTXN
	VALUES ("fcf33d51-8aab-477d-88bc-3bf7d040e1c3",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"f9c96bd8-6bd7-459e-9f9d-3ab33c2295b5",
	"7fd3414c-86ea-4c63-8b87-40d1ca300b2b",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_TXN
	VALUES ("fcf33d51-8aab-477d-88bc-3bf7d040e1c3",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"b68b373c-42d2-47f2-91fd-5fca65f3b979",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_MOAH
	VALUES ("9c251918-a15c-488f-a0c5-08fff6b85bbe",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"bfc299c3-5fe5-4498-ab77-97d2d5b7896d");
INSERT INTO SM_AH
	VALUES ("9c251918-a15c-488f-a0c5-08fff6b85bbe",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a");
INSERT INTO SM_ACT
	VALUES ("9c251918-a15c-488f-a0c5-08fff6b85bbe",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	1,
	'
// integer:

  if (( (1+2) * (3+4) ) == 21)
     LOG::LogSuccess (message:"Test Compound Expressions - Using Constants - integer") ;
  else
     LOG::LogFailure (message:"Test Compound Expressions - Using Constants - integer") ;
  end if;


// real:


  if ((3.3 + 2.2 - 1.1) - 4.4 <= 0.000001)
     LOG::LogSuccess (message:"Test Compound Expressions - Using Constants - real") ;
  else
     LOG::LogFailure (message:"Test Compound Expressions - Using Constants - real") ;
  end if;


// string:


  if (("Hello" + "," + " " + "World" + "!") == "Hello, World!")
     LOG::LogSuccess (message:"Test Compound Expressions - Using Constants - string") ;
  else
     LOG::LogFailure (message:"Test Compound Expressions - Using Constants - string") ;
  end if;

  str1 = "Hello" + "World";
  str = TRAN::ret_string(s:str1);
  if (str == "HelloWorld" )
     LOG::LogSuccess (message:"Test Compound Expressions - Using Constants - string +") ;
  else
     LOG::LogFailure (message:"Test Compound Expressions - Using Constants - string +") ;
  end if;

  
// boolean:


  if (TRUE or FALSE and TRUE and TRUE)
     LOG::LogSuccess (message:"Test Compound Expressions - Using Constants - bool 1") ;
  else
     LOG::LogFailure (message:"Test Compound Expressions - Using Constants - bool 1") ;
  end if;


  if (not (TRUE and FALSE) and (TRUE or FALSE))
     LOG::LogSuccess (message:"Test Compound Expressions - Using Constants - bool 2") ;
  else
     LOG::LogFailure (message:"Test Compound Expressions - Using Constants - bool 2") ;
  end if;

// send next test event back to controlling object
select any dr from instances of DR;
generate DR2:''next test'' () to dr;
',
	'');
INSERT INTO SM_MOAH
	VALUES ("6e5a431c-d832-4aa7-ad99-c93decb30bf0",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"038e88f8-7ace-47ef-a50f-f888460af294");
INSERT INTO SM_AH
	VALUES ("6e5a431c-d832-4aa7-ad99-c93decb30bf0",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a");
INSERT INTO SM_ACT
	VALUES ("6e5a431c-d832-4aa7-ad99-c93decb30bf0",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	1,
	'
// integer:


// Initialize variables for test:
a = 1;
b = 4;
c = 2;

if ((a - b/c + a*c) == 1)
   LOG::LogSuccess (message:"Test Compound Expressions - Local Variables - integer") ;
else
   LOG::LogFailure (message:"Test Compound Expressions - Local Variables - integer") ;
end if;


// real:

// Initialize variables for test:
x = 4.0;
y = 1.5;
z = 1.1;

if ( ((x + y - z) > 4.3) and ((x+y-z) < 4.5) )
   LOG::LogSuccess (message:"Test Compound Expressions - Local Variables - real") ;
else
   LOG::LogFailure (message:"Test Compound Expressions - Local Variables - real") ;
end if;


// string:


// Initialize variables for test:
s1 = "Hello";
s2 = ", ";
s3 = "world!";

if ((s1 + s2 + s3) == "Hello, world!")
   LOG::LogSuccess (message:"Test Compound Expressions - Local Variables - string") ;
else
   LOG::LogFailure (message:"Test Compound Expressions - Local Variables - string") ;
end if;

// send next test event back to controlling object
select any dr from instances of DR;
generate DR2:''next test'' () to dr;
',
	'');
INSERT INTO SM_MOAH
	VALUES ("423d93a4-da77-4973-86cd-7ca2df7f52b3",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"41349bad-35a3-45e9-87ec-9669abc548e0");
INSERT INTO SM_AH
	VALUES ("423d93a4-da77-4973-86cd-7ca2df7f52b3",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a");
INSERT INTO SM_ACT
	VALUES ("423d93a4-da77-4973-86cd-7ca2df7f52b3",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	1,
	'// integer:

// Create objects for test
create object instance a of A;
create object instance b of A;

// Initialize variables for test:
a.a = 5;
b.a = 2;

// attributes of an instance
if ( ((a.a - b.a) * (a.a - 3) + 1) == 7 )
   LOG::LogSuccess (message:"Test Compound Expressions - Object Attributes - inst ref var") ;
else
   LOG::LogFailure (message:"Test Compound Expressions - Object Attributes - inst ref var") ;
end if;


// Initialize variables for test:
self.a = 5;
self.b = 4;

// self
if ( (self.a + self.b - 2) == 7)
   LOG::LogSuccess (message:"Test Compound Expressions - Object Attributes - self") ;
else
   LOG::LogFailure (message:"Test Compound Expressions - Object Attributes - self") ;
end if;

// Delete any objects created
delete object instance a;
delete object instance b;

// send next test event back to controlling object
select any dr from instances of DR;
generate DR3:''send event with supp data'' () to dr;
',
	'');
INSERT INTO SM_MOAH
	VALUES ("7df6f0de-e150-4638-a20c-e03551ce2822",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"fe52ac30-3fd7-4731-ad00-5b83a8efed4d");
INSERT INTO SM_AH
	VALUES ("7df6f0de-e150-4638-a20c-e03551ce2822",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a");
INSERT INTO SM_ACT
	VALUES ("7df6f0de-e150-4638-a20c-e03551ce2822",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	1,
	'
if ( (rcvd_evt.name + ": age " + rcvd_evt.age) == "Bob: age 31" )
   LOG::LogSuccess (message:"Test Compound Expressions - Supp Data Items") ;
else
   LOG::LogFailure (message:"Test Compound Expressions - Supp Data Items") ;
end if;

// send next test event back to controlling object
select any dr from instances of DR;
generate DR2:''next test'' () to dr;
',
	'');
INSERT INTO SM_MOAH
	VALUES ("069f4520-db00-465c-ae65-8c7d21ebc86a",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"cd578d26-c528-4867-9d12-a0dd8bb2c794");
INSERT INTO SM_AH
	VALUES ("069f4520-db00-465c-ae65-8c7d21ebc86a",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a");
INSERT INTO SM_ACT
	VALUES ("069f4520-db00-465c-ae65-8c7d21ebc86a",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	1,
	'// Make sure there are no instances of A
select many as from instances of A;
for each a in as
  delete object instance a;
end for;

select many as from instances of A;

if ( (empty as or not_empty as) and not (empty as and not_empty as) )
   LOG::LogSuccess (message:"Test Coumpund Expressions - Function Invocations - not_empty/empty") ;
else
   LOG::LogFailure (message:"Test Coumpund Expressions - Function Invocations - not_empty/empty") ;
end if;

if ( (2 + cardinality as + 1) == 3 )
   LOG::LogSuccess (message:"Test Coumpund Expressions - Function Invocations - cardinality") ;
else
   LOG::LogFailure (message:"Test Coumpund Expressions - Function Invocations - cardinality") ;
end if;

// send next test event back to controlling object
select any dr from instances of DR;
generate DR2:''next test'' () to dr;
',
	'');
INSERT INTO SM_MOAH
	VALUES ("5a293b65-185b-4113-86b3-17b46c267024",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"99cf819c-57ce-491f-8e16-9ce51a02d744");
INSERT INTO SM_AH
	VALUES ("5a293b65-185b-4113-86b3-17b46c267024",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a");
INSERT INTO SM_ACT
	VALUES ("5a293b65-185b-4113-86b3-17b46c267024",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	1,
	'
if ( ( ( TRAN::ret_int(i:1) + TRAN::ret_int(i:2) ) * ( TRAN::ret_int(i:5) - 3 ) ) == 6 )
   LOG::LogSuccess (message:"Test Compound Expressions - Transformer Invocations - int") ;
else
   LOG::LogFailure (message:"Test Compound Expressions - Transformer Invocations - int") ;
end if;

if ( (TRAN::ret_string(s:"hi") + " " + TRAN::ret_string(s:"there")) == "hi there")
   LOG::LogSuccess (message:"Test Compound Expressions - Transformer Invocations - string") ;
else
   LOG::LogFailure (message:"Test Compound Expressions - Transformer Invocations - string") ;
end if;

// send next test event back to controlling object
select any dr from instances of DR;
generate DR2:''next test'' () to dr;
',
	'');
INSERT INTO SM_MOAH
	VALUES ("e0471086-3537-4f4e-b755-81d0c3d7f3c5",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"cb0d6055-dabf-4c4e-9450-6b83abb81bc7");
INSERT INTO SM_AH
	VALUES ("e0471086-3537-4f4e-b755-81d0c3d7f3c5",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a");
INSERT INTO SM_ACT
	VALUES ("e0471086-3537-4f4e-b755-81d0c3d7f3c5",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	1,
	'
BrTstTimeDate = TIM::create_date (day:1, month:2, year:3, second:4, minute:5, hour:6);

if ( (TIM::get_day(date:BrTstTimeDate) + TIM::get_month(date:BrTstTimeDate) + TIM::get_year(date:BrTstTimeDate) + 2) == 8)
   LOG::LogSuccess (message:"Test Compund Expressions - Compound Expressions using Bridge Invocations") ;
else
   LOG::LogFailure (message:"Test Compund Expressions - Compound Expressions using Bridge Invocations") ;
end if;

// send next test event back to controlling object
select any dr from instances of DR;
generate DR2:''next test'' () to dr;
',
	'');
INSERT INTO SM_MOAH
	VALUES ("8ef11125-741e-4fcb-86b9-de139f478b11",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"f9c96bd8-6bd7-459e-9f9d-3ab33c2295b5");
INSERT INTO SM_AH
	VALUES ("8ef11125-741e-4fcb-86b9-de139f478b11",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a");
INSERT INTO SM_ACT
	VALUES ("8ef11125-741e-4fcb-86b9-de139f478b11",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	1,
	'if ((1 + 2*3 - 6/3 + 8%3) == 7)
   LOG::LogSuccess (message:"Test Compound Expressions - Order of Operations - int") ;
else
   LOG::LogFailure (message:"Test Compound Expressions - Order of Operations - int") ;
end if;

// real:
if ((1.1 + 4.4/2 - 2.2) - 1.1 < 0.000001)
   LOG::LogSuccess (message:"Test Compound Expressions - Order of Operations - real") ;
else
   LOG::LogFailure (message:"Test Compound Expressions - Order of Operations - real") ;
end if;

// send next test event back to controlling object
select any dr from instances of DR;
generate DR2:''next test'' () to dr;
',
	'');
INSERT INTO SM_MOAH
	VALUES ("91a2547e-42fe-44f3-98c1-140d0f7d0034",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"b4856d67-433a-4a0f-b9dc-f632cd2c36eb");
INSERT INTO SM_AH
	VALUES ("91a2547e-42fe-44f3-98c1-140d0f7d0034",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a");
INSERT INTO SM_ACT
	VALUES ("91a2547e-42fe-44f3-98c1-140d0f7d0034",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	1,
	'x = ((1+3)*(4-2)/(10-2)) + ((1+3)*(4-2)/(10-2)) + ((1+3)*(4-2)/(10-2)) +
     ((1+3)*(4-2)/(10-2)) + ((1+3)*(4-2)/(10-2)) + ((1+3)*(4-2)/(10-2)) +
     ((1+3)*(4-2)/(10-2)) + ((1+3)*(4-2)/(10-2)) + ((1+3)*(4-2)/(10-2)) +
     ((1+3)*(4-2)/(10-2)) + ((1+3)*(4-2)/(10-2)) + ((1+3)*(4-2)/(10-2)) +
     ((1+3)*(4-2)/(10-2)) + ((1+3)*(4-2)/(10-2)) + ((1+3)*(4-2)/(10-2)) +
     ((1+3)*(4-2)/(10-2)) + ((1+3)*(4-2)/(10-2)) + ((1+3)*(4-2)/(10-2)) +
     ((1+3)*(4-2)/(10-2)) + ((1+3)*(4-2)/(10-2));

if (x == 20)
   LOG::LogSuccess (message:"Test Compound Expressions - Stress Limits") ;
else
   LOG::LogFailure (message:"Test Compound Expressions - Stress Limits") ;
end if;


//============================================================
// Test complete
//============================================================

// send next test event back to controlling object
select any dr from instances of DR;
generate DR2:''next test'' () to dr;
',
	'');
INSERT INTO SM_MOAH
	VALUES ("672aa36f-b7c0-4cd5-a669-b2595cbc7e9a",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"d608d1fa-09f3-494a-9e55-7d2f25ff1438");
INSERT INTO SM_AH
	VALUES ("672aa36f-b7c0-4cd5-a669-b2595cbc7e9a",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a");
INSERT INTO SM_ACT
	VALUES ("672aa36f-b7c0-4cd5-a669-b2595cbc7e9a",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	1,
	'
bridge date = TIM::create_date(second:1, minute:2, hour:3, day:1, month:2, year:3);
year = TIM::get_year (date:date) * 22 + 3;
month = 8 - TIM::get_month (date:date)/2;
day = TIM::get_day (date:date) + 28;

if ((day == 29) and (month == 7) and (year == 69))
   LOG::LogSuccess (message:"Test Compound Expressios - Bridges within Expressions") ;
else
   LOG::LogFailure (message:"Test Compound Expressios - Bridges within Expressions") ;
end if;

// send next test event back to controlling object
select any dr from instances of DR;
generate DR2:''next test'' () to dr;
',
	'');
INSERT INTO SM_MOAH
	VALUES ("b4a7cb4e-4129-43e6-937b-2c05832567dc",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"df7d54b8-0ad7-41ad-b8e3-2ce23bb315af");
INSERT INTO SM_AH
	VALUES ("b4a7cb4e-4129-43e6-937b-2c05832567dc",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a");
INSERT INTO SM_ACT
	VALUES ("b4a7cb4e-4129-43e6-937b-2c05832567dc",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	1,
	'a = TRAN::ret_int(i:5) + 10;
b = TRAN::ret_int(i:8)/4 + TRAN::ret_int(i:3)*2;
c = TRAN::ret_int(i:2) * TRAN::ret_int(i:3)/TRAN::ret_int(i:6);

if ((a == 15) and (b == 8) and (c == 1))
   LOG::LogSuccess (message:"Test Compound Expressions - Transforms within Expressions") ;
else
   LOG::LogFailure (message:"Test Compound Expressions - Transforms within Expressions") ;
end if;

// goto next state
generate TCE4(b1:TRUE,b2:FALSE,i1:1,i2:2,r1:1.0,r2:2.0) to self;
',
	'');
INSERT INTO SM_MOAH
	VALUES ("bedaa94b-2e08-4861-ae2e-4ab6f987102d",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"5b5539aa-4c6c-409b-bf63-624d2d811d4a");
INSERT INTO SM_AH
	VALUES ("bedaa94b-2e08-4861-ae2e-4ab6f987102d",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a");
INSERT INTO SM_ACT
	VALUES ("bedaa94b-2e08-4861-ae2e-4ab6f987102d",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	1,
	'
a = 1;
x = 1.1;
x = (a + 2) + (x - 0.1);

if ((x - 4.0) < 0.000001)
   LOG::LogSuccess (message:"Test Compund Expressions - Cobine Real and Integer Data Types") ;
else
   LOG::LogFailure (message:"Test Compund Expressions - Cobine Real and Integer Data Types") ;
end if;

// send next test event back to controlling object
select any dr from instances of DR;
generate DR4:''test complete'' () to dr;
',
	'');
INSERT INTO SM_MOAH
	VALUES ("af80f995-e4d2-473a-8525-c85880352917",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"9a6ec027-95e8-426c-bcfc-c5c617b7497e");
INSERT INTO SM_AH
	VALUES ("af80f995-e4d2-473a-8525-c85880352917",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a");
INSERT INTO SM_ACT
	VALUES ("af80f995-e4d2-473a-8525-c85880352917",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	1,
	'select any dr from instances of DR;

// Unary Ops in the action language
//
// These are handled in a1test_exconfig, not here
//  empty <handle>        // returns bool
//  not_empty <handle>    // returns bool
//  cardinality <handle>  // returns int
//
// The following are tested with compound expressions:
//
//  not <boolean expression>
//
//    <boolean expression> is one that evaluates to TRUE or FALSE
//
//  <unary op> <expression>
//
//      <expression> is anything that evalates to real or int value:
//        literal, attribute, local var, received event data item, 
//        simple expression, compound expression, transform
//        invocation, bridge invocation.
//
//      <unary op> is + or -

LOG::LogInfo(message:"Starting Test Compound Expressions - Unary Ops") ;

if (true)  // Create a local scope

// local
a=1;
b=2;
ans = not ( (a ==b) AND (b == a) );
if ( ans == TRUE )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of not expression - local var") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of not expression - local var") ;
end if;

// literal
ans = not ( (1 == 2) AND (3 == 3) );
if ( ans == TRUE )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of not expression - literal") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of not expression - literal") ;
end if;

// received event
ans = not ( (rcvd_evt.b1 == rcvd_evt.b2) AND (rcvd_evt.b1 == rcvd_evt.b1) );
if ( ans == TRUE )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of not expression - rcvd_evt") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of not expression - rcvd_evt") ;
end if;

// attribute of object - self
ans = not ( (self.b1 == self.b2) AND (self.b1 == self.b1) );
if ( ans == TRUE )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of not expression - self") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of not expression - self") ;
end if;

// attribute of object - inst_ref
select any tce from instances of TCE;
ans = not ( (tce.b1 == tce.b2) AND (tce.b1 == tce.b1) );
if ( ans == TRUE )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of not expression - inst_ref") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of not expression - inst_ref") ;
end if;

// function invocations
select any tce from instances of TCE;
select any no_instances from instances of NOI;
ans = not ( (not_empty tce AND empty no_instances) AND (empty tce AND not_empty no_instances) );
if ( ans == TRUE )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of not expression - functions") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of not expression - functions") ;
end if;

// transformer invocations
ans = not ( (TRAN::ret_bool(b:TRUE) AND TRAN::ret_bool(b:FALSE) ) AND (TRAN::ret_bool(b:TRUE) AND TRAN::ret_bool(b:TRUE)));
if ( ans == TRUE )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of not expression - transforms") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of not expression - transforms") ;
end if;

// bridge invocations realized
ans = not ( (BR::ret_bool(b:TRUE) AND BR::ret_bool(b:FALSE) ) AND (BR::ret_bool(b:TRUE) AND BR::ret_bool(b:TRUE)));
if ( ans == TRUE )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of not expression - bridge - realized") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of not expression - bridge - realized") ;
end if;

// unary op + int

// local
a=1;
b=2;
ans1 = + ( a + b );
if ( ans1 == 3 )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of + (expression) - local var - int") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of + (expression) - local var - int") ;
end if;

// literal
ans1 = + ( 1 + 2 );
if ( ans1 == 3 )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of + (expression) - literal - int") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of + (expression) - literal - int") ;
end if;

// received event
ans1 = + ( rcvd_evt.i1 + rcvd_evt.i2);
if ( ans1 == 3 )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of + (expression) - supp data - int") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of + (expression) - supp data - int") ;
end if;

// attribute of object - self
ans1 = + ( self.i1 + self.i2);
if ( ans1 == 3 )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of + (expression) - self - int") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of + (expression) - self - int") ;
end if;

// attribute of object - inst_ref
select any tce from instances of TCE;
ans1 = +(tce.i1 + tce.i2);
if ( ans1 == 3 )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of + (expression) - inst_ref - int") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of + (expression) - inst_ref - int") ;
end if;

// function invocations
select any tce from instances of TCE;
select any no_instances from instances of NOI;

ans1 = + ( (cardinality tce ) + 2*((cardinality no_instances)+1));
if ( ans1 == 3 )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of + (expression) - cardinality - int") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of + (expression) - cardinality - int") ;
end if;

// transformer invocations
ans1 = + ( TRAN::ret_int(i:5) + TRAN::ret_int(i:-2) );
if ( ans1 == 3 )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of + (expression) - transform - int") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of + (expression) - transform - int") ;
end if;

// bridge invocations realized
ans1 = + ( BR::ret_int(i:-3) + BR::ret_int(i:6) );
if ( ans1 == 3 )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of + (expression) - bridge - realized - int") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of + (expression) - bridge - realized - int") ;
end if;


// unary op - int

// local
a=1;
b=2;
ans1 = - ( a + b );
if ( ans1 == -3 )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of - (expression) - local var - int") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of - (expression) - local var - int") ;
end if;

// literal
ans1 = - ( 1 + 2 );
if ( ans1 == -3 )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of - (expression) - literal - int") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of - (expression) - literal - int") ;
end if;

// received event
ans1 = - ( rcvd_evt.i1 + rcvd_evt.i2);
if ( ans1 == -3 )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of - (expression) - supp data - int") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of - (expression) - supp data - int") ;
end if;

// attribute of object - self
ans1 = - ( self.i1 + self.i2);
if ( ans1 == -3 )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of + (expression) - self - int") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of + (expression) - self - int") ;
end if;

// attribute of object - inst_ref
select any tce from instances of TCE;
ans1 = -(tce.i1 + tce.i2);
if ( ans1 == -3 )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of - (expression) - inst_ref - int") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of - (expression) - inst_ref - int") ;
end if;

// function invocations
select any tce from instances of TCE;
select any no_instances from instances of NOI;
ans1 = - ( (cardinality tce ) + 2*((cardinality no_instances)+1));
if ( ans1 == -3 )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of - (expression) - cardinality - int") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of - (expression) - cardinality - int") ;
end if;

// transformer invocations
ans1 = - ( TRAN::ret_int(i:5) + TRAN::ret_int(i:-2) );
if ( ans1 == -3 )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of - (expression) - transform - int") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of - (expression) - transform - int") ;
end if;

// bridge invocations realized
ans1 = - ( BR::ret_int(i:-3) + BR::ret_int(i:6) );
if ( ans1 == -3 )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of - (expression) - bridge - realized - int") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of - (expression) - bridge - realized - int") ;
end if;

end if;   // end local scope

if (true)  // create local scope

// real

// unary op + real

// local
a=1.0;
b=2.0;
ans2 = + ( a + b );
if ( ans2 > 2.9 and ans2 < 3.1 )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of + (expression) - local var - real") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of + (expression) - local var - real") ;
end if;

// literal
ans2 = + ( 1.0 + 2.0 );
if ( ans2 > 2.9 and ans2 < 3.1 )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of + (expression) - literal - real") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of + (expression) - literal - real") ;
end if;

// received event
ans2 = + ( rcvd_evt.r1 + rcvd_evt.r2);
if ( ans2 > 2.9 and ans2 < 3.1 )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of + (expression) - supp data - real") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of + (expression) - supp data - real") ;
end if;

// attribute of object - self
ans2 = + ( self.r1 + self.r2);
if ( ans2 > 2.9 and ans2 < 3.1 )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of + (expression) - self - real") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of + (expression) - self - real") ;
end if;

// attribute of object - inst_ref
select any tce from instances of TCE;
ans2 = +(tce.r1 + tce.r2);
if ( ans2 > 2.9 and ans2 < 3.1 )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of + (expression) - inst_ref - real") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of + (expression) - inst_ref - real") ;
end if;

// function invocations
select any tce from instances of TCE;
select any no_instances from instances of NOI;

ans2 = + ( (cardinality tce * 1.0) + 2*((cardinality no_instances)+1.0));
if ( ans2 > 2.9 and ans2 < 3.1 )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of + (expression) - cardinality - real") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of + (expression) - cardinality - real") ;
end if;

// transformer invocations
ans2 = + ( TRAN::ret_real(r:5.0) + TRAN::ret_real(r:-2.0) );
if ( ans2 > 2.9 and ans2 < 3.1 )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of + (expression) - transform - real") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of + (expression) - transform - real") ;
end if;

// bridge invocations realized
ans2 = + ( BR::ret_real(r:-3.0) + BR::ret_real(r:6.0) );
if ( ans2 > 2.9 and ans2 < 3.1 )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of + (expression) - bridge - realized - real") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of + (expression) - bridge - realized - real") ;
end if;


// unary op - real

// local
a=1.0;
b=2.0;
ans2 = - ( a + b );
if ( ans2 > -3.1 and ans2 < -2.9 )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of - (expression) - local var - real") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of - (expression) - local var - real") ;
end if;

// literal
ans2 = - ( 1.0 + 2.0 );
if ( ans2 > -3.1 and ans2 < -2.9 )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of - (expression) - literal - real") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of - (expression) - literal - real") ;
end if;

// received event
ans2 = - ( rcvd_evt.r1 + rcvd_evt.r2);
if ( ans2 >  -3.1 and ans2 < -2.9 )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of - (expression) - supp data - real") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of - (expression) - supp data - real") ;
end if;

// attribute of object - self
ans2 = - ( self.r1 + self.r2);
if ( ans2 >  -3.1 and ans2 < -2.9 )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of + (expression) - self - real") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of + (expression) - self - real") ;
end if;

// attribute of object - inst_ref
select any tce from instances of TCE;
ans2 = -(tce.r1 + tce.r2);
if ( ans2 >  -3.1 and ans2 < -2.9 )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of - (expression) - inst_ref - real") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of - (expression) - inst_ref - real") ;
end if;

// function invocations
select any tce from instances of TCE;
select any no_instances from instances of NOI;
ans2 = - ( (cardinality tce * 1.0) + 2*((cardinality no_instances)+1.0));
if ( ans2 > -3.1 and ans2 < -2.9 )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of - (expression) - cardinality - real") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of - (expression) - cardinality - real") ;
end if;

// transformer invocations
ans2 = - ( TRAN::ret_real(r:5.0) + TRAN::ret_real(r:-2.0) );
if ( ans2 > -3.1 and ans2 < -2.9 )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of - (expression) - transform - real") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of - (expression) - transform - real") ;
end if;

// bridge invocations realized
ans2 = - ( BR::ret_real(r:-3.0) + BR::ret_real(r:6.0) );
if ( ans2 > -3.1 and ans2 < -2.9 )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of - (expression) - bridge - realized - real") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of - (expression) - bridge - realized - real") ;
end if;

end if;  // end local scope

if (true)  // create local scope

// single

// local
a1=FALSE;
ans = not ( a1 );
if ( ans == TRUE )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of not expression - local var - single") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of not expression - local var - single") ;
end if;

// literal
ans = not ( FALSE );
if ( ans == TRUE )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of not expression - literal - single") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of not expression - literal - single") ;
end if;

// received event
ans = not ( rcvd_evt.b2 );
if ( ans == TRUE )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of not expression - rcvd_evt - single") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of not expression - rcvd_evt - single") ;
end if;

// attribute of object - self
ans = not ( self.b2 );
if ( ans == TRUE )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of not expression - self - single") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of not expression - self - single") ;
end if;

// attribute of object - inst_ref
select any tce from instances of TCE;
ans = not ( tce.b2 );
if ( ans == TRUE )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of not expression - inst_ref - single") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of not expression - inst_ref - single") ;
end if;

// function invocations
select any tce from instances of TCE;
select any no_instances from instances of NOI;
ans = not ( empty tce );
if ( ans == TRUE )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of not expression - functions - single") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of not expression - functions - single") ;
end if;

// transformer invocations
ans = not ( TRAN::ret_bool(b:FALSE) );
if ( ans == TRUE )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of not expression - transforms - single") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of not expression - transforms - single") ;
end if;

// bridge invocations realized
ans = not ( BR::ret_bool(b:FALSE) );
if ( ans == TRUE )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of not expression - bridge - realized - single") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of not expression - bridge - realized - single") ;
end if;

end if;  // end local scope
if (true)  // create local scope
// unary op + int


// local
b=2;
ans1 = + ( b );
if ( ans1 == 2 )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of + (expression) - local var - int - single") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of + (expression) - local var - int - single") ;
end if;

// literal
ans1 = + ( 3 );
if ( ans1 == 3 )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of + (expression) - literal - int - single") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of + (expression) - literal - int - single") ;
end if;

// received event
ans1 = + ( rcvd_evt.i2 );
if ( ans1 == 2 )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of + (expression) - supp data - int - single") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of + (expression) - supp data - int - single") ;
end if;

// attribute of object - self
ans1 = + ( self.i2);
if ( ans1 == 2 )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of + (expression) - self - int - single") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of + (expression) - self - int - single") ;
end if;

// attribute of object - inst_ref
select any tce from instances of TCE;
ans1 = +(tce.i2);
if ( ans1 == 2 )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of + (expression) - inst_ref - int - single") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of + (expression) - inst_ref - int - single") ;
end if;

// function invocations
select any tce from instances of TCE;
select any no_instances from instances of NOI;

ans1 = + ( cardinality tce );
if ( ans1 == 1 )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of + (expression) - cardinality - int - single") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of + (expression) - cardinality - int - single") ;
end if;

// transformer invocations
ans1 = + ( TRAN::ret_int(i:3) );
if ( ans1 == 3 )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of + (expression) - transform - int - single") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of + (expression) - transform - int - single") ;
end if;

// bridge invocations realized
ans1 = + ( BR::ret_int(i:3) );
if ( ans1 == 3 )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of + (expression) - bridge - realized - int - single") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of + (expression) - bridge - realized - int - single") ;
end if;


// unary op - int

// local
b=2;
ans1 = - ( b );
if ( ans1 == -2 )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of - (expression) - local var - int - single") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of - (expression) - local var - int - single") ;
end if;

// literal
ans1 = - ( 2 );
if ( ans1 == -2 )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of - (expression) - literal - int - single") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of - (expression) - literal - int - single") ;
end if;

// received event
ans1 = - ( rcvd_evt.i2 );
if ( ans1 == -2 )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of - (expression) - supp data - int - single") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of - (expression) - supp data - int - single") ;
end if;

// attribute of object - self
ans1 = - ( self.i2 );
if ( ans1 == -2 )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of + (expression) - self - int - single") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of + (expression) - self - int - single") ;
end if;

// attribute of object - inst_ref
select any tce from instances of TCE;
ans1 = -(tce.i2);
if ( ans1 == -2 )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of - (expression) - inst_ref - int - single") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of - (expression) - inst_ref - int - single") ;
end if;

// function invocations
select any tce from instances of TCE;
select any no_instances from instances of NOI;
ans1 = - ( cardinality tce );
if ( ans1 == -1 )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of - (expression) - cardinality - int - single") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of - (expression) - cardinality - int - single") ;
end if;

// transformer invocations
ans1 = - ( TRAN::ret_int(i:3) );
if ( ans1 == -3 )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of - (expression) - transform - int - single") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of - (expression) - transform - int - single") ;
end if;

// bridge invocations realized
ans1 = - ( BR::ret_int(i:-3) );
if ( ans1 == 3 )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of - (expression) - bridge - realized - int - single") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of - (expression) - bridge - realized - int - single") ;
end if;

end if;   // end local scope
if (true)  // create local scope

// real

// unary op + real

// local
b=2.0;
ans2 = + ( b );
if ( ans2 > 1.9 and ans2 < 2.1 )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of + (expression) - local var - real - single") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of + (expression) - local var - real - single") ;
end if;

// literal
ans2 = + ( 2.0 );
if ( ans2 > 1.9 and ans2 < 2.1 )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of + (expression) - literal - real - single") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of + (expression) - literal - real - single") ;
end if;

// received event
ans2 = + ( rcvd_evt.r2);
if ( ans2 > 1.9 and ans2 < 2.1 )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of + (expression) - supp data - real - single") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of + (expression) - supp data - real - single") ;
end if;

// attribute of object - self
ans2 = + ( self.r2 );
if ( ans2 > 1.9 and ans2 < 2.1 )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of + (expression) - self - real - single") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of + (expression) - self - real - single") ;
end if;

// attribute of object - inst_ref
select any tce from instances of TCE;
ans2 = +(tce.r2);
if ( ans2 > 1.9 and ans2 < 2.1 )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of + (expression) - inst_ref - real - single") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of + (expression) - inst_ref - real - single") ;
end if;

// function invocations
select any tce from instances of TCE;
select any no_instances from instances of NOI;

ans2 = + ( cardinality tce * 1.0 );
if ( ans2 > 0.9 and ans2 < 1.1 )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of + (expression) - cardinality - real - single") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of + (expression) - cardinality - real - single") ;
end if;

// transformer invocations
ans2 = + ( TRAN::ret_real(r:3.0) );
if ( ans2 > 2.9 and ans2 < 3.1 )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of + (expression) - transform - real - single") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of + (expression) - transform - real - single") ;
end if;

// bridge invocations realized
ans2 = + ( BR::ret_real(r:3.0) ); 
if ( ans2 > 2.9 and ans2 < 3.1 )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of + (expression) - bridge - realized - real - single") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of + (expression) - bridge - realized - real - single") ;
end if;


// unary op - real

// local
b=3.0;
ans2 = - ( b );
if ( ans2 > -3.1 and ans2 < -2.9 )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of - (expression) - local var - real - single") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of - (expression) - local var - real - single") ;
end if;

// literal
ans2 = - ( 3.0 );
if ( ans2 > -3.1 and ans2 < -2.9 )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of - (expression) - literal - real - single") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of - (expression) - literal - real - single") ;
end if;

// received event
ans2 = - ( rcvd_evt.r2 );
if ( ans2 > -2.1 and ans2 < -1.9 )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of - (expression) - supp data - real - single") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of - (expression) - supp data - real - single") ;
end if;

// attribute of object - self
ans2 = - ( self.r2 );
if ( ans2 > -2.1 and ans2 < -1.9 )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of + (expression) - self - real - single") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of + (expression) - self - real - single") ;
end if;

// attribute of object - inst_ref
select any tce from instances of TCE;
ans2 = -(tce.r2);
if ( ans2 > -2.1 and ans2 < -1.9 )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of - (expression) - inst_ref - real - single") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of - (expression) - inst_ref - real - single") ;
end if;

// function invocations
select any tce from instances of TCE;
select any no_instances from instances of NOI;
ans2 = - ( (cardinality tce * 1.0) );
if ( ans2 > -1.1 and ans2 < -.9 )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of - (expression) - cardinality - real - single") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of - (expression) - cardinality - real - single") ;
end if;

// transformer invocations
ans2 = - ( TRAN::ret_real(r:3.0) );
if ( ans2 > -3.1 and ans2 < 2.9 )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of - (expression) - transform - real - single") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of - (expression) - transform - real - single") ;
end if;

// bridge invocations realized
ans2 = - ( BR::ret_real(r:3.0) );
if ( ans2 > -3.1 and ans2 < -2.9 )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of - (expression) - bridge - realized - real - single") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of - (expression) - bridge - realized - real - single") ;
end if;

end if;  // close local scope


// goto next state
generate TCE4(b1:TRUE,b2:FALSE,i1:1,i2:2,r1:1.0,r2:2.0) to self;


',
	'');
INSERT INTO SM_MOAH
	VALUES ("ae526ee4-946a-4a3f-86c5-1fe16b6b198a",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"87d30ca1-58fa-4102-8f5e-2507b306b940");
INSERT INTO SM_AH
	VALUES ("ae526ee4-946a-4a3f-86c5-1fe16b6b198a",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a");
INSERT INTO SM_ACT
	VALUES ("ae526ee4-946a-4a3f-86c5-1fe16b6b198a",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	1,
	'select any dr from instances of DR;

// If statements
//
//   if <boolean expression> 
//   elif <boolean expression>
//
// Boolean Expressions
// -------------------
//
//  not <boolean expression>
//  <expression> <boolean operation> <expression>
//
//    <boolean expression> is one that evaluates to TRUE or FALSE
//
//    <expression>  - simple, or compund.  Both must evaluate to
//     the same type: arithmetic, boolean, or string.
//

LOG::LogInfo(message:"Starting Test Compound Expressions - If Expressions") ;

if (true)  // create local scope

// local
a=1;
b=2;
if ( not ( (a ==b) AND (b == a) ) )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of not expression - local var") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of not expression - local var") ;
end if;

// literal
if ( not ( (1 == 2) AND (3 == 3) ) )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of not expression - literal") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of not expression - literal") ;
end if;

// received event

if ( not ( (rcvd_evt.b1 == rcvd_evt.b2) AND (rcvd_evt.b1 == rcvd_evt.b1) ) )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of not expression - rcvd_evt") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of not expression - rcvd_evt") ;
end if;

// attribute of object - self

if ( not ( (self.b1 == self.b2) AND (self.b1 == self.b1) ) )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of not expression - self") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of not expression - self") ;
end if;

// attribute of object - inst_ref
select any tce from instances of TCE;
if ( not ( (tce.b1 == tce.b2) AND (tce.b1 == tce.b1) ) )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of not expression - inst_ref") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of not expression - inst_ref") ;
end if;

// function invocations
select any tce from instances of TCE;
select any no_instances from instances of NOI;
if ( not ( (not_empty tce AND empty no_instances) AND (empty tce AND not_empty no_instances) ) )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of not expression - functions") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of not expression - functions") ;
end if;

// transformer invocations
if ( not ( (TRAN::ret_bool(b:TRUE) AND TRAN::ret_bool(b:FALSE) ) AND (TRAN::ret_bool(b:TRUE) AND TRAN::ret_bool(b:TRUE))) )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of not expression - transforms") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of not expression - transforms") ;
end if;

// bridge invocations realized

if ( not ( (BR::ret_bool(b:TRUE) AND BR::ret_bool(b:FALSE) ) AND (BR::ret_bool(b:TRUE) AND BR::ret_bool(b:TRUE))) )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of not expression - bridge - realized") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of not expression - bridge - realized") ;
end if;

// if aritmetic expressions + int

// local
a=1;
b=2;
if ( (+ ( a + b ))  == 3 )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of + (expression) - local var - int") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of + (expression) - local var - int") ;
end if;

// literal

if ( (+ ( 1 + 2 )) == 3 )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of + (expression) - literal - int") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of + (expression) - literal - int") ;
end if;

// received event

if ( (+ ( rcvd_evt.i1 + rcvd_evt.i2)) == 3 ) 
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of + (expression) - supp data - int") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of + (expression) - supp data - int") ;
end if;

// attribute of object - self
if ( (+ ( self.i1 + self.i2) ) == 3 )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of + (expression) - self - int") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of + (expression) - self - int") ;
end if;

// attribute of object - inst_ref
select any tce from instances of TCE;
if ( (+(tce.i1 + tce.i2)) == 3 )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of + (expression) - inst_ref - int") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of + (expression) - inst_ref - int") ;
end if;

// function invocations
select any tce from instances of TCE;
select any no_instances from instances of NOI;
if ( (+ ( (cardinality tce ) + 2*((cardinality no_instances)+1)) ) == 3 ) 
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of + (expression) - cardinality - int") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of + (expression) - cardinality - int") ;
end if;

// transformer invocations
if ( ( ( TRAN::ret_int(i:5) + TRAN::ret_int(i:-2) ) ) == 3 )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of + (expression) - transform - int") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of + (expression) - transform - int") ;
end if;

// bridge invocations realized
if ( (+ ( BR::ret_int(i:-3) + BR::ret_int(i:6) )) == 3 )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of + (expression) - bridge - realized - int") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of + (expression) - bridge - realized - int") ;
end if;


// if aritmetic expressions - int

// local
a=1;
b=2;
if ( (- ( a + b )) == -3 )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of - (expression) - local var - int") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of - (expression) - local var - int") ;
end if;

// literal
if ( (- ( 1 + 2 )) == -3 )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of - (expression) - literal - int") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of - (expression) - literal - int") ;
end if;

// received event
if ( (- ( rcvd_evt.i1 + rcvd_evt.i2)) == -3 )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of - (expression) - supp data - int") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of - (expression) - supp data - int") ;
end if;

// attribute of object - self
if ( (- ( self.i1 + self.i2)) == -3 )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of + (expression) - self - int") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of + (expression) - self - int") ;
end if;

// attribute of object - inst_ref
select any tce from instances of TCE;
if ( (-(tce.i1 + tce.i2)) == -3 )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of - (expression) - inst_ref - int") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of - (expression) - inst_ref - int") ;
end if;

// function invocations
select any tce from instances of TCE;
select any no_instances from instances of NOI;
if ( (- ( (cardinality tce ) + 2*((cardinality no_instances)+1))) == -3 )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of - (expression) - cardinality - int") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of - (expression) - cardinality - int") ;
end if;

// transformer invocations
if ( (- ( TRAN::ret_int(i:5) + TRAN::ret_int(i:-2) )) == -3 )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of - (expression) - transform - int") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of - (expression) - transform - int") ;
end if;

// bridge invocations realized
if ( (- ( BR::ret_int(i:-3) + BR::ret_int(i:6) )) == -3 )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of - (expression) - bridge - realized - int") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of - (expression) - bridge - realized - int") ;
end if;

end if;  // end local scope
if (true) // create local scope

// real

// if arithmetic expressios + real

// local
a=1.0;
b=2.0;
if ( (+ ( a + b )) > 2.9 and (+ ( a + b )) < 3.1 )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of + (expression) - local var - real") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of + (expression) - local var - real") ;
end if;

// literal
if ( (+ ( 1.0 + 2.0 )) > 2.9 and (+ ( 1.0 + 2.0 )) < 3.1 )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of + (expression) - literal - real") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of + (expression) - literal - real") ;
end if;

// received event
if ( (+ ( rcvd_evt.r1 + rcvd_evt.r2)) > 2.9 and (+ ( rcvd_evt.r1 + rcvd_evt.r2)) < 3.1 )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of + (expression) - supp data - real") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of + (expression) - supp data - real") ;
end if;

// attribute of object - self
if ( (+ ( self.r1 + self.r2)) > 2.9 and (+ ( self.r1 + self.r2)) < 3.1 )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of + (expression) - self - real") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of + (expression) - self - real") ;
end if;

// attribute of object - inst_ref
select any tce from instances of TCE;
if ( (+(tce.r1 + tce.r2)) > 2.9 and (+(tce.r1 + tce.r2)) < 3.1 )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of + (expression) - inst_ref - real") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of + (expression) - inst_ref - real") ;
end if;

// function invocations
select any tce from instances of TCE;
select any no_instances from instances of NOI;
if ( (+ ( (cardinality tce * 1.0) + 2*((cardinality no_instances)+1.0))) > 2.9 and (+ ( (cardinality tce * 1.0) + 2*((cardinality no_instances)+1.0))) < 3.1 )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of + (expression) - cardinality - real") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of + (expression) - cardinality - real") ;
end if;

// transformer invocations
if ( (+ ( TRAN::ret_real(r:5.0) + TRAN::ret_real(r:-2.0) )) > 2.9 and (+ ( TRAN::ret_real(r:5.0) + TRAN::ret_real(r:-2.0) )) < 3.1 )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of + (expression) - transform - real") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of + (expression) - transform - real") ;
end if;

// bridge invocations realized
if ( (+ ( BR::ret_real(r:-3.0) + BR::ret_real(r:6.0) )) > 2.9 and (+ ( BR::ret_real(r:-3.0) + BR::ret_real(r:6.0) )) < 3.1 )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of + (expression) - bridge - realized - real") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of + (expression) - bridge - realized - real") ;
end if;


// if arithmetic expressions -  real

// local
a=1.0;
b=2.0;
if ( (- ( a + b )) > -3.1 and (- ( a + b )) < -2.9 )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of - (expression) - local var - real") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of - (expression) - local var - real") ;
end if;

// literal
if ( (- ( 1.0 + 2.0 )) > -3.1 and (- ( 1.0 + 2.0 )) < -2.9 )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of - (expression) - literal - real") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of - (expression) - literal - real") ;
end if;

// received event
if ( (- ( rcvd_evt.r1 + rcvd_evt.r2)) >  -3.1 and (- ( rcvd_evt.r1 + rcvd_evt.r2)) < -2.9 )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of - (expression) - supp data - real") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of - (expression) - supp data - real") ;
end if;

// attribute of object - self
if ( (- ( self.r1 + self.r2)) >  -3.1 and (- ( self.r1 + self.r2)) < -2.9 )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of + (expression) - self - real") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of + (expression) - self - real") ;
end if;

// attribute of object - inst_ref
select any tce from instances of TCE;
if ( (-(tce.r1 + tce.r2)) >  -3.1 and (-(tce.r1 + tce.r2)) < -2.9 )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of - (expression) - inst_ref - real") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of - (expression) - inst_ref - real") ;
end if;

// function invocations
select any tce from instances of TCE;
select any no_instances from instances of NOI;
if ( (- ( (cardinality tce * 1.0) + 2*((cardinality no_instances)+1.0))) > -3.1 and (- ( (cardinality tce * 1.0) + 2*((cardinality no_instances)+1.0))) < -2.9 )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of - (expression) - cardinality - real") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of - (expression) - cardinality - real") ;
end if;

// transformer invocations
if ( (- ( TRAN::ret_real(r:5.0) + TRAN::ret_real(r:-2.0) )) > -3.1 and (- ( TRAN::ret_real(r:5.0) + TRAN::ret_real(r:-2.0) )) < -2.9 )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of - (expression) - transform - real") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of - (expression) - transform - real") ;
end if;

// bridge invocations realized
if ( (- ( BR::ret_real(r:-3.0) + BR::ret_real(r:6.0) )) > -3.1 and (- ( BR::ret_real(r:-3.0) + BR::ret_real(r:6.0) )) < -2.9 )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of - (expression) - bridge - realized - real") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of - (expression) - bridge - realized - real") ;
end if;

end if;  // end local scope
if (true) // create local scope

// single

// local
a1=FALSE;
if ( not ( a1 ) == TRUE )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of not expression - local var - single") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of not expression - local var - single") ;
end if;

// literal
if ( not ( FALSE ) == TRUE )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of not expression - literal - single") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of not expression - literal - single") ;
end if;

// received event
if ( not ( rcvd_evt.b2 ) == TRUE )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of not expression - rcvd_evt - single") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of not expression - rcvd_evt - single") ;
end if;

// attribute of object - self
if ( not ( self.b2 ) == TRUE )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of not expression - self - single") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of not expression - self - single") ;
end if;

// attribute of object - inst_ref
select any tce from instances of TCE;
if ( not ( tce.b2 ) == TRUE )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of not expression - inst_ref - single") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of not expression - inst_ref - single") ;
end if;

// function invocations
select any tce from instances of TCE;
select any no_instances from instances of NOI;
if ( not ( empty tce ) == TRUE )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of not expression - functions - single") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of not expression - functions - single") ;
end if;

// transformer invocations
if ( not ( TRAN::ret_bool(b:FALSE) ) == TRUE )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of not expression - transforms - single") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of not expression - transforms - single") ;
end if;

// bridge invocations realized
if ( not ( BR::ret_bool(b:FALSE) ) == TRUE )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of not expression - bridge - realized - single") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of not expression - bridge - realized - single") ;
end if;

end if;  // end local scope
if (true) // create local scope

// if arithmetic expressions op + int

// local
b=2;
if ( +b == 2 )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of + (expression) - local var - int - single") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of + (expression) - local var - int - single") ;
end if;

// literal
if ( +3 == 3 )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of + (expression) - literal - int - single") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of + (expression) - literal - int - single") ;
end if;

// received event
if ( + ( rcvd_evt.i2 ) == 2 )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of + (expression) - supp data - int - single") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of + (expression) - supp data - int - single") ;
end if;

// attribute of object - self
if ( + ( self.i2) == 2 )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of + (expression) - self - int - single") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of + (expression) - self - int - single") ;
end if;

// attribute of object - inst_ref
select any tce from instances of TCE;
if ( +(tce.i2) == 2 )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of + (expression) - inst_ref - int - single") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of + (expression) - inst_ref - int - single") ;
end if;

// function invocations
select any tce from instances of TCE;
select any no_instances from instances of NOI;
if ( + ( cardinality tce ) == 1 )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of + (expression) - cardinality - int - single") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of + (expression) - cardinality - int - single") ;
end if;

// transformer invocations
if ( + ( TRAN::ret_int(i:3) ) == 3 )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of + (expression) - transform - int - single") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of + (expression) - transform - int - single") ;
end if;

// bridge invocations realized
if ( + ( BR::ret_int(i:3) ) == 3 )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of + (expression) - bridge - realized - int - single") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of + (expression) - bridge - realized - int - single") ;
end if;


// if arithmetic expressions - int

// local
b=2;
if ( -( b ) == -2 )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of - (expression) - local var - int - single") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of - (expression) - local var - int - single") ;
end if;

// literal
if ( - ( 2 ) == -2 )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of - (expression) - literal - int - single") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of - (expression) - literal - int - single") ;
end if;

// received event
if ( - ( rcvd_evt.i2 ) == -2 )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of - (expression) - supp data - int - single") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of - (expression) - supp data - int - single") ;
end if;

// attribute of object - self
if ( - ( self.i2 ) == -2 )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of + (expression) - self - int - single") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of + (expression) - self - int - single") ;
end if;

// attribute of object - inst_ref
select any tce from instances of TCE;
if ( -(tce.i2) == -2 )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of - (expression) - inst_ref - int - single") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of - (expression) - inst_ref - int - single") ;
end if;

// function invocations
select any tce from instances of TCE;
select any no_instances from instances of NOI;
if ( - ( cardinality tce ) == -1 )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of - (expression) - cardinality - int - single") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of - (expression) - cardinality - int - single") ;
end if;

// transformer invocations
if ( - ( TRAN::ret_int(i:3) ) == -3 )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of - (expression) - transform - int - single") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of - (expression) - transform - int - single") ;
end if;

// bridge invocations realized
if ( - ( BR::ret_int(i:-3) ) == 3 )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of - (expression) - bridge - realized - int - single") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of - (expression) - bridge - realized - int - single") ;
end if;

end if;  // end local scope
if (true) // begin local scope
// real

// if arithmetic expressions + real

// local
b=2.0;
if ( + ( b ) > 1.9 and + ( b ) < 2.1 )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of + (expression) - local var - real - single") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of + (expression) - local var - real - single") ;
end if;

// literal
if ( + ( 2.0 ) > 1.9 and + ( 2.0 ) < 2.1 )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of + (expression) - literal - real - single") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of + (expression) - literal - real - single") ;
end if;

// received event
if ( + ( rcvd_evt.r2) > 1.9 and + ( rcvd_evt.r2) < 2.1 )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of + (expression) - supp data - real - single") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of + (expression) - supp data - real - single") ;
end if;

// attribute of object - self
if ( + ( self.r2 ) > 1.9 and + ( self.r2 ) < 2.1 )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of + (expression) - self - real - single") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of + (expression) - self - real - single") ;
end if;

// attribute of object - inst_ref
select any tce from instances of TCE;
if ( +(tce.r2) > 1.9 and +(tce.r2) < 2.1 )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of + (expression) - inst_ref - real - single") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of + (expression) - inst_ref - real - single") ;
end if;

// function invocations
select any tce from instances of TCE;
select any no_instances from instances of NOI;
if ( + ( cardinality tce * 1.0 ) > 0.9 and + ( cardinality tce * 1.0 ) < 1.1 )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of + (expression) - cardinality - real - single") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of + (expression) - cardinality - real - single") ;
end if;

// transformer invocations
if ( + ( TRAN::ret_real(r:3.0) ) > 2.9 and + ( TRAN::ret_real(r:3.0) ) < 3.1 )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of + (expression) - transform - real - single") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of + (expression) - transform - real - single") ;
end if;

// bridge invocations realized
if ( + ( BR::ret_real(r:3.0) ) > 2.9 and + ( BR::ret_real(r:3.0) ) < 3.1 )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of + (expression) - bridge - realized - real - single") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of + (expression) - bridge - realized - real - single") ;
end if;


// if arithmetic expressions - real

// local
b=3.0;
if ( - ( b ) > -3.1 and - ( b ) < -2.9 )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of - (expression) - local var - real - single") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of - (expression) - local var - real - single") ;
end if;

// literal
if ( - ( 3.0 ) > -3.1 and - ( 3.0 ) < -2.9 )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of - (expression) - literal - real - single") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of - (expression) - literal - real - single") ;
end if;

// received event
if ( - ( rcvd_evt.r2 ) > -2.1 and - ( rcvd_evt.r2 ) < -1.9 )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of - (expression) - supp data - real - single") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of - (expression) - supp data - real - single") ;
end if;

// attribute of object - self
if ( - ( self.r2 ) > -2.1 and - ( self.r2 ) < -1.9 )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of + (expression) - self - real - single") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of + (expression) - self - real - single") ;
end if;

// attribute of object - inst_ref
select any tce from instances of TCE;
if ( -(tce.r2) > -2.1 and -(tce.r2) < -1.9 )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of - (expression) - inst_ref - real - single") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of - (expression) - inst_ref - real - single") ;
end if;

// function invocations
select any tce from instances of TCE;
select any no_instances from instances of NOI;
if ( - ( (cardinality tce * 1.0) ) > -1.1 and - ( (cardinality tce * 1.0) ) < -.9 )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of - (expression) - cardinality - real - single") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of - (expression) - cardinality - real - single") ;
end if;

// transformer invocations
if ( - ( TRAN::ret_real(r:3.0) ) > -3.1 and - ( TRAN::ret_real(r:3.0) ) < 2.9 )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of - (expression) - transform - real - single") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of - (expression) - transform - real - single") ;
end if;

// bridge invocations realized
if ( - ( BR::ret_real(r:3.0) ) > -3.1 and - ( BR::ret_real(r:3.0) ) < -2.9 )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of - (expression) - bridge - realized - real - single") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of - (expression) - bridge - realized - real - single") ;
end if;

end if; // end local scope
if (true) // create local scope
//
//
select any dr from instances of DR;

// else statements
//
//   elif <boolean expression>
//
// Boolean Expressions
// -------------------
//
//  not <boolean expression>
//  <expression> <boolean operation> <expression>
//
//    <boolean expression> is one that evaluates to TRUE or FALSE
//
//    <expression>  - simple, or compund.  Both must evaluate to
//     the same type: arithmetic, boolean, or string.
//

LOG::LogInfo(message:"Starting Test Compound Expressions - Else Expressions") ;

// local
a=1;
b=2;
if (FALSE)
  // do nothing
elif ( not ( (a ==b) AND (b == a) ) )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of not expression - local var") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of not expression - local var") ;
end if;

// literal
if (FALSE)
  // do nothing
elif ( not ( (1 == 2) AND (3 == 3) ) )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of not expression - literal") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of not expression - literal") ;
end if;

// received event

if (FALSE)
  // do nothing
elif ( not ( (rcvd_evt.b1 == rcvd_evt.b2) AND (rcvd_evt.b1 == rcvd_evt.b1) ) )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of not expression - rcvd_evt") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of not expression - rcvd_evt") ;
end if;

// attribute of object - self

if (FALSE)
  // do nothing
elif ( not ( (self.b1 == self.b2) AND (self.b1 == self.b1) ) )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of not expression - self") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of not expression - self") ;
end if;

// attribute of object - inst_ref
select any tce from instances of TCE;
if (FALSE)
  // do nothing
elif ( not ( (tce.b1 == tce.b2) AND (tce.b1 == tce.b1) ) )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of not expression - inst_ref") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of not expression - inst_ref") ;
end if;

// function invocations
select any tce from instances of TCE;
select any no_instances from instances of NOI;
if (FALSE)
  // do nothing
elif ( not ( (not_empty tce AND empty no_instances) AND (empty tce AND not_empty no_instances) ) )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of not expression - functions") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of not expression - functions") ;
end if;

// transformer invocations
if (FALSE)
  // do nothing
elif ( not ( (TRAN::ret_bool(b:TRUE) AND TRAN::ret_bool(b:FALSE) ) AND (TRAN::ret_bool(b:TRUE) AND TRAN::ret_bool(b:TRUE))) )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of not expression - transforms") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of not expression - transforms") ;
end if;

// bridge invocations realized

if (FALSE)
  // do nothing
elif ( not ( (BR::ret_bool(b:TRUE) AND BR::ret_bool(b:FALSE) ) AND (BR::ret_bool(b:TRUE) AND BR::ret_bool(b:TRUE))) )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of not expression - bridge - realized") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of not expression - bridge - realized") ;
end if;

end if;  // end local scope
if (true)  // create local scope

// if aritmetic expressions + int

// local
a=1;
b=2;
if (FALSE)
  // do nothing
elif ( (+ ( a + b ))  == 3 )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of + (expression) - local var - int") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of + (expression) - local var - int") ;
end if;

// literal

if (FALSE)
  // do nothing
elif ( (+ ( 1 + 2 )) == 3 )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of + (expression) - literal - int") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of + (expression) - literal - int") ;
end if;

// received event

if (FALSE)
  // do nothing
elif ( (+ ( rcvd_evt.i1 + rcvd_evt.i2)) == 3 ) 
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of + (expression) - supp data - int") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of + (expression) - supp data - int") ;
end if;

// attribute of object - self
if (FALSE)
  // do nothing
elif ( (+ ( self.i1 + self.i2) ) == 3 )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of + (expression) - self - int") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of + (expression) - self - int") ;
end if;

// attribute of object - inst_ref
select any tce from instances of TCE;
if (FALSE)
  // do nothing
elif ( (+(tce.i1 + tce.i2)) == 3 )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of + (expression) - inst_ref - int") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of + (expression) - inst_ref - int") ;
end if;

// function invocations
select any tce from instances of TCE;
select any no_instances from instances of NOI;
if (FALSE)
  // do nothing
elif ( (+ ( (cardinality tce ) + 2*((cardinality no_instances)+1)) ) == 3 ) 
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of + (expression) - cardinality - int") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of + (expression) - cardinality - int") ;
end if;

// transformer invocations
if (FALSE)
  // do nothing
elif ( ( ( TRAN::ret_int(i:5) + TRAN::ret_int(i:-2) ) ) == 3 )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of + (expression) - transform - int") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of + (expression) - transform - int") ;
end if;

// bridge invocations realized
if (FALSE)
  // do nothing
elif ( (+ ( BR::ret_int(i:-3) + BR::ret_int(i:6) )) == 3 )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of + (expression) - bridge - realized - int") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of + (expression) - bridge - realized - int") ;
end if;


// if aritmetic expressions - int

// local
a=1;
b=2;
if (FALSE)
  // do nothing
elif ( (- ( a + b )) == -3 )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of - (expression) - local var - int") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of - (expression) - local var - int") ;
end if;

// literal
if (FALSE)
  // do nothing
elif ( (- ( 1 + 2 )) == -3 )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of - (expression) - literal - int") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of - (expression) - literal - int") ;
end if;

// received event
if (FALSE)
  // do nothing
elif ( (- ( rcvd_evt.i1 + rcvd_evt.i2)) == -3 )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of - (expression) - supp data - int") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of - (expression) - supp data - int") ;
end if;

// attribute of object - self
if (FALSE)
  // do nothing
elif ( (- ( self.i1 + self.i2)) == -3 )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of + (expression) - self - int") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of + (expression) - self - int") ;
end if;

// attribute of object - inst_ref
select any tce from instances of TCE;
if (FALSE)
  // do nothing
elif ( (-(tce.i1 + tce.i2)) == -3 )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of - (expression) - inst_ref - int") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of - (expression) - inst_ref - int") ;
end if;

// function invocations
select any tce from instances of TCE;
select any no_instances from instances of NOI;
if (FALSE)
  // do nothing
elif ( (- ( (cardinality tce ) + 2*((cardinality no_instances)+1))) == -3 )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of - (expression) - cardinality - int") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of - (expression) - cardinality - int") ;
end if;

// transformer invocations
if (FALSE)
  // do nothing
elif ( (- ( TRAN::ret_int(i:5) + TRAN::ret_int(i:-2) )) == -3 )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of - (expression) - transform - int") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of - (expression) - transform - int") ;
end if;

// bridge invocations realized
if (FALSE)
  // do nothing
elif ( (- ( BR::ret_int(i:-3) + BR::ret_int(i:6) )) == -3 )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of - (expression) - bridge - realized - int") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of - (expression) - bridge - realized - int") ;
end if;

end if;  // end local scope
if (true)  // create local scope


// real

// if arithmetic expressios + real

// local
a=1.0;
b=2.0;
if (FALSE)
  // do nothing
elif ( (+ ( a + b )) > 2.9 and (+ ( a + b )) < 3.1 )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of + (expression) - local var - real") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of + (expression) - local var - real") ;
end if;

// literal
if (FALSE)
  // do nothing
elif ( (+ ( 1.0 + 2.0 )) > 2.9 and (+ ( 1.0 + 2.0 )) < 3.1 )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of + (expression) - literal - real") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of + (expression) - literal - real") ;
end if;

// received event
if (FALSE)
  // do nothing
elif ( (+ ( rcvd_evt.r1 + rcvd_evt.r2)) > 2.9 and (+ ( rcvd_evt.r1 + rcvd_evt.r2)) < 3.1 )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of + (expression) - supp data - real") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of + (expression) - supp data - real") ;
end if;

// attribute of object - self
if (FALSE)
  // do nothing
elif ( (+ ( self.r1 + self.r2)) > 2.9 and (+ ( self.r1 + self.r2)) < 3.1 )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of + (expression) - self - real") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of + (expression) - self - real") ;
end if;

// attribute of object - inst_ref
select any tce from instances of TCE;
if (FALSE)
  // do nothing
elif ( (+(tce.r1 + tce.r2)) > 2.9 and (+(tce.r1 + tce.r2)) < 3.1 )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of + (expression) - inst_ref - real") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of + (expression) - inst_ref - real") ;
end if;

// function invocations
select any tce from instances of TCE;
select any no_instances from instances of NOI;
if (FALSE)
  // do nothing
elif ( (+ ( (cardinality tce * 1.0) + 2*((cardinality no_instances)+1.0))) > 2.9 and (+ ( (cardinality tce * 1.0) + 2*((cardinality no_instances)+1.0))) < 3.1 )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of + (expression) - cardinality - real") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of + (expression) - cardinality - real") ;
end if;

// transformer invocations
if (FALSE)
  // do nothing
elif (FALSE)
  // do nothing
elif ( (+ ( TRAN::ret_real(r:5.0) + TRAN::ret_real(r:-2.0) )) > 2.9 and (+ ( TRAN::ret_real(r:5.0) + TRAN::ret_real(r:-2.0) )) < 3.1 )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of + (expression) - transform - real") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of + (expression) - transform - real") ;
end if;

// bridge invocations realized
if (FALSE)
  // do nothing
elif (FALSE)
  // do nothing
elif ( (+ ( BR::ret_real(r:-3.0) + BR::ret_real(r:6.0) )) > 2.9 and (+ ( BR::ret_real(r:-3.0) + BR::ret_real(r:6.0) )) < 3.1 )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of + (expression) - bridge - realized - real") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of + (expression) - bridge - realized - real") ;
end if;


// if arithmetic expressions -  real

// local
a=1.0;
b=2.0;
if (FALSE)
  // do nothing
elif (FALSE)
  // do nothing
elif ( (- ( a + b )) > -3.1 and (- ( a + b )) < -2.9 )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of - (expression) - local var - real") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of - (expression) - local var - real") ;
end if;

// literal
if (FALSE)
  // do nothing
elif (FALSE)
  // do nothing
elif ( (- ( 1.0 + 2.0 )) > -3.1 and (- ( 1.0 + 2.0 )) < -2.9 )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of - (expression) - literal - real") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of - (expression) - literal - real") ;
end if;

// received event
if (FALSE)
  // do nothing
elif (FALSE)
  // do nothing
elif ( (- ( rcvd_evt.r1 + rcvd_evt.r2)) >  -3.1 and (- ( rcvd_evt.r1 + rcvd_evt.r2)) < -2.9 )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of - (expression) - supp data - real") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of - (expression) - supp data - real") ;
end if;

// attribute of object - self
if (FALSE)
  // do nothing
elif (FALSE)
  // do nothing
elif ( (- ( self.r1 + self.r2)) >  -3.1 and (- ( self.r1 + self.r2)) < -2.9 )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of + (expression) - self - real") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of + (expression) - self - real") ;
end if;

// attribute of object - inst_ref
select any tce from instances of TCE;
if (FALSE)
  // do nothing
elif (FALSE)
  // do nothing
elif ( (-(tce.r1 + tce.r2)) >  -3.1 and (-(tce.r1 + tce.r2)) < -2.9 )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of - (expression) - inst_ref - real") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of - (expression) - inst_ref - real") ;
end if;

// function invocations
select any tce from instances of TCE;
select any no_instances from instances of NOI;
if (FALSE)
  // do nothing
elif (FALSE)
  // do nothing
elif ( (- ( (cardinality tce * 1.0) + 2*((cardinality no_instances)+1.0))) > -3.1 and (- ( (cardinality tce * 1.0) + 2*((cardinality no_instances)+1.0))) < -2.9 )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of - (expression) - cardinality - real") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of - (expression) - cardinality - real") ;
end if;

// transformer invocations
if (FALSE)
  // do nothing
elif (FALSE)
  // do nothing
elif ( (- ( TRAN::ret_real(r:5.0) + TRAN::ret_real(r:-2.0) )) > -3.1 and (- ( TRAN::ret_real(r:5.0) + TRAN::ret_real(r:-2.0) )) < -2.9 )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of - (expression) - transform - real") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of - (expression) - transform - real") ;
end if;

// bridge invocations realized
if (FALSE)
  // do nothing
elif (FALSE)
  // do nothing
elif ( (- ( BR::ret_real(r:-3.0) + BR::ret_real(r:6.0) )) > -3.1 and (- ( BR::ret_real(r:-3.0) + BR::ret_real(r:6.0) )) < -2.9 )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of - (expression) - bridge - realized - real") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of - (expression) - bridge - realized - real") ;
end if;


end if;  // end local scope
if (true)  // create local scope


// single

// local
a1=FALSE;
if (FALSE)
  // do nothing
elif (FALSE)
  // do nothing
elif ( not ( a1 ) == TRUE )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of not expression - local var - single") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of not expression - local var - single") ;
end if;

// literal
if (FALSE)
  // do nothing
elif (FALSE)
  // do nothing
elif ( not ( FALSE ) == TRUE )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of not expression - literal - single") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of not expression - literal - single") ;
end if;

// received event
if (FALSE)
  // do nothing
elif (FALSE)
  // do nothing
elif ( not ( rcvd_evt.b2 ) == TRUE )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of not expression - rcvd_evt - single") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of not expression - rcvd_evt - single") ;
end if;

// attribute of object - self
if (FALSE)
  // do nothing
elif (FALSE)
  // do nothing
elif ( not ( self.b2 ) == TRUE )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of not expression - self - single") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of not expression - self - single") ;
end if;

// attribute of object - inst_ref
select any tce from instances of TCE;
if (FALSE)
  // do nothing
elif (FALSE)
  // do nothing
elif ( not ( tce.b2 ) == TRUE )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of not expression - inst_ref - single") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of not expression - inst_ref - single") ;
end if;

// function invocations
select any tce from instances of TCE;
select any no_instances from instances of NOI;
if (FALSE)
  // do nothing
elif (FALSE)
  // do nothing
elif ( not ( empty tce ) == TRUE )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of not expression - functions - single") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of not expression - functions - single") ;
end if;

// transformer invocations
if (FALSE)
  // do nothing
elif (FALSE)
  // do nothing
elif ( not ( TRAN::ret_bool(b:FALSE) ) == TRUE )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of not expression - transforms - single") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of not expression - transforms - single") ;
end if;

// bridge invocations realized
if (FALSE)
  // do nothing
elif (FALSE)
  // do nothing
elif ( not ( BR::ret_bool(b:FALSE) ) == TRUE )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of not expression - bridge - realized - single") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of not expression - bridge - realized - single") ;
end if;

end if;  // end local scope
if (true)  // create local scope


// if arithmetic expressions op + int

// local
b=2;
if (FALSE)
  // do nothing
elif (FALSE)
  // do nothing
elif ( +b == 2 )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of + (expression) - local var - int - single") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of + (expression) - local var - int - single") ;
end if;

// literal
if (FALSE)
  // do nothing
elif (FALSE)
  // do nothing
elif ( +3 == 3 )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of + (expression) - literal - int - single") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of + (expression) - literal - int - single") ;
end if;

// received event
if (FALSE)
  // do nothing
elif (FALSE)
  // do nothing
elif ( + ( rcvd_evt.i2 ) == 2 )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of + (expression) - supp data - int - single") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of + (expression) - supp data - int - single") ;
end if;

// attribute of object - self
if (FALSE)
  // do nothing
elif (FALSE)
  // do nothing
elif ( + ( self.i2) == 2 )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of + (expression) - self - int - single") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of + (expression) - self - int - single") ;
end if;

// attribute of object - inst_ref
select any tce from instances of TCE;
if (FALSE)
  // do nothing
elif (FALSE)
  // do nothing
elif ( +(tce.i2) == 2 )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of + (expression) - inst_ref - int - single") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of + (expression) - inst_ref - int - single") ;
end if;

// function invocations
select any tce from instances of TCE;
select any no_instances from instances of NOI;
if (FALSE)
  // do nothing
elif (FALSE)
  // do nothing
elif ( + ( cardinality tce ) == 1 )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of + (expression) - cardinality - int - single") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of + (expression) - cardinality - int - single") ;
end if;

// transformer invocations
if (FALSE)
  // do nothing
elif (FALSE)
  // do nothing
elif ( + ( TRAN::ret_int(i:3) ) == 3 )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of + (expression) - transform - int - single") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of + (expression) - transform - int - single") ;
end if;

// bridge invocations realized
if (FALSE)
  // do nothing
elif (FALSE)
  // do nothing
elif ( + ( BR::ret_int(i:3) ) == 3 )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of + (expression) - bridge - realized - int - single") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of + (expression) - bridge - realized - int - single") ;
end if;


// if arithmetic expressions - int

// local
b=2;
if (FALSE)
  // do nothing
elif (FALSE)
  // do nothing
elif ( -( b ) == -2 )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of - (expression) - local var - int - single") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of - (expression) - local var - int - single") ;
end if;

// literal
if (FALSE)
  // do nothing
elif (FALSE)
  // do nothing
elif ( - ( 2 ) == -2 )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of - (expression) - literal - int - single") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of - (expression) - literal - int - single") ;
end if;

// received event
if (FALSE)
  // do nothing
elif (FALSE)
  // do nothing
elif ( - ( rcvd_evt.i2 ) == -2 )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of - (expression) - supp data - int - single") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of - (expression) - supp data - int - single") ;
end if;

// attribute of object - self
if (FALSE)
  // do nothing
elif (FALSE)
  // do nothing
elif ( - ( self.i2 ) == -2 )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of + (expression) - self - int - single") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of + (expression) - self - int - single") ;
end if;

// attribute of object - inst_ref
select any tce from instances of TCE;
if (FALSE)
  // do nothing
elif (FALSE)
  // do nothing
elif ( -(tce.i2) == -2 )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of - (expression) - inst_ref - int - single") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of - (expression) - inst_ref - int - single") ;
end if;

// function invocations
select any tce from instances of TCE;
select any no_instances from instances of NOI;
if (FALSE)
  // do nothing
elif (FALSE)
  // do nothing
elif ( - ( cardinality tce ) == -1 )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of - (expression) - cardinality - int - single") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of - (expression) - cardinality - int - single") ;
end if;

// transformer invocations
if (FALSE)
  // do nothing
elif (FALSE)
  // do nothing
elif ( - ( TRAN::ret_int(i:3) ) == -3 )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of - (expression) - transform - int - single") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of - (expression) - transform - int - single") ;
end if;

// bridge invocations realized
if (FALSE)
  // do nothing
elif (FALSE)
  // do nothing
elif ( - ( BR::ret_int(i:-3) ) == 3 )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of - (expression) - bridge - realized - int - single") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of - (expression) - bridge - realized - int - single") ;
end if;

end if;  // end local scope
if (true)  // create local scope


// real

// if arithmetic expressions + real

// local
b=2.0;
if (FALSE)
  // do nothing
elif (FALSE)
  // do nothing
elif ( + ( b ) > 1.9 and + ( b ) < 2.1 )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of + (expression) - local var - real - single") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of + (expression) - local var - real - single") ;
end if;

// literal
if (FALSE)
  // do nothing
elif (FALSE)
  // do nothing
elif ( + ( 2.0 ) > 1.9 and + ( 2.0 ) < 2.1 )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of + (expression) - literal - real - single") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of + (expression) - literal - real - single") ;
end if;

// received event
if (FALSE)
  // do nothing
elif (FALSE)
  // do nothing
elif ( + ( rcvd_evt.r2) > 1.9 and + ( rcvd_evt.r2) < 2.1 )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of + (expression) - supp data - real - single") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of + (expression) - supp data - real - single") ;
end if;

// attribute of object - self
if (FALSE)
  // do nothing
elif (FALSE)
  // do nothing
elif ( + ( self.r2 ) > 1.9 and + ( self.r2 ) < 2.1 )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of + (expression) - self - real - single") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of + (expression) - self - real - single") ;
end if;

// attribute of object - inst_ref
select any tce from instances of TCE;
if (FALSE)
  // do nothing
elif (FALSE)
  // do nothing
elif ( +(tce.r2) > 1.9 and +(tce.r2) < 2.1 )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of + (expression) - inst_ref - real - single") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of + (expression) - inst_ref - real - single") ;
end if;

// function invocations
select any tce from instances of TCE;
select any no_instances from instances of NOI;
if (FALSE)
  // do nothing
elif (FALSE)
  // do nothing
elif ( + ( cardinality tce * 1.0 ) > 0.9 and + ( cardinality tce * 1.0 ) < 1.1 )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of + (expression) - cardinality - real - single") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of + (expression) - cardinality - real - single") ;
end if;

// transformer invocations
if (FALSE)
  // do nothing
elif (FALSE)
  // do nothing
elif ( + ( TRAN::ret_real(r:3.0) ) > 2.9 and + ( TRAN::ret_real(r:3.0) ) < 3.1 )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of + (expression) - transform - real - single") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of + (expression) - transform - real - single") ;
end if;

// bridge invocations realized
if (FALSE)
  // do nothing
elif (FALSE)
  // do nothing
elif ( + ( BR::ret_real(r:3.0) ) > 2.9 and + ( BR::ret_real(r:3.0) ) < 3.1 )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of + (expression) - bridge - realized - real - single") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of + (expression) - bridge - realized - real - single") ;
end if;


// if arithmetic expressions - real

// local
b=3.0;
if (FALSE)
  // do nothing
elif (FALSE)
  // do nothing
elif ( - ( b ) > -3.1 and - ( b ) < -2.9 )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of - (expression) - local var - real - single") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of - (expression) - local var - real - single") ;
end if;

// literal
if (FALSE)
  // do nothing
elif (FALSE)
  // do nothing
elif ( - ( 3.0 ) > -3.1 and - ( 3.0 ) < -2.9 )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of - (expression) - literal - real - single") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of - (expression) - literal - real - single") ;
end if;

// received event
if (FALSE)
  // do nothing
elif (FALSE)
  // do nothing
elif ( - ( rcvd_evt.r2 ) > -2.1 and - ( rcvd_evt.r2 ) < -1.9 )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of - (expression) - supp data - real - single") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of - (expression) - supp data - real - single") ;
end if;

// attribute of object - self
if (FALSE)
  // do nothing
elif (FALSE)
  // do nothing
elif ( - ( self.r2 ) > -2.1 and - ( self.r2 ) < -1.9 )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of + (expression) - self - real - single") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of + (expression) - self - real - single") ;
end if;

// attribute of object - inst_ref
select any tce from instances of TCE;
if (FALSE)
  // do nothing
elif (FALSE)
  // do nothing
elif ( -(tce.r2) > -2.1 and -(tce.r2) < -1.9 )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of - (expression) - inst_ref - real - single") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of - (expression) - inst_ref - real - single") ;
end if;

// function invocations
select any tce from instances of TCE;
select any no_instances from instances of NOI;
if (FALSE)
  // do nothing
elif (FALSE)
  // do nothing
elif ( - ( (cardinality tce * 1.0) ) > -1.1 and - ( (cardinality tce * 1.0) ) < -.9 )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of - (expression) - cardinality - real - single") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of - (expression) - cardinality - real - single") ;
end if;

// transformer invocations
if (FALSE)
  // do nothing
elif (FALSE)
  // do nothing
elif ( - ( TRAN::ret_real(r:3.0) ) > -3.1 and - ( TRAN::ret_real(r:3.0) ) < 2.9 )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of - (expression) - transform - real - single") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of - (expression) - transform - real - single") ;
end if;

// bridge invocations realized
if (FALSE)
  // do nothing
elif (FALSE)
  // do nothing
elif ( - ( BR::ret_real(r:3.0) ) > -3.1 and - ( BR::ret_real(r:3.0) ) < -2.9 )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of - (expression) - bridge - realized - real - single") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of - (expression) - bridge - realized - real - single") ;
end if;

end if;  // end local scope

generate TCE4:''next test with supp data''(i1:1,i2:2,r1:1.0,r2:2.0,b1:TRUE,b2:FALSE) to self;

',
	'');
INSERT INTO SM_MOAH
	VALUES ("51732488-aa05-4fb0-8a40-380ec55d2270",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"29616112-4df6-4783-af08-bcb54bce972a");
INSERT INTO SM_AH
	VALUES ("51732488-aa05-4fb0-8a40-380ec55d2270",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a");
INSERT INTO SM_ACT
	VALUES ("51732488-aa05-4fb0-8a40-380ec55d2270",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	1,
	'select any dr from instances of DR;

// Expressions as parameters to transforms, bridges, 
// events (generate and precreate)
//
//   (parm:<expression> .... )
//   elif <boolean expression>
//
// Expressions
// -----------
//
//  not <boolean expression>
//  <expression> <boolean operation> <expression>
//
//    <boolean expression> is one that evaluates to TRUE or FALSE
//
//    <expression>  - simple, or compound.  Both must evaluate to
//     the same type: arithmetic, boolean, or string.
//

LOG::LogInfo(message:"Starting Test Compound Expressions - Parm Expressions") ;

// Bridges

// local
a=1;
b=2;
ans = BR::ret_bool(b:(not ( (a ==b) AND (b == a) ) ));
if (ans)
  LOG::LogSuccess(message:"TCE - Bridge Parm Expressions - assignment of not expression - local var") ;
else
  LOG::LogFailure(message:"TCE - Bridge Parm Expressions - assignment of not expression - local var") ;
end if;

// literal
ans = BR::ret_bool(b:(not ( (1 == 2) AND (3 == 3) ) ));
if ( ans )
  LOG::LogSuccess(message:"TCE - Bridge Parm Expressions - assignment of not expression - literal") ;
else
  LOG::LogFailure(message:"TCE - Bridge Parm Expressions - assignment of not expression - literal") ;
end if;

// received event

ans = BR::ret_bool(b:(not ( (rcvd_evt.b1 == rcvd_evt.b2) AND (rcvd_evt.b1 == rcvd_evt.b1) ) ) );
if ( ans )
  LOG::LogSuccess(message:"TCE - Bridge Parm Expressions - assignment of not expression - rcvd_evt") ;
else
  LOG::LogFailure(message:"TCE - Bridge Parm Expressions - assignment of not expression - rcvd_evt") ;
end if;

// attribute of object - self
ans = BR::ret_bool(b:( not ( (self.b1 == self.b2) AND (self.b1 == self.b1) ) ) );
if (ans)
  LOG::LogSuccess(message:"TCE - Bridge Parm Expressions - assignment of not expression - self") ;
else
  LOG::LogFailure(message:"TCE - Bridge Parm Expressions - assignment of not expression - self") ;
end if;

// attribute of object - inst_ref
select any tce from instances of TCE;
ans = BR::ret_bool(b:( not ( (tce.b1 == tce.b2) AND (tce.b1 == tce.b1) ) ) );
if (ans)
  LOG::LogSuccess(message:"TCE - Bridge Parm Expressions - assignment of not expression - inst_ref") ;
else
  LOG::LogFailure(message:"TCE - Bridge Parm Expressions - assignment of not expression - inst_ref") ;
end if;

// function invocations
select any tce from instances of TCE;
select any no_instances from instances of NOI;
ans = BR::ret_bool(b:( not ( (not_empty tce AND empty no_instances) AND (empty tce AND not_empty no_instances) ) ));
if (ans)
  LOG::LogSuccess(message:"TCE - Bridge Parm Expressions - assignment of not expression - functions") ;
else
  LOG::LogFailure(message:"TCE - Bridge Parm Expressions - assignment of not expression - functions") ;
end if;

// transformer invocations
ans = BR::ret_bool(b:( not ( (TRAN::ret_bool(b:TRUE) AND TRAN::ret_bool(b:FALSE) ) AND (TRAN::ret_bool(b:TRUE) AND TRAN::ret_bool(b:TRUE))) ));
if (ans)
  LOG::LogSuccess(message:"TCE - Bridge Parm Expressions - assignment of not expression - transforms") ;
else
  LOG::LogFailure(message:"TCE - Bridge Parm Expressions - assignment of not expression - transforms") ;
end if;

// bridge invocations realized
ans = BR::ret_bool(b:( not ( (BR::ret_bool(b:TRUE) AND BR::ret_bool(b:FALSE) ) AND (BR::ret_bool(b:TRUE) AND BR::ret_bool(b:TRUE))) ));
if (ans)
  LOG::LogSuccess(message:"TCE - Bridge Parm Expressions - assignment of not expression - bridge - realized") ;
else
  LOG::LogFailure(message:"TCE - Bridge Parm Expressions - assignment of not expression - bridge - realized") ;
end if;

// if aritmetic expressions + int

// local
a=1;
b=2;
ans1 = BR::ret_int(i:( (+ ( a + b )) ));
if (ans1 == 3)
  LOG::LogSuccess(message:"TCE - Bridge Parm Expressions - assignment of + (expression) - local var - int") ;
else
  LOG::LogFailure(message:"TCE - Bridge Parm Expressions - assignment of + (expression) - local var - int") ;
end if;

// literal

ans1 = BR::ret_int(i:( (+ ( 1 + 2 )) ));
if ( ans1 == 3 )
  LOG::LogSuccess(message:"TCE - Bridge Parm Expressions - assignment of + (expression) - literal - int") ;
else
  LOG::LogFailure(message:"TCE - Bridge Parm Expressions - assignment of + (expression) - literal - int") ;
end if;

// received event
ans1 = BR::ret_int(i:(+ ( rcvd_evt.i1 + rcvd_evt.i2)) );
if (ans1 == 3)
  LOG::LogSuccess(message:"TCE - Bridge Parm Expressions - assignment of + (expression) - supp data - int") ;
else
  LOG::LogFailure(message:"TCE - Bridge Parm Expressions - assignment of + (expression) - supp data - int") ;
end if;

// attribute of object - self
ans1 = BR::ret_int(i:(+ ( self.i1 + self.i2) ) );
if (ans1 == 3)
  LOG::LogSuccess(message:"TCE - Bridge Parm Expressions - assignment of + (expression) - self - int") ;
else
  LOG::LogFailure(message:"TCE - Bridge Parm Expressions - assignment of + (expression) - self - int") ;
end if;

// attribute of object - inst_ref
select any tce from instances of TCE;
ans1 = BR::ret_int(i:(+(tce.i1 + tce.i2)) );
if (ans1 == 3)
  LOG::LogSuccess(message:"TCE - Bridge Parm Expressions - assignment of + (expression) - inst_ref - int") ;
else
  LOG::LogFailure(message:"TCE - Bridge Parm Expressions - assignment of + (expression) - inst_ref - int") ;
end if;

// function invocations
select any tce from instances of TCE;
select any no_instances from instances of NOI;
ans1 = BR::ret_int(i:(+ ( (cardinality tce ) + 2*((cardinality no_instances)+1)) ) );
if (ans1 == 3)
  LOG::LogSuccess(message:"TCE - Bridge Parm Expressions - assignment of + (expression) - cardinality - int") ;
else
  LOG::LogFailure(message:"TCE - Bridge Parm Expressions - assignment of + (expression) - cardinality - int") ;
end if;

// transformer invocations
ans1 = BR::ret_int(i:( TRAN::ret_int(i:5) + TRAN::ret_int(i:-2) ));
if (ans1 == 3)
  LOG::LogSuccess(message:"TCE - Bridge Parm Expressions - assignment of + (expression) - transform - int") ;
else
  LOG::LogFailure(message:"TCE - Bridge Parm Expressions - assignment of + (expression) - transform - int") ;
end if;

// bridge invocations realized
ans1 = BR::ret_int(i:( (+ ( BR::ret_int(i:-3) + BR::ret_int(i:6) )) ));
if (ans1 == 3)
  LOG::LogSuccess(message:"TCE - Bridge Parm Expressions - assignment of + (expression) - bridge - realized - int") ;
else
  LOG::LogFailure(message:"TCE - Bridge Parm Expressions - assignment of + (expression) - bridge - realized - int") ;
end if;


// if aritmetic expressions - int

// local
a=1;
b=2;
ans1 = BR::ret_int(i:( (- ( a + b )) ));
if (ans1 == -3)
  LOG::LogSuccess(message:"TCE - Bridge Parm Expressions - assignment of - (expression) - local var - int") ;
else
  LOG::LogFailure(message:"TCE - Bridge Parm Expressions - assignment of - (expression) - local var - int") ;
end if;

// literal
ans1 = BR::ret_int(i:(- ( 1 + 2 )));
if (ans1 == -3)
  LOG::LogSuccess(message:"TCE - Bridge Parm Expressions - assignment of - (expression) - literal - int") ;
else
  LOG::LogFailure(message:"TCE - Bridge Parm Expressions - assignment of - (expression) - literal - int") ;
end if;

// received event
ans1 = BR::ret_int(i:(- ( rcvd_evt.i1 + rcvd_evt.i2)));
if (ans1 == -3)
  LOG::LogSuccess(message:"TCE - Bridge Parm Expressions - assignment of - (expression) - supp data - int") ;
else
  LOG::LogFailure(message:"TCE - Bridge Parm Expressions - assignment of - (expression) - supp data - int") ;
end if;

// attribute of object - self
ans1 = BR::ret_int(i:(- ( self.i1 + self.i2)));
if (ans1 == -3)
  LOG::LogSuccess(message:"TCE - Bridge Parm Expressions - assignment of + (expression) - self - int") ;
else
  LOG::LogFailure(message:"TCE - Bridge Parm Expressions - assignment of + (expression) - self - int") ;
end if;

// attribute of object - inst_ref
select any tce from instances of TCE;
ans1 = BR::ret_int(i:(-(tce.i1 + tce.i2)));
if (ans1 == -3)
  LOG::LogSuccess(message:"TCE - Bridge Parm Expressions - assignment of - (expression) - inst_ref - int") ;
else
  LOG::LogFailure(message:"TCE - Bridge Parm Expressions - assignment of - (expression) - inst_ref - int") ;
end if;

// function invocations
select any tce from instances of TCE;
select any no_instances from instances of NOI;
ans1 = BR::ret_int(i:(- ( (cardinality tce ) + 2*((cardinality no_instances)+1))));
if (ans1 == -3)
  LOG::LogSuccess(message:"TCE - Bridge Parm Expressions - assignment of - (expression) - cardinality - int") ;
else
  LOG::LogFailure(message:"TCE - Bridge Parm Expressions - assignment of - (expression) - cardinality - int") ;
end if;

// transformer invocations
ans1 = BR::ret_int(i:(- ( TRAN::ret_int(i:5) + TRAN::ret_int(i:-2) )) );
if (ans1 == -3)
  LOG::LogSuccess(message:"TCE - Bridge Parm Expressions - assignment of - (expression) - transform - int") ;
else
  LOG::LogFailure(message:"TCE - Bridge Parm Expressions - assignment of - (expression) - transform - int") ;
end if;

// bridge invocations realized
ans1 = BR::ret_int(i:(- ( BR::ret_int(i:-3) + BR::ret_int(i:6) )));
if (ans1 == -3)
  LOG::LogSuccess(message:"TCE - Bridge Parm Expressions - assignment of - (expression) - bridge - realized - int") ;
else
  LOG::LogFailure(message:"TCE - Bridge Parm Expressions - assignment of - (expression) - bridge - realized - int") ;
end if;

// Transforms

// local
a=1;
b=2;
ans = TRAN::ret_bool(b:(not ( (a ==b) AND (b == a) ) ));
if (ans)
  LOG::LogSuccess(message:"TCE - Transform Parm Expressions - assignment of not expression - local var") ;
else
  LOG::LogFailure(message:"TCE - Transform Parm Expressions - assignment of not expression - local var") ;
end if;

// literal
ans = TRAN::ret_bool(b:(not ( (1 == 2) AND (3 == 3) ) ));
if ( ans )
  LOG::LogSuccess(message:"TCE - Transform Parm Expressions - assignment of not expression - literal") ;
else
  LOG::LogFailure(message:"TCE - Transform Parm Expressions - assignment of not expression - literal") ;
end if;

// received event

ans = TRAN::ret_bool(b:(not ( (rcvd_evt.b1 == rcvd_evt.b2) AND (rcvd_evt.b1 == rcvd_evt.b1) ) ) );
if ( ans )
  LOG::LogSuccess(message:"TCE - Transform Parm Expressions - assignment of not expression - rcvd_evt") ;
else
  LOG::LogFailure(message:"TCE - Transform Parm Expressions - assignment of not expression - rcvd_evt") ;
end if;

// attribute of object - self
ans = TRAN::ret_bool(b:( not ( (self.b1 == self.b2) AND (self.b1 == self.b1) ) ) );
if (ans)
  LOG::LogSuccess(message:"TCE - Transform Parm Expressions - assignment of not expression - self") ;
else
  LOG::LogFailure(message:"TCE - Transform Parm Expressions - assignment of not expression - self") ;
end if;

// attribute of object - inst_ref
select any tce from instances of TCE;
ans = TRAN::ret_bool(b:( not ( (tce.b1 == tce.b2) AND (tce.b1 == tce.b1) ) ) );
if (ans)
  LOG::LogSuccess(message:"TCE - Transform Parm Expressions - assignment of not expression - inst_ref") ;
else
  LOG::LogFailure(message:"TCE - Transform Parm Expressions - assignment of not expression - inst_ref") ;
end if;

// function invocations
select any tce from instances of TCE;
select any no_instances from instances of NOI;
ans = TRAN::ret_bool(b:( not ( (not_empty tce AND empty no_instances) AND (empty tce AND not_empty no_instances) ) ));
if (ans)
  LOG::LogSuccess(message:"TCE - Transform Parm Expressions - assignment of not expression - functions") ;
else
  LOG::LogFailure(message:"TCE - Transform Parm Expressions - assignment of not expression - functions") ;
end if;

// transformer invocations
ans = TRAN::ret_bool(b:( not ( (TRAN::ret_bool(b:TRUE) AND TRAN::ret_bool(b:FALSE) ) AND (TRAN::ret_bool(b:TRUE) AND TRAN::ret_bool(b:TRUE))) ));
if (ans)
  LOG::LogSuccess(message:"TCE - Transform Parm Expressions - assignment of not expression - transforms") ;
else
  LOG::LogFailure(message:"TCE - Transform Parm Expressions - assignment of not expression - transforms") ;
end if;

// bridge invocations realized
ans = TRAN::ret_bool(b:( not ( (TRAN::ret_bool(b:TRUE) AND TRAN::ret_bool(b:FALSE) ) AND (TRAN::ret_bool(b:TRUE) AND TRAN::ret_bool(b:TRUE))) ));
if (ans)
  LOG::LogSuccess(message:"TCE - Transform Parm Expressions - assignment of not expression - bridge - realized") ;
else
  LOG::LogFailure(message:"TCE - Transform Parm Expressions - assignment of not expression - bridge - realized") ;
end if;

// if aritmetic expressions + int

// local
a=1;
b=2;
ans1 = TRAN::ret_int(i:( (+ ( a + b )) ));
if (ans1 == 3)
  LOG::LogSuccess(message:"TCE - Transform Parm Expressions - assignment of + (expression) - local var - int") ;
else
  LOG::LogFailure(message:"TCE - Transform Parm Expressions - assignment of + (expression) - local var - int") ;
end if;

// literal

ans1 = TRAN::ret_int(i:( (+ ( 1 + 2 )) ));
if ( ans1 == 3 )
  LOG::LogSuccess(message:"TCE - Transform Parm Expressions - assignment of + (expression) - literal - int") ;
else
  LOG::LogFailure(message:"TCE - Transform Parm Expressions - assignment of + (expression) - literal - int") ;
end if;

// received event
ans1 = TRAN::ret_int(i:(+ ( rcvd_evt.i1 + rcvd_evt.i2)) );
if (ans1 == 3)
  LOG::LogSuccess(message:"TCE - Transform Parm Expressions - assignment of + (expression) - supp data - int") ;
else
  LOG::LogFailure(message:"TCE - Transform Parm Expressions - assignment of + (expression) - supp data - int") ;
end if;

// attribute of object - self
ans1 = TRAN::ret_int(i:(+ ( self.i1 + self.i2) ) );
if (ans1 == 3)
  LOG::LogSuccess(message:"TCE - Transform Parm Expressions - assignment of + (expression) - self - int") ;
else
  LOG::LogFailure(message:"TCE - Transform Parm Expressions - assignment of + (expression) - self - int") ;
end if;

// attribute of object - inst_ref
select any tce from instances of TCE;
ans1 = TRAN::ret_int(i:(+(tce.i1 + tce.i2)) );
if (ans1 == 3)
  LOG::LogSuccess(message:"TCE - Transform Parm Expressions - assignment of + (expression) - inst_ref - int") ;
else
  LOG::LogFailure(message:"TCE - Transform Parm Expressions - assignment of + (expression) - inst_ref - int") ;
end if;

// function invocations
select any tce from instances of TCE;
select any no_instances from instances of NOI;
ans1 = TRAN::ret_int(i:(+ ( (cardinality tce ) + 2*((cardinality no_instances)+1)) ) );
if (ans1 == 3)
  LOG::LogSuccess(message:"TCE - Transform Parm Expressions - assignment of + (expression) - cardinality - int") ;
else
  LOG::LogFailure(message:"TCE - Transform Parm Expressions - assignment of + (expression) - cardinality - int") ;
end if;

// transformer invocations
ans1 = TRAN::ret_int(i:( TRAN::ret_int(i:5) + TRAN::ret_int(i:-2) ));
if (ans1 == 3)
  LOG::LogSuccess(message:"TCE - Transform Parm Expressions - assignment of + (expression) - transform - int") ;
else
  LOG::LogFailure(message:"TCE - Transform Parm Expressions - assignment of + (expression) - transform - int") ;
end if;

// bridge invocations realized
ans1 = TRAN::ret_int(i:( (+ ( TRAN::ret_int(i:-3) + TRAN::ret_int(i:6) )) ));
if (ans1 == 3)
  LOG::LogSuccess(message:"TCE - Transform Parm Expressions - assignment of + (expression) - bridge - realized - int") ;
else
  LOG::LogFailure(message:"TCE - Transform Parm Expressions - assignment of + (expression) - bridge - realized - int") ;
end if;


// if aritmetic expressions - int

// local
a=1;
b=2;
ans1 = TRAN::ret_int(i:( (- ( a + b )) ));
if (ans1 == -3)
  LOG::LogSuccess(message:"TCE - Transform Parm Expressions - assignment of - (expression) - local var - int") ;
else
  LOG::LogFailure(message:"TCE - Transform Parm Expressions - assignment of - (expression) - local var - int") ;
end if;

// literal
ans1 = TRAN::ret_int(i:(- ( 1 + 2 )));
if (ans1 == -3)
  LOG::LogSuccess(message:"TCE - Transform Parm Expressions - assignment of - (expression) - literal - int") ;
else
  LOG::LogFailure(message:"TCE - Transform Parm Expressions - assignment of - (expression) - literal - int") ;
end if;

// received event
ans1 = TRAN::ret_int(i:(- ( rcvd_evt.i1 + rcvd_evt.i2)));
if (ans1 == -3)
  LOG::LogSuccess(message:"TCE - Transform Parm Expressions - assignment of - (expression) - supp data - int") ;
else
  LOG::LogFailure(message:"TCE - Transform Parm Expressions - assignment of - (expression) - supp data - int") ;
end if;

// attribute of object - self
ans1 = TRAN::ret_int(i:(- ( self.i1 + self.i2)));
if (ans1 == -3)
  LOG::LogSuccess(message:"TCE - Transform Parm Expressions - assignment of + (expression) - self - int") ;
else
  LOG::LogFailure(message:"TCE - Transform Parm Expressions - assignment of + (expression) - self - int") ;
end if;

// attribute of object - inst_ref
select any tce from instances of TCE;
ans1 = TRAN::ret_int(i:(-(tce.i1 + tce.i2)));
if (ans1 == -3)
  LOG::LogSuccess(message:"TCE - Transform Parm Expressions - assignment of - (expression) - inst_ref - int") ;
else
  LOG::LogFailure(message:"TCE - Transform Parm Expressions - assignment of - (expression) - inst_ref - int") ;
end if;

// function invocations
select any tce from instances of TCE;
select any no_instances from instances of NOI;
ans1 = TRAN::ret_int(i:(- ( (cardinality tce ) + 2*((cardinality no_instances)+1))));
if (ans1 == -3)
  LOG::LogSuccess(message:"TCE - Transform Parm Expressions - assignment of - (expression) - cardinality - int") ;
else
  LOG::LogFailure(message:"TCE - Transform Parm Expressions - assignment of - (expression) - cardinality - int") ;
end if;

// transformer invocations
ans1 = TRAN::ret_int(i:(- ( TRAN::ret_int(i:5) + TRAN::ret_int(i:-2) )) );
if (ans1 == -3)
  LOG::LogSuccess(message:"TCE - Transform Parm Expressions - assignment of - (expression) - transform - int") ;
else
  LOG::LogFailure(message:"TCE - Transform Parm Expressions - assignment of - (expression) - transform - int") ;
end if;

// bridge invocations realized
ans1 = TRAN::ret_int(i:(- ( TRAN::ret_int(i:-3) + TRAN::ret_int(i:6) )));
if (ans1 == -3)
  LOG::LogSuccess(message:"TCE - Transform Parm Expressions - assignment of - (expression) - bridge - realized - int") ;
else
  LOG::LogFailure(message:"TCE - Transform Parm Expressions - assignment of - (expression) - bridge - realized - int") ;
end if;

// Event instance Creation

ack_count=0;

// local
a=1;
b=2;
create event instance e1 of TCE5:''bool event''(b1:(not ( (a ==b) AND (b == a) ) )) to self;
generate e1;
ack_count=ack_count+1;

// literal
create event instance e1 of TCE5:''bool event''(b1:(not ( (1 == 2) AND (3 == 3) ) )) to self;
generate e1;
ack_count=ack_count+1;

// received event
create event instance e1 of TCE5:''bool event''(b1:(not ( (rcvd_evt.b1 == rcvd_evt.b2) AND (rcvd_evt.b1 == rcvd_evt.b1) ) ) ) to self;
generate e1;
ack_count=ack_count+1;

// attribute of object - self
create event instance e1 of TCE5:''bool event''(b1:( not ( (self.b1 == self.b2) AND (self.b1 == self.b1) ) ) ) to self;
generate e1;
ack_count=ack_count+1;

// attribute of object - inst_ref
select any tce from instances of TCE;
create event instance e1 of TCE5:''bool event''(b1:( not ( (tce.b1 == tce.b2) AND (tce.b1 == tce.b1) ) ) ) to self;
generate e1;
ack_count=ack_count+1;

// function invocations
select any tce from instances of TCE;
select any no_instances from instances of NOI;
create event instance e1 of TCE5:''bool event''(b1:( not ( (not_empty tce AND empty no_instances) AND (empty tce AND not_empty no_instances) ) )) to self;
generate e1;
ack_count=ack_count+1;

// transformer invocations
create event instance e1 of TCE5:''bool event''(b1:( not ( (TRAN::ret_bool(b:TRUE) AND TRAN::ret_bool(b:FALSE) ) AND (TRAN::ret_bool(b:TRUE) AND TRAN::ret_bool(b:TRUE))) )) to self;
generate e1;
ack_count=ack_count+1;

// bridge invocations realized
create event instance e1 of TCE5:''bool event''(b1:( not ( (TRAN::ret_bool(b:TRUE) AND TRAN::ret_bool(b:FALSE) ) AND (TRAN::ret_bool(b:TRUE) AND TRAN::ret_bool(b:TRUE))) )) to self;
generate e1;
ack_count=ack_count+1;

// if aritmetic expressions + int

// local
a=1;
b=2;
create event instance e2 of TCE6:''int event''(i1:( (+ ( a + b )) )) to self;
generate e2;
ack_count=ack_count+1;

// literal
create event instance e2 of TCE6:''int event''(i1:( (+ ( 1 + 2 )) )) to self;
generate e2;
ack_count=ack_count+1;

// received event
create event instance e2 of TCE6:''int event''(i1:(+ ( rcvd_evt.i1 + rcvd_evt.i2)) ) to self;
generate e2;
ack_count=ack_count+1;

// attribute of object - self
create event instance e2 of TCE6:''int event''(i1:(+ ( self.i1 + self.i2) ) ) to self;
generate e2;
ack_count=ack_count+1;

// attribute of object - inst_ref
select any tce from instances of TCE;
create event instance e2 of TCE6:''int event''(i1:(+(tce.i1 + tce.i2)) ) to self;
generate e2;
ack_count=ack_count+1;

// function invocations
select any tce from instances of TCE;
select any no_instances from instances of NOI;
create event instance e2 of TCE6:''int event''(i1:(+ ( (cardinality tce ) + 2*((cardinality no_instances)+1)) ) ) to self;
generate e2;
ack_count=ack_count+1;

// transformer invocations
create event instance e2 of TCE6:''int event''(i1:( TRAN::ret_int(i:5) + TRAN::ret_int(i:-2) )) to self;
generate e2;
ack_count=ack_count+1;

// bridge invocations realized
create event instance e2 of TCE6:''int event''(i1:( (+ ( TRAN::ret_int(i:-3) + TRAN::ret_int(i:6) )) )) to self;
generate e2;
ack_count=ack_count+1;


// the e1 and e2 events will take us to the next state

self.ack_count=ack_count;
',
	'');
INSERT INTO SM_MOAH
	VALUES ("89f6741c-6102-4669-8165-56de21561057",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"45d77703-d3e3-43ee-b5cd-5049112b265c");
INSERT INTO SM_AH
	VALUES ("89f6741c-6102-4669-8165-56de21561057",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a");
INSERT INTO SM_ACT
	VALUES ("89f6741c-6102-4669-8165-56de21561057",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	1,
	'if (rcvd_evt.b1 == TRUE)
  LOG::LogSuccess(message:"TCE - Count acks from Bool Event") ;
else
  LOG::LogFailure(message:"TCE - Count acks from Bool Event") ;
end if;
self.ack_count = self.ack_count - 1;
if (self.ack_count == 0)
  generate TCE4:''next test with supp data''(b1:TRUE,b2:FALSE,i1:1,i2:2,r1:1.0,r2:2.0) to self;
end if;',
	'');
INSERT INTO SM_MOAH
	VALUES ("8bee4d00-25af-4798-acc0-0e82b31fbbe0",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"66142144-e6dc-4d4f-a593-5dd7963818a0");
INSERT INTO SM_AH
	VALUES ("8bee4d00-25af-4798-acc0-0e82b31fbbe0",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a");
INSERT INTO SM_ACT
	VALUES ("8bee4d00-25af-4798-acc0-0e82b31fbbe0",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	1,
	'if (rcvd_evt.i1 == 3)
  LOG::LogSuccess(message:"TCE - Count acks from Int Event") ;
else
  LOG::LogFailure(message:"TCE - Count acks from Int Event") ;
end if;
self.ack_count = self.ack_count - 1;
if (self.ack_count == 0)
  generate TCE4:''next test with supp data''(b1:TRUE,b2:FALSE,i1:1,i2:2,r1:1.0,r2:2.0) to self;
end if;',
	'');
INSERT INTO SM_MOAH
	VALUES ("bdd0c70b-c682-4d51-ab0a-ba37fbc99dba",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"524fae2c-6c1e-4c64-a790-5020c19fc83d");
INSERT INTO SM_AH
	VALUES ("bdd0c70b-c682-4d51-ab0a-ba37fbc99dba",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a");
INSERT INTO SM_ACT
	VALUES ("bdd0c70b-c682-4d51-ab0a-ba37fbc99dba",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	1,
	'// Event generation

ack_count=0;

// local
a=1;
b=2;
generate TCE5:''bool event''(b1:(not ( (a ==b) AND (b == a) ) )) to self;

ack_count=ack_count+1;

// literal
generate TCE5:''bool event''(b1:(not ( (1 == 2) AND (3 == 3) ) )) to self;

ack_count=ack_count+1;

// received event
generate TCE5:''bool event''(b1:(not ( (rcvd_evt.b1 == rcvd_evt.b2) AND (rcvd_evt.b1 == rcvd_evt.b1) ) ) ) to self;

ack_count=ack_count+1;

// attribute of object - self
generate TCE5:''bool event''(b1:( not ( (self.b1 == self.b2) AND (self.b1 == self.b1) ) ) ) to self;

ack_count=ack_count+1;

// attribute of object - inst_ref
select any tce from instances of TCE;
generate TCE5:''bool event''(b1:( not ( (tce.b1 == tce.b2) AND (tce.b1 == tce.b1) ) ) ) to self;

ack_count=ack_count+1;

// function invocations
select any tce from instances of TCE;
select any no_instances from instances of NOI;
generate TCE5:''bool event''(b1:( not ( (not_empty tce AND empty no_instances) AND (empty tce AND not_empty no_instances) ) )) to self;

ack_count=ack_count+1;

// transformer invocations
generate TCE5:''bool event''(b1:( not ( (TRAN::ret_bool(b:TRUE) AND TRAN::ret_bool(b:FALSE) ) AND (TRAN::ret_bool(b:TRUE) AND TRAN::ret_bool(b:TRUE))) )) to self;

ack_count=ack_count+1;

// bridge invocations realized
generate TCE5:''bool event''(b1:( not ( (BR::ret_bool(b:TRUE) AND BR::ret_bool(b:FALSE) ) AND (BR::ret_bool(b:TRUE) AND BR::ret_bool(b:TRUE))) )) to self;

ack_count=ack_count+1;

// if aritmetic expressions + int

// local
a=1;
b=2;
generate TCE6:''int event''(i1:( (+ ( a + b )) )) to self;

ack_count=ack_count+1;

// literal
generate TCE6:''int event''(i1:( (+ ( 1 + 2 )) )) to self;

ack_count=ack_count+1;

// received event
generate TCE6:''int event''(i1:(+ ( rcvd_evt.i1 + rcvd_evt.i2)) ) to self;

ack_count=ack_count+1;

// attribute of object - self
generate TCE6:''int event''(i1:(+ ( self.i1 + self.i2) ) ) to self;

ack_count=ack_count+1;

// attribute of object - inst_ref
select any tce from instances of TCE;
generate TCE6:''int event''(i1:(+(tce.i1 + tce.i2)) ) to self;

ack_count=ack_count+1;

// function invocations
select any tce from instances of TCE;
select any no_instances from instances of NOI;
generate TCE6:''int event''(i1:(+ ( (cardinality tce ) + 2*((cardinality no_instances)+1)) ) ) to self;

ack_count=ack_count+1;

// transformer invocations
generate TCE6:''int event''(i1:( TRAN::ret_int(i:5) + TRAN::ret_int(i:-2) )) to self;

ack_count=ack_count+1;

// bridge invocations realized
generate TCE6:''int event''(i1:( (+ ( BR::ret_int(i:-3) + BR::ret_int(i:6) )) )) to self;

ack_count=ack_count+1;

// single

// local
bv=FALSE;
generate TCE5:''bool event''(b1:(not(bv))) to self;

ack_count=ack_count+1;

// literal
generate TCE5:''bool event''(b1:(not FALSE)) to self;

ack_count=ack_count+1;

// received event
generate TCE5:''bool event''(b1:(not(rcvd_evt.b2))) to self;

ack_count=ack_count+1;

// attribute of object - self
generate TCE5:''bool event''(b1:(not self.b2)) to self;

ack_count=ack_count+1;

// attribute of object - inst_ref
select any tce from instances of TCE;
generate TCE5:''bool event''(b1:( not tce.b2 )) to self;

ack_count=ack_count+1;

// function invocations
select any tce from instances of TCE;
select any no_instances from instances of NOI;
generate TCE5:''bool event''(b1:( not(empty tce))) to self;
generate TCE5:''bool event''(b1:(not(not_empty no_instances))) to self;
generate TCE5:''bool event''(b1:(empty no_instances)) to self;
generate TCE5:''bool event''(b1:(not_empty tce)) to self;

ack_count=ack_count+4;

// transformer invocations
generate TCE5:''bool event''(b1:(not(TRAN::ret_bool(b:FALSE)))) to self;
generate TCE5:''bool event''(b1:(TRAN::ret_bool(b:TRUE))) to self;

ack_count=ack_count+2;

// bridge invocations realized
generate TCE5:''bool event''(b1:(not(BR::ret_bool(b:FALSE)))) to self;
generate TCE5:''bool event''(b1:(BR::ret_bool(b:TRUE))) to self;

ack_count=ack_count+2;

// if aritmetic expressions + int

// local
b=3;
generate TCE6:''int event''(i1:+(b)) to self;

ack_count=ack_count+1;

// literal
generate TCE6:''int event''(i1:+(3)) to self;

ack_count=ack_count+1;

// function invocations
create object instance t2 of TCE;
create object instance t3 of TCE;

select many tces from instances of TCE;
generate TCE6:''int event''(i1:+(cardinality tces)) to self;

delete object instance t2;
delete object instance t3;

ack_count=ack_count+1;

// transformer invocations
generate TCE6:''int event''(i1:+(TRAN::ret_int(i:3))) to self;

ack_count=ack_count+1;

// bridge invocations realized
generate TCE6:''int event''(i1:+(BR::ret_int(i:3))) to self;

ack_count=ack_count+1;



// the e1 and e2 events will take us to the next state

self.ack_count=ack_count;
',
	'');
INSERT INTO SM_MOAH
	VALUES ("0d567cce-d22e-4419-87bb-9e6b0eddc890",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"728b7882-730f-41c1-ae4e-7ab03e7f35e6");
INSERT INTO SM_AH
	VALUES ("0d567cce-d22e-4419-87bb-9e6b0eddc890",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a");
INSERT INTO SM_ACT
	VALUES ("0d567cce-d22e-4419-87bb-9e6b0eddc890",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	1,
	'if (rcvd_evt.b1 == TRUE)
  LOG::LogSuccess(message:"TCE - Count acks from Bool Event") ;
else
  LOG::LogFailure(message:"TCE - Count acks from Bool Event") ;
end if;
self.ack_count = self.ack_count - 1;
if (self.ack_count == 0)
  generate TCE4:''next test with supp data''(b1:TRUE,b2:FALSE,i1:1,i2:2,r1:1.0,r2:2.0) to self;
end if;',
	'');
INSERT INTO SM_MOAH
	VALUES ("826cb408-aa86-4d72-a2f0-4c3e377b0352",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"cbcfa0d1-6fac-454e-924b-9c9916d2bd1f");
INSERT INTO SM_AH
	VALUES ("826cb408-aa86-4d72-a2f0-4c3e377b0352",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a");
INSERT INTO SM_ACT
	VALUES ("826cb408-aa86-4d72-a2f0-4c3e377b0352",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	1,
	'if (rcvd_evt.i1 == 3)
  LOG::LogSuccess(message:"TCE - Count acks from Int Event") ;
else
  LOG::LogFailure(message:"TCE - Count acks from Int Event") ;
end if;
self.ack_count = self.ack_count - 1;
if (self.ack_count == 0)
  generate TCE4:''next test with supp data''(b1:TRUE,b2:FALSE,i1:1,i2:2,r1:1.0,r2:2.0) to self;
end if;',
	'');
INSERT INTO SM_MOAH
	VALUES ("6daf6c9e-1ecb-4b8f-9e38-e87a4d513a24",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"0c4ad770-749f-491c-b878-9e1fad95531e");
INSERT INTO SM_AH
	VALUES ("6daf6c9e-1ecb-4b8f-9e38-e87a4d513a24",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a");
INSERT INTO SM_ACT
	VALUES ("6daf6c9e-1ecb-4b8f-9e38-e87a4d513a24",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	1,
	'select many a_set from instances of A;
select many b_set from instances of A;
select many c_set from instances of A;
select many d_set from instances of A;

if (( a_set == b_set ) and ( c_set == d_set ))
   LOG::LogSuccess (message:"Test Compound Expressions - inst_ref_set<Object>") ;
else
   LOG::LogFailure (message:"Test Compound Expressions - inst_ref_set<Object>") ;
end if;

// send next test event back to controlling object
select any dr from instances of DR;
generate DR2:''next test'' () to dr;
',
	'');
INSERT INTO SM_MOAH
	VALUES ("aed5cf0b-14b7-491f-86e1-fbe959d6737e",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"b68b373c-42d2-47f2-91fd-5fca65f3b979");
INSERT INTO SM_AH
	VALUES ("aed5cf0b-14b7-491f-86e1-fbe959d6737e",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a");
INSERT INTO SM_ACT
	VALUES ("aed5cf0b-14b7-491f-86e1-fbe959d6737e",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	1,
	'select any a from instances of A;
select any b from instances of A where selected.a_id == a.a_id;
select any c from instances of A;
select any d from instances of A where selected.a_id == c.a_id;

if (( a == b ) and ( c == d))
   LOG::LogSuccess (message:"Test Compound Expressions - inst_ref<Object>") ;
else
   LOG::LogFailure (message:"Test Compound Expressions - inst_ref<Object>") ;
end if;

// send next test event back to controlling object
select any dr from instances of DR;
generate DR2:''next test'' () to dr;
',
	'');
INSERT INTO SM_TAH
	VALUES ("cb1acc9d-4d76-407c-ac6f-91f337c2c7b0",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"3655d86a-ecd8-4a12-8738-c84d1545e543");
INSERT INTO SM_AH
	VALUES ("cb1acc9d-4d76-407c-ac6f-91f337c2c7b0",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a");
INSERT INTO SM_ACT
	VALUES ("cb1acc9d-4d76-407c-ac6f-91f337c2c7b0",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	1,
	'',
	'');
INSERT INTO SM_TAH
	VALUES ("186ad659-752c-4b52-bb2b-a2ca0472d891",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"bd83c792-3ef8-437a-92d4-c11af4887e99");
INSERT INTO SM_AH
	VALUES ("186ad659-752c-4b52-bb2b-a2ca0472d891",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a");
INSERT INTO SM_ACT
	VALUES ("186ad659-752c-4b52-bb2b-a2ca0472d891",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	1,
	'',
	'');
INSERT INTO SM_TAH
	VALUES ("b7f8c455-0887-4937-99ed-779ae72d4193",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"6b9abeec-4070-4547-93fa-cdf507839249");
INSERT INTO SM_AH
	VALUES ("b7f8c455-0887-4937-99ed-779ae72d4193",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a");
INSERT INTO SM_ACT
	VALUES ("b7f8c455-0887-4937-99ed-779ae72d4193",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	1,
	'',
	'');
INSERT INTO SM_TAH
	VALUES ("5e6c4b5b-fafe-4e0a-be0c-b3d677c28c80",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"08805801-aa2c-414b-9a65-2a1253115452");
INSERT INTO SM_AH
	VALUES ("5e6c4b5b-fafe-4e0a-be0c-b3d677c28c80",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a");
INSERT INTO SM_ACT
	VALUES ("5e6c4b5b-fafe-4e0a-be0c-b3d677c28c80",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	1,
	'',
	'');
INSERT INTO SM_TAH
	VALUES ("1b8ad66d-909c-4bdd-8fae-e17f789f8048",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"7a5764bd-3f87-4b45-9a0a-771d16926045");
INSERT INTO SM_AH
	VALUES ("1b8ad66d-909c-4bdd-8fae-e17f789f8048",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a");
INSERT INTO SM_ACT
	VALUES ("1b8ad66d-909c-4bdd-8fae-e17f789f8048",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	1,
	'',
	'');
INSERT INTO SM_TAH
	VALUES ("be228470-8541-41c4-85fe-0889445376ea",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"3996d6de-1bf5-4f5c-af57-cc5fb9bd4f68");
INSERT INTO SM_AH
	VALUES ("be228470-8541-41c4-85fe-0889445376ea",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a");
INSERT INTO SM_ACT
	VALUES ("be228470-8541-41c4-85fe-0889445376ea",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	1,
	'',
	'');
INSERT INTO SM_TAH
	VALUES ("f3333345-6ab1-4b3a-9030-f081564f5e8a",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"374e427a-f022-4a0f-9e52-7b37877478d4");
INSERT INTO SM_AH
	VALUES ("f3333345-6ab1-4b3a-9030-f081564f5e8a",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a");
INSERT INTO SM_ACT
	VALUES ("f3333345-6ab1-4b3a-9030-f081564f5e8a",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	1,
	'',
	'');
INSERT INTO SM_TAH
	VALUES ("1ddf89e7-4b77-4d01-8bae-80487d1e7f2d",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"764cd8a3-38fb-49a0-b07c-2ff52d3d45b8");
INSERT INTO SM_AH
	VALUES ("1ddf89e7-4b77-4d01-8bae-80487d1e7f2d",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a");
INSERT INTO SM_ACT
	VALUES ("1ddf89e7-4b77-4d01-8bae-80487d1e7f2d",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	1,
	'',
	'');
INSERT INTO SM_TAH
	VALUES ("3d4db531-1b81-474b-b5d3-2b6657ed9024",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"07decc7e-e56a-4381-93f8-8abfee46840c");
INSERT INTO SM_AH
	VALUES ("3d4db531-1b81-474b-b5d3-2b6657ed9024",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a");
INSERT INTO SM_ACT
	VALUES ("3d4db531-1b81-474b-b5d3-2b6657ed9024",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	1,
	'',
	'');
INSERT INTO SM_TAH
	VALUES ("8ca47f19-14a3-49bf-bdcf-029a91d6637f",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"328063bb-b837-409d-9b21-dfd80704d257");
INSERT INTO SM_AH
	VALUES ("8ca47f19-14a3-49bf-bdcf-029a91d6637f",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a");
INSERT INTO SM_ACT
	VALUES ("8ca47f19-14a3-49bf-bdcf-029a91d6637f",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	1,
	'',
	'');
INSERT INTO SM_TAH
	VALUES ("bb711601-55ae-4e5f-b387-1371e25fffed",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"ee780f64-2976-42c8-86c3-588512e0fef4");
INSERT INTO SM_AH
	VALUES ("bb711601-55ae-4e5f-b387-1371e25fffed",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a");
INSERT INTO SM_ACT
	VALUES ("bb711601-55ae-4e5f-b387-1371e25fffed",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	1,
	'',
	'');
INSERT INTO SM_TAH
	VALUES ("a4a2aa84-53f3-4bbd-88f4-48da4f7f8fd1",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"83f1e1e3-724d-4c21-93e9-d65ecb05c0a2");
INSERT INTO SM_AH
	VALUES ("a4a2aa84-53f3-4bbd-88f4-48da4f7f8fd1",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a");
INSERT INTO SM_ACT
	VALUES ("a4a2aa84-53f3-4bbd-88f4-48da4f7f8fd1",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	1,
	'',
	'');
INSERT INTO SM_TAH
	VALUES ("bcff3e01-7caf-42fc-ba17-40e6f4013e64",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"cded7adf-872f-47a7-bbf1-c73866058db1");
INSERT INTO SM_AH
	VALUES ("bcff3e01-7caf-42fc-ba17-40e6f4013e64",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a");
INSERT INTO SM_ACT
	VALUES ("bcff3e01-7caf-42fc-ba17-40e6f4013e64",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	1,
	'',
	'');
INSERT INTO SM_TAH
	VALUES ("c5d1cc4a-61f3-452b-bfc1-e7ae5d6d70a9",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"75982f72-184c-4512-a8c5-efb1c205cf0c");
INSERT INTO SM_AH
	VALUES ("c5d1cc4a-61f3-452b-bfc1-e7ae5d6d70a9",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a");
INSERT INTO SM_ACT
	VALUES ("c5d1cc4a-61f3-452b-bfc1-e7ae5d6d70a9",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	1,
	'',
	'');
INSERT INTO SM_TAH
	VALUES ("a6acadad-e4ea-424d-9377-a5f214a71a34",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"49d4b123-5205-4fd5-b246-b05ab91a78b7");
INSERT INTO SM_AH
	VALUES ("a6acadad-e4ea-424d-9377-a5f214a71a34",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a");
INSERT INTO SM_ACT
	VALUES ("a6acadad-e4ea-424d-9377-a5f214a71a34",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	1,
	'',
	'');
INSERT INTO SM_TAH
	VALUES ("72eed227-df05-438e-91a7-1c060949924f",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"067825df-f096-41ad-90b0-c40200cf671b");
INSERT INTO SM_AH
	VALUES ("72eed227-df05-438e-91a7-1c060949924f",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a");
INSERT INTO SM_ACT
	VALUES ("72eed227-df05-438e-91a7-1c060949924f",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	1,
	'',
	'');
INSERT INTO SM_TAH
	VALUES ("8ec0e028-790f-4448-872c-9064c016ce7d",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"8b62f101-a759-498c-bf73-b15fd2f582dc");
INSERT INTO SM_AH
	VALUES ("8ec0e028-790f-4448-872c-9064c016ce7d",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a");
INSERT INTO SM_ACT
	VALUES ("8ec0e028-790f-4448-872c-9064c016ce7d",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	1,
	'',
	'');
INSERT INTO SM_TAH
	VALUES ("ef224359-321b-4b49-be4d-3a08c14c9092",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"b6b9f10b-274f-4b2d-8570-f584f6b4d47c");
INSERT INTO SM_AH
	VALUES ("ef224359-321b-4b49-be4d-3a08c14c9092",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a");
INSERT INTO SM_ACT
	VALUES ("ef224359-321b-4b49-be4d-3a08c14c9092",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	1,
	'',
	'');
INSERT INTO SM_TAH
	VALUES ("24cd1345-bbef-4c22-bc23-c566e4626318",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"1021bc60-f8ff-4c51-b941-3acf4fd98990");
INSERT INTO SM_AH
	VALUES ("24cd1345-bbef-4c22-bc23-c566e4626318",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a");
INSERT INTO SM_ACT
	VALUES ("24cd1345-bbef-4c22-bc23-c566e4626318",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	1,
	'',
	'');
INSERT INTO SM_TAH
	VALUES ("164e4283-7f26-419d-8bb0-a3a423eaacc0",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"8522426e-d0bb-400e-be05-ac2a8da8a082");
INSERT INTO SM_AH
	VALUES ("164e4283-7f26-419d-8bb0-a3a423eaacc0",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a");
INSERT INTO SM_ACT
	VALUES ("164e4283-7f26-419d-8bb0-a3a423eaacc0",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	1,
	'',
	'');
INSERT INTO SM_TAH
	VALUES ("34ed6b63-750d-4a04-bb4a-3275d4b0b4be",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"29bf3b38-2e58-43e9-97c6-e37d5a6ed2ea");
INSERT INTO SM_AH
	VALUES ("34ed6b63-750d-4a04-bb4a-3275d4b0b4be",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a");
INSERT INTO SM_ACT
	VALUES ("34ed6b63-750d-4a04-bb4a-3275d4b0b4be",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	1,
	'',
	'');
INSERT INTO SM_TAH
	VALUES ("c9449c7b-db3b-4cfc-8e1a-b5ee78428ca0",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"194a6611-16e8-4855-9aa7-54266d5bf421");
INSERT INTO SM_AH
	VALUES ("c9449c7b-db3b-4cfc-8e1a-b5ee78428ca0",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a");
INSERT INTO SM_ACT
	VALUES ("c9449c7b-db3b-4cfc-8e1a-b5ee78428ca0",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	1,
	'',
	'');
INSERT INTO SM_TAH
	VALUES ("bdec22e5-5ce9-4743-bd3f-3bd7aed73834",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"085d387a-8d88-4012-8657-057ab08adbc8");
INSERT INTO SM_AH
	VALUES ("bdec22e5-5ce9-4743-bd3f-3bd7aed73834",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a");
INSERT INTO SM_ACT
	VALUES ("bdec22e5-5ce9-4743-bd3f-3bd7aed73834",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	1,
	'',
	'');
INSERT INTO SM_TAH
	VALUES ("0ff14317-a08c-4c64-9126-f0d330aa2aa1",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"b50a700e-10d3-4c6d-ab1b-bc73166259e4");
INSERT INTO SM_AH
	VALUES ("0ff14317-a08c-4c64-9126-f0d330aa2aa1",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a");
INSERT INTO SM_ACT
	VALUES ("0ff14317-a08c-4c64-9126-f0d330aa2aa1",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	1,
	'',
	'');
INSERT INTO SM_TAH
	VALUES ("04006fa5-e550-43c7-a993-b4f38f6582c4",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"8f49ac2e-6d97-4d53-96a7-c9be2d72d200");
INSERT INTO SM_AH
	VALUES ("04006fa5-e550-43c7-a993-b4f38f6582c4",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a");
INSERT INTO SM_ACT
	VALUES ("04006fa5-e550-43c7-a993-b4f38f6582c4",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	1,
	'',
	'');
INSERT INTO SM_TAH
	VALUES ("de2cb7f5-50d4-4848-aab2-f6bcf4c8a071",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"607921f3-580a-4ddd-8d53-1a70e723c788");
INSERT INTO SM_AH
	VALUES ("de2cb7f5-50d4-4848-aab2-f6bcf4c8a071",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a");
INSERT INTO SM_ACT
	VALUES ("de2cb7f5-50d4-4848-aab2-f6bcf4c8a071",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	1,
	'',
	'');
INSERT INTO SM_TAH
	VALUES ("cd77e453-c5cb-463e-8089-9d835453634d",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"c4808869-4080-4e6f-be96-371726d3da72");
INSERT INTO SM_AH
	VALUES ("cd77e453-c5cb-463e-8089-9d835453634d",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a");
INSERT INTO SM_ACT
	VALUES ("cd77e453-c5cb-463e-8089-9d835453634d",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	1,
	'',
	'');
INSERT INTO SM_TAH
	VALUES ("5aee09bb-8ab9-4b26-9f93-dc50a667c75c",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"6b753678-3406-4c73-8912-a10455d69f20");
INSERT INTO SM_AH
	VALUES ("5aee09bb-8ab9-4b26-9f93-dc50a667c75c",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a");
INSERT INTO SM_ACT
	VALUES ("5aee09bb-8ab9-4b26-9f93-dc50a667c75c",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	1,
	'',
	'');
INSERT INTO SM_TAH
	VALUES ("8eae5561-4e16-4f5a-b69d-339d2c71684c",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"0ba44e92-9191-4f60-bbdc-5785a6932b04");
INSERT INTO SM_AH
	VALUES ("8eae5561-4e16-4f5a-b69d-339d2c71684c",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a");
INSERT INTO SM_ACT
	VALUES ("8eae5561-4e16-4f5a-b69d-339d2c71684c",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	1,
	'',
	'');
INSERT INTO SM_TAH
	VALUES ("93bcc5d9-9f2a-43c4-a575-e493cbf650a7",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"87c007d1-836d-4901-b8e0-6bdd54795893");
INSERT INTO SM_AH
	VALUES ("93bcc5d9-9f2a-43c4-a575-e493cbf650a7",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a");
INSERT INTO SM_ACT
	VALUES ("93bcc5d9-9f2a-43c4-a575-e493cbf650a7",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	1,
	'',
	'');
INSERT INTO SM_TAH
	VALUES ("6cb52411-71dd-456e-af9c-e8ae6bad13fb",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"05297d72-1d45-4c0a-8506-f29ef770b96a");
INSERT INTO SM_AH
	VALUES ("6cb52411-71dd-456e-af9c-e8ae6bad13fb",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a");
INSERT INTO SM_ACT
	VALUES ("6cb52411-71dd-456e-af9c-e8ae6bad13fb",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	1,
	'',
	'');
INSERT INTO SM_TAH
	VALUES ("82a8ff7a-a42b-4fe8-bcc1-6712958a6532",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	"fcf33d51-8aab-477d-88bc-3bf7d040e1c3");
INSERT INTO SM_AH
	VALUES ("82a8ff7a-a42b-4fe8-bcc1-6712958a6532",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a");
INSERT INTO SM_ACT
	VALUES ("82a8ff7a-a42b-4fe8-bcc1-6712958a6532",
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	1,
	'',
	'');
INSERT INTO GD_MD
	VALUES ("58bd531e-c351-4bce-8dd8-4db6a09cf661",
	8,
	"3b81eb79-08ec-4e48-af03-785245ae5d3a",
	40,
	1,
	0,
	1,
	1,
	0,
	12,
	0,
	0,
	0,
	0,
	0,
	0,
	'',
	'ex2::ex2::Test Compound Expressions::Instance State Machine');
INSERT INTO GD_GE
	VALUES ("e4ad9f60-21c6-4c9f-81fb-3317608d0dc0",
	"58bd531e-c351-4bce-8dd8-4db6a09cf661",
	"bfc299c3-5fe5-4498-ab77-97d2d5b7896d",
	41,
	0,
	'ex2::ex2::Test Compound Expressions::Instance State Machine::Compound Expressions Using Constants');
INSERT INTO GD_SHP
	VALUES ("e4ad9f60-21c6-4c9f-81fb-3317608d0dc0");
INSERT INTO GD_NCS
	VALUES ("e4ad9f60-21c6-4c9f-81fb-3317608d0dc0");
INSERT INTO DIM_ND
	VALUES (176.000000,
	96.000000,
	"e4ad9f60-21c6-4c9f-81fb-3317608d0dc0");
INSERT INTO DIM_GE
	VALUES (1696.000000,
	1248.000000,
	"e4ad9f60-21c6-4c9f-81fb-3317608d0dc0",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("e4ad9f60-21c6-4c9f-81fb-3317608d0dc0",
	1,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_CON
	VALUES ("85378c38-3dd0-4167-9029-4fb57c58804a",
	1792.000000,
	1344.000000,
	"e4ad9f60-21c6-4c9f-81fb-3317608d0dc0");
INSERT INTO DIM_CON
	VALUES ("923e55ef-0752-4d7f-b198-c8dcf2630540",
	1696.000000,
	1280.000000,
	"e4ad9f60-21c6-4c9f-81fb-3317608d0dc0");
INSERT INTO DIM_CON
	VALUES ("5984872e-dd4e-455d-87e6-38766fdd462d",
	1728.000000,
	1248.000000,
	"e4ad9f60-21c6-4c9f-81fb-3317608d0dc0");
INSERT INTO GD_GE
	VALUES ("1a9d437d-766a-4614-9a19-49aeafb3f03f",
	"58bd531e-c351-4bce-8dd8-4db6a09cf661",
	"038e88f8-7ace-47ef-a50f-f888460af294",
	41,
	0,
	'ex2::ex2::Test Compound Expressions::Instance State Machine::Compound Expressions Using Local Variables');
INSERT INTO GD_SHP
	VALUES ("1a9d437d-766a-4614-9a19-49aeafb3f03f");
INSERT INTO GD_NCS
	VALUES ("1a9d437d-766a-4614-9a19-49aeafb3f03f");
INSERT INTO DIM_ND
	VALUES (176.000000,
	96.000000,
	"1a9d437d-766a-4614-9a19-49aeafb3f03f");
INSERT INTO DIM_GE
	VALUES (1696.000000,
	1392.000000,
	"1a9d437d-766a-4614-9a19-49aeafb3f03f",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("1a9d437d-766a-4614-9a19-49aeafb3f03f",
	1,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_CON
	VALUES ("aa4fe738-e739-4fad-b3ee-6c5a92443a85",
	1792.000000,
	1392.000000,
	"1a9d437d-766a-4614-9a19-49aeafb3f03f");
INSERT INTO DIM_CON
	VALUES ("7170705c-92ca-44ef-8113-2b52227e5b2c",
	1792.000000,
	1488.000000,
	"1a9d437d-766a-4614-9a19-49aeafb3f03f");
INSERT INTO GD_GE
	VALUES ("4cc8676d-3948-434f-a111-f20d2d8d4950",
	"58bd531e-c351-4bce-8dd8-4db6a09cf661",
	"41349bad-35a3-45e9-87ec-9669abc548e0",
	41,
	0,
	'ex2::ex2::Test Compound Expressions::Instance State Machine::Compound Expressions Using Object Attributes');
INSERT INTO GD_SHP
	VALUES ("4cc8676d-3948-434f-a111-f20d2d8d4950");
INSERT INTO GD_NCS
	VALUES ("4cc8676d-3948-434f-a111-f20d2d8d4950");
INSERT INTO DIM_ND
	VALUES (176.000000,
	96.000000,
	"4cc8676d-3948-434f-a111-f20d2d8d4950");
INSERT INTO DIM_GE
	VALUES (1696.000000,
	1536.000000,
	"4cc8676d-3948-434f-a111-f20d2d8d4950",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("4cc8676d-3948-434f-a111-f20d2d8d4950",
	1,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_CON
	VALUES ("9dceb7d9-3f65-4a00-aa04-3a0f81db7386",
	1792.000000,
	1536.000000,
	"4cc8676d-3948-434f-a111-f20d2d8d4950");
INSERT INTO DIM_CON
	VALUES ("e4c107fc-897c-4d34-acea-cd5b1c6238fa",
	1792.000000,
	1632.000000,
	"4cc8676d-3948-434f-a111-f20d2d8d4950");
INSERT INTO GD_GE
	VALUES ("c0729b34-eeb1-4cd8-b15a-145b9780ee49",
	"58bd531e-c351-4bce-8dd8-4db6a09cf661",
	"fe52ac30-3fd7-4731-ad00-5b83a8efed4d",
	41,
	0,
	'ex2::ex2::Test Compound Expressions::Instance State Machine::Compound Expressions Using Supplemental Data Items Received From An Event');
INSERT INTO GD_SHP
	VALUES ("c0729b34-eeb1-4cd8-b15a-145b9780ee49");
INSERT INTO GD_NCS
	VALUES ("c0729b34-eeb1-4cd8-b15a-145b9780ee49");
INSERT INTO DIM_ND
	VALUES (176.000000,
	96.000000,
	"c0729b34-eeb1-4cd8-b15a-145b9780ee49");
INSERT INTO DIM_GE
	VALUES (1696.000000,
	1680.000000,
	"c0729b34-eeb1-4cd8-b15a-145b9780ee49",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("c0729b34-eeb1-4cd8-b15a-145b9780ee49",
	1,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_CON
	VALUES ("28dd573c-6f6e-4556-9c94-d5479eb022bf",
	1792.000000,
	1680.000000,
	"c0729b34-eeb1-4cd8-b15a-145b9780ee49");
INSERT INTO DIM_CON
	VALUES ("4f32f80e-07b2-4f74-b77b-d08acf64ae04",
	1792.000000,
	1776.000000,
	"c0729b34-eeb1-4cd8-b15a-145b9780ee49");
INSERT INTO GD_GE
	VALUES ("b37bb01b-f38f-4c76-b7d0-e16044458c24",
	"58bd531e-c351-4bce-8dd8-4db6a09cf661",
	"cd578d26-c528-4867-9d12-a0dd8bb2c794",
	41,
	0,
	'ex2::ex2::Test Compound Expressions::Instance State Machine::Compound Expressions Using Function Invocations');
INSERT INTO GD_SHP
	VALUES ("b37bb01b-f38f-4c76-b7d0-e16044458c24");
INSERT INTO GD_NCS
	VALUES ("b37bb01b-f38f-4c76-b7d0-e16044458c24");
INSERT INTO DIM_ND
	VALUES (176.000000,
	96.000000,
	"b37bb01b-f38f-4c76-b7d0-e16044458c24");
INSERT INTO DIM_GE
	VALUES (1696.000000,
	1824.000000,
	"b37bb01b-f38f-4c76-b7d0-e16044458c24",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("b37bb01b-f38f-4c76-b7d0-e16044458c24",
	1,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_CON
	VALUES ("93aabd87-ebc6-4ed9-b128-ad728430b704",
	1792.000000,
	1824.000000,
	"b37bb01b-f38f-4c76-b7d0-e16044458c24");
INSERT INTO DIM_CON
	VALUES ("282beb13-fe8e-4999-b5ab-52dda39f6596",
	1792.000000,
	1920.000000,
	"b37bb01b-f38f-4c76-b7d0-e16044458c24");
INSERT INTO GD_GE
	VALUES ("6b88befb-c370-4cca-8ca4-f78599af1c7c",
	"58bd531e-c351-4bce-8dd8-4db6a09cf661",
	"99cf819c-57ce-491f-8e16-9ce51a02d744",
	41,
	0,
	'ex2::ex2::Test Compound Expressions::Instance State Machine::Compound Expressions Using Transformer Invocations');
INSERT INTO GD_SHP
	VALUES ("6b88befb-c370-4cca-8ca4-f78599af1c7c");
INSERT INTO GD_NCS
	VALUES ("6b88befb-c370-4cca-8ca4-f78599af1c7c");
INSERT INTO DIM_ND
	VALUES (176.000000,
	96.000000,
	"6b88befb-c370-4cca-8ca4-f78599af1c7c");
INSERT INTO DIM_GE
	VALUES (1696.000000,
	1968.000000,
	"6b88befb-c370-4cca-8ca4-f78599af1c7c",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("6b88befb-c370-4cca-8ca4-f78599af1c7c",
	1,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_CON
	VALUES ("017a133f-1e07-4565-8450-0554d68ffd4d",
	1792.000000,
	1968.000000,
	"6b88befb-c370-4cca-8ca4-f78599af1c7c");
INSERT INTO DIM_CON
	VALUES ("9e91b0b0-160c-49f3-8333-9eef5ed03cf3",
	1792.000000,
	2064.000000,
	"6b88befb-c370-4cca-8ca4-f78599af1c7c");
INSERT INTO GD_GE
	VALUES ("1f6f802c-d03a-48ed-8d3f-2a8f3ac1794a",
	"58bd531e-c351-4bce-8dd8-4db6a09cf661",
	"cb0d6055-dabf-4c4e-9450-6b83abb81bc7",
	41,
	0,
	'ex2::ex2::Test Compound Expressions::Instance State Machine::Compound Expressions Using Bridge Invocations');
INSERT INTO GD_SHP
	VALUES ("1f6f802c-d03a-48ed-8d3f-2a8f3ac1794a");
INSERT INTO GD_NCS
	VALUES ("1f6f802c-d03a-48ed-8d3f-2a8f3ac1794a");
INSERT INTO DIM_ND
	VALUES (176.000000,
	96.000000,
	"1f6f802c-d03a-48ed-8d3f-2a8f3ac1794a");
INSERT INTO DIM_GE
	VALUES (1696.000000,
	2112.000000,
	"1f6f802c-d03a-48ed-8d3f-2a8f3ac1794a",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("1f6f802c-d03a-48ed-8d3f-2a8f3ac1794a",
	1,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_CON
	VALUES ("d3ae0133-124d-41dc-a1f1-56273bfff70d",
	1792.000000,
	2112.000000,
	"1f6f802c-d03a-48ed-8d3f-2a8f3ac1794a");
INSERT INTO DIM_CON
	VALUES ("e1738d32-92d2-4f1b-8e7b-b9e749b130bf",
	1792.000000,
	2208.000000,
	"1f6f802c-d03a-48ed-8d3f-2a8f3ac1794a");
INSERT INTO GD_GE
	VALUES ("e4e70fb5-9286-47c2-96e4-187d3bc50deb",
	"58bd531e-c351-4bce-8dd8-4db6a09cf661",
	"f9c96bd8-6bd7-459e-9f9d-3ab33c2295b5",
	41,
	0,
	'ex2::ex2::Test Compound Expressions::Instance State Machine::Order of Operations');
INSERT INTO GD_SHP
	VALUES ("e4e70fb5-9286-47c2-96e4-187d3bc50deb");
INSERT INTO GD_NCS
	VALUES ("e4e70fb5-9286-47c2-96e4-187d3bc50deb");
INSERT INTO DIM_ND
	VALUES (176.000000,
	96.000000,
	"e4e70fb5-9286-47c2-96e4-187d3bc50deb");
INSERT INTO DIM_GE
	VALUES (1696.000000,
	2256.000000,
	"e4e70fb5-9286-47c2-96e4-187d3bc50deb",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("e4e70fb5-9286-47c2-96e4-187d3bc50deb",
	1,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_CON
	VALUES ("bfb296f3-2f21-4c53-bc37-d246f138d5a5",
	1792.000000,
	2256.000000,
	"e4e70fb5-9286-47c2-96e4-187d3bc50deb");
INSERT INTO DIM_CON
	VALUES ("355f6b41-c9d6-4083-a9c2-d5fdc62d22a6",
	1872.000000,
	2320.000000,
	"e4e70fb5-9286-47c2-96e4-187d3bc50deb");
INSERT INTO GD_GE
	VALUES ("ae447762-487a-4e1a-a77a-d53dc09c738d",
	"58bd531e-c351-4bce-8dd8-4db6a09cf661",
	"b4856d67-433a-4a0f-b9dc-f632cd2c36eb",
	41,
	0,
	'ex2::ex2::Test Compound Expressions::Instance State Machine::Stress Limits of Compound Expressions');
INSERT INTO GD_SHP
	VALUES ("ae447762-487a-4e1a-a77a-d53dc09c738d");
INSERT INTO GD_NCS
	VALUES ("ae447762-487a-4e1a-a77a-d53dc09c738d");
INSERT INTO DIM_ND
	VALUES (176.000000,
	96.000000,
	"ae447762-487a-4e1a-a77a-d53dc09c738d");
INSERT INTO DIM_GE
	VALUES (1984.000000,
	1536.000000,
	"ae447762-487a-4e1a-a77a-d53dc09c738d",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("ae447762-487a-4e1a-a77a-d53dc09c738d",
	1,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_CON
	VALUES ("aec4973b-d9a7-4370-b9ed-5a8f7bf41e4e",
	2064.000000,
	1632.000000,
	"ae447762-487a-4e1a-a77a-d53dc09c738d");
INSERT INTO DIM_CON
	VALUES ("4a623f02-996f-4279-b698-0d530575f833",
	2064.000000,
	1536.000000,
	"ae447762-487a-4e1a-a77a-d53dc09c738d");
INSERT INTO GD_GE
	VALUES ("b1a27af7-18d9-4ecc-a6b6-720df195bffb",
	"58bd531e-c351-4bce-8dd8-4db6a09cf661",
	"d608d1fa-09f3-494a-9e55-7d2f25ff1438",
	41,
	0,
	'ex2::ex2::Test Compound Expressions::Instance State Machine::Bridges Within Expressions');
INSERT INTO GD_SHP
	VALUES ("b1a27af7-18d9-4ecc-a6b6-720df195bffb");
INSERT INTO GD_NCS
	VALUES ("b1a27af7-18d9-4ecc-a6b6-720df195bffb");
INSERT INTO DIM_ND
	VALUES (176.000000,
	96.000000,
	"b1a27af7-18d9-4ecc-a6b6-720df195bffb");
INSERT INTO DIM_GE
	VALUES (1984.000000,
	1680.000000,
	"b1a27af7-18d9-4ecc-a6b6-720df195bffb",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("b1a27af7-18d9-4ecc-a6b6-720df195bffb",
	1,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_CON
	VALUES ("e567ba14-0b52-44d0-a0a9-48fd3411865f",
	2064.000000,
	1776.000000,
	"b1a27af7-18d9-4ecc-a6b6-720df195bffb");
INSERT INTO DIM_CON
	VALUES ("289273fc-b603-43f4-aaee-3125984795fd",
	2064.000000,
	1680.000000,
	"b1a27af7-18d9-4ecc-a6b6-720df195bffb");
INSERT INTO GD_GE
	VALUES ("c1cbf0f3-99ad-47da-919d-9b4dd83a045b",
	"58bd531e-c351-4bce-8dd8-4db6a09cf661",
	"df7d54b8-0ad7-41ad-b8e3-2ce23bb315af",
	41,
	0,
	'ex2::ex2::Test Compound Expressions::Instance State Machine::Transforms Within Expressions');
INSERT INTO GD_SHP
	VALUES ("c1cbf0f3-99ad-47da-919d-9b4dd83a045b");
INSERT INTO GD_NCS
	VALUES ("c1cbf0f3-99ad-47da-919d-9b4dd83a045b");
INSERT INTO DIM_ND
	VALUES (176.000000,
	96.000000,
	"c1cbf0f3-99ad-47da-919d-9b4dd83a045b");
INSERT INTO DIM_GE
	VALUES (1984.000000,
	1824.000000,
	"c1cbf0f3-99ad-47da-919d-9b4dd83a045b",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("c1cbf0f3-99ad-47da-919d-9b4dd83a045b",
	1,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_CON
	VALUES ("f27ea491-64bb-428a-b4c0-cef99cfe9243",
	2064.000000,
	1824.000000,
	"c1cbf0f3-99ad-47da-919d-9b4dd83a045b");
INSERT INTO DIM_CON
	VALUES ("899b70fa-6536-4966-a5f4-a959c1258c65",
	2064.000000,
	1920.000000,
	"c1cbf0f3-99ad-47da-919d-9b4dd83a045b");
INSERT INTO GD_GE
	VALUES ("b9bff2ee-c062-432f-8e2b-b3e927b86348",
	"58bd531e-c351-4bce-8dd8-4db6a09cf661",
	"5b5539aa-4c6c-409b-bf63-624d2d811d4a",
	41,
	0,
	'ex2::ex2::Test Compound Expressions::Instance State Machine::Combinine Real and Integer Data Types');
INSERT INTO GD_SHP
	VALUES ("b9bff2ee-c062-432f-8e2b-b3e927b86348");
INSERT INTO GD_NCS
	VALUES ("b9bff2ee-c062-432f-8e2b-b3e927b86348");
INSERT INTO DIM_ND
	VALUES (240.000000,
	528.000000,
	"b9bff2ee-c062-432f-8e2b-b3e927b86348");
INSERT INTO DIM_GE
	VALUES (2304.000000,
	1536.000000,
	"b9bff2ee-c062-432f-8e2b-b3e927b86348",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("b9bff2ee-c062-432f-8e2b-b3e927b86348",
	1,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_CON
	VALUES ("d5ba6d5f-798a-4ed9-beb7-7a22aa4b7766",
	2544.000000,
	2016.000000,
	"b9bff2ee-c062-432f-8e2b-b3e927b86348");
INSERT INTO DIM_CON
	VALUES ("91ae8499-c572-4dc4-9a4b-0e7b96050009",
	2544.000000,
	1840.000000,
	"b9bff2ee-c062-432f-8e2b-b3e927b86348");
INSERT INTO GD_GE
	VALUES ("6590a8a4-cafc-4553-b8ec-eb51c0cc2ad3",
	"58bd531e-c351-4bce-8dd8-4db6a09cf661",
	"9a6ec027-95e8-426c-bcfc-c5c617b7497e",
	41,
	0,
	'ex2::ex2::Test Compound Expressions::Instance State Machine::Unary Ops');
INSERT INTO GD_SHP
	VALUES ("6590a8a4-cafc-4553-b8ec-eb51c0cc2ad3");
INSERT INTO GD_NCS
	VALUES ("6590a8a4-cafc-4553-b8ec-eb51c0cc2ad3");
INSERT INTO DIM_ND
	VALUES (176.000000,
	96.000000,
	"6590a8a4-cafc-4553-b8ec-eb51c0cc2ad3");
INSERT INTO DIM_GE
	VALUES (1984.000000,
	1968.000000,
	"6590a8a4-cafc-4553-b8ec-eb51c0cc2ad3",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("6590a8a4-cafc-4553-b8ec-eb51c0cc2ad3",
	1,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_CON
	VALUES ("90a89861-ce4b-4d87-9323-07a12c982dac",
	2064.000000,
	1968.000000,
	"6590a8a4-cafc-4553-b8ec-eb51c0cc2ad3");
INSERT INTO DIM_CON
	VALUES ("c9bb7bd4-ab66-409e-b625-f1116f0f3721",
	2064.000000,
	2064.000000,
	"6590a8a4-cafc-4553-b8ec-eb51c0cc2ad3");
INSERT INTO GD_GE
	VALUES ("8cc25bae-7042-4841-a183-43c43f162c0e",
	"58bd531e-c351-4bce-8dd8-4db6a09cf661",
	"87d30ca1-58fa-4102-8f5e-2507b306b940",
	41,
	0,
	'ex2::ex2::Test Compound Expressions::Instance State Machine::If Expressions');
INSERT INTO GD_SHP
	VALUES ("8cc25bae-7042-4841-a183-43c43f162c0e");
INSERT INTO GD_NCS
	VALUES ("8cc25bae-7042-4841-a183-43c43f162c0e");
INSERT INTO DIM_ND
	VALUES (176.000000,
	96.000000,
	"8cc25bae-7042-4841-a183-43c43f162c0e");
INSERT INTO DIM_GE
	VALUES (1984.000000,
	2112.000000,
	"8cc25bae-7042-4841-a183-43c43f162c0e",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("8cc25bae-7042-4841-a183-43c43f162c0e",
	1,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_CON
	VALUES ("3bf047a8-152d-4b28-95fe-cb77f2666d6e",
	2064.000000,
	2112.000000,
	"8cc25bae-7042-4841-a183-43c43f162c0e");
INSERT INTO DIM_CON
	VALUES ("8ed726b8-20a4-4bf5-9fe8-8b4c91285277",
	2064.000000,
	2208.000000,
	"8cc25bae-7042-4841-a183-43c43f162c0e");
INSERT INTO GD_GE
	VALUES ("7ac5ba7c-e5d8-434a-b25a-c1ec1de93fec",
	"58bd531e-c351-4bce-8dd8-4db6a09cf661",
	"29616112-4df6-4783-af08-bcb54bce972a",
	41,
	0,
	'ex2::ex2::Test Compound Expressions::Instance State Machine::Expressions Within Parameters');
INSERT INTO GD_SHP
	VALUES ("7ac5ba7c-e5d8-434a-b25a-c1ec1de93fec");
INSERT INTO GD_NCS
	VALUES ("7ac5ba7c-e5d8-434a-b25a-c1ec1de93fec");
INSERT INTO DIM_ND
	VALUES (176.000000,
	96.000000,
	"7ac5ba7c-e5d8-434a-b25a-c1ec1de93fec");
INSERT INTO DIM_GE
	VALUES (1984.000000,
	2256.000000,
	"7ac5ba7c-e5d8-434a-b25a-c1ec1de93fec",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("7ac5ba7c-e5d8-434a-b25a-c1ec1de93fec",
	1,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_CON
	VALUES ("20cf4f50-b010-477e-8d3a-1fe497b0f66a",
	2064.000000,
	2256.000000,
	"7ac5ba7c-e5d8-434a-b25a-c1ec1de93fec");
INSERT INTO DIM_CON
	VALUES ("8d1dbcfd-416c-4f65-8cfa-b964e81831d7",
	2160.000000,
	2288.000000,
	"7ac5ba7c-e5d8-434a-b25a-c1ec1de93fec");
INSERT INTO DIM_CON
	VALUES ("a3924892-c809-4fc6-8463-f850e0a6283a",
	2160.000000,
	2320.000000,
	"7ac5ba7c-e5d8-434a-b25a-c1ec1de93fec");
INSERT INTO GD_GE
	VALUES ("adceb7df-8862-454c-baeb-667c9f9cb9d0",
	"58bd531e-c351-4bce-8dd8-4db6a09cf661",
	"45d77703-d3e3-43ee-b5cd-5049112b265c",
	41,
	0,
	'ex2::ex2::Test Compound Expressions::Instance State Machine::Count Acks from Bool Event');
INSERT INTO GD_SHP
	VALUES ("adceb7df-8862-454c-baeb-667c9f9cb9d0");
INSERT INTO GD_NCS
	VALUES ("adceb7df-8862-454c-baeb-667c9f9cb9d0");
INSERT INTO DIM_ND
	VALUES (176.000000,
	96.000000,
	"adceb7df-8862-454c-baeb-667c9f9cb9d0");
INSERT INTO DIM_GE
	VALUES (2496.000000,
	2176.000000,
	"adceb7df-8862-454c-baeb-667c9f9cb9d0",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("adceb7df-8862-454c-baeb-667c9f9cb9d0",
	1,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_CON
	VALUES ("812d6f19-c2c5-4e60-9bc9-647299713c6a",
	2496.000000,
	2240.000000,
	"adceb7df-8862-454c-baeb-667c9f9cb9d0");
INSERT INTO DIM_CON
	VALUES ("96289d72-7a54-48ff-9cd4-bab5b513bc09",
	2528.000000,
	2272.000000,
	"adceb7df-8862-454c-baeb-667c9f9cb9d0");
INSERT INTO DIM_CON
	VALUES ("d8df0d02-9a83-43ac-98aa-3e806753bf0b",
	2640.000000,
	2272.000000,
	"adceb7df-8862-454c-baeb-667c9f9cb9d0");
INSERT INTO DIM_CON
	VALUES ("0524bed1-f46a-47cc-afd9-d821e408dbf9",
	2512.000000,
	2176.000000,
	"adceb7df-8862-454c-baeb-667c9f9cb9d0");
INSERT INTO DIM_CON
	VALUES ("457c9a98-3d87-4a26-a0bf-90ba861b9fba",
	2640.000000,
	2176.000000,
	"adceb7df-8862-454c-baeb-667c9f9cb9d0");
INSERT INTO DIM_CON
	VALUES ("c7a7d82c-ffc9-4454-948d-6476e2464637",
	2672.000000,
	2208.000000,
	"adceb7df-8862-454c-baeb-667c9f9cb9d0");
INSERT INTO GD_GE
	VALUES ("a0e7efe2-218b-42df-b109-9651a738e8b8",
	"58bd531e-c351-4bce-8dd8-4db6a09cf661",
	"66142144-e6dc-4d4f-a593-5dd7963818a0",
	41,
	0,
	'ex2::ex2::Test Compound Expressions::Instance State Machine::Count Acks from Int Event');
INSERT INTO GD_SHP
	VALUES ("a0e7efe2-218b-42df-b109-9651a738e8b8");
INSERT INTO GD_NCS
	VALUES ("a0e7efe2-218b-42df-b109-9651a738e8b8");
INSERT INTO DIM_ND
	VALUES (176.000000,
	96.000000,
	"a0e7efe2-218b-42df-b109-9651a738e8b8");
INSERT INTO DIM_GE
	VALUES (2496.000000,
	2352.000000,
	"a0e7efe2-218b-42df-b109-9651a738e8b8",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("a0e7efe2-218b-42df-b109-9651a738e8b8",
	1,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_CON
	VALUES ("cbcbedd5-e404-4865-8408-d3d52659efa8",
	2496.000000,
	2368.000000,
	"a0e7efe2-218b-42df-b109-9651a738e8b8");
INSERT INTO DIM_CON
	VALUES ("4e801ba3-7046-4d61-8132-310ce04ba976",
	2528.000000,
	2352.000000,
	"a0e7efe2-218b-42df-b109-9651a738e8b8");
INSERT INTO DIM_CON
	VALUES ("59e2973e-0b63-43c8-82ed-dc324b715db7",
	2640.000000,
	2352.000000,
	"a0e7efe2-218b-42df-b109-9651a738e8b8");
INSERT INTO DIM_CON
	VALUES ("00370b39-2650-4a9a-b817-47a3ba75b340",
	2512.000000,
	2448.000000,
	"a0e7efe2-218b-42df-b109-9651a738e8b8");
INSERT INTO DIM_CON
	VALUES ("f2fe7bcf-7e15-4bcb-a7b6-0343e3f8415d",
	2656.000000,
	2448.000000,
	"a0e7efe2-218b-42df-b109-9651a738e8b8");
INSERT INTO DIM_CON
	VALUES ("939ddec8-99c4-48e0-b382-028635eb2dc7",
	2672.000000,
	2416.000000,
	"a0e7efe2-218b-42df-b109-9651a738e8b8");
INSERT INTO GD_GE
	VALUES ("767c5dfa-d1db-49f5-a7c0-98c3cd6a600b",
	"58bd531e-c351-4bce-8dd8-4db6a09cf661",
	"524fae2c-6c1e-4c64-a790-5020c19fc83d",
	41,
	0,
	'ex2::ex2::Test Compound Expressions::Instance State Machine::More Expressions within Parms');
INSERT INTO GD_SHP
	VALUES ("767c5dfa-d1db-49f5-a7c0-98c3cd6a600b");
INSERT INTO GD_NCS
	VALUES ("767c5dfa-d1db-49f5-a7c0-98c3cd6a600b");
INSERT INTO DIM_ND
	VALUES (144.000000,
	112.000000,
	"767c5dfa-d1db-49f5-a7c0-98c3cd6a600b");
INSERT INTO DIM_GE
	VALUES (2832.000000,
	2256.000000,
	"767c5dfa-d1db-49f5-a7c0-98c3cd6a600b",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("767c5dfa-d1db-49f5-a7c0-98c3cd6a600b",
	1,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_CON
	VALUES ("0cd22114-e34d-474a-9b33-aa348a5cdccd",
	2912.000000,
	2256.000000,
	"767c5dfa-d1db-49f5-a7c0-98c3cd6a600b");
INSERT INTO DIM_CON
	VALUES ("5e33899f-beb6-40f4-ba42-99fe5497de96",
	2912.000000,
	2368.000000,
	"767c5dfa-d1db-49f5-a7c0-98c3cd6a600b");
INSERT INTO DIM_CON
	VALUES ("5ee63bee-99fe-4882-893b-0e80da78110b",
	2944.000000,
	2256.000000,
	"767c5dfa-d1db-49f5-a7c0-98c3cd6a600b");
INSERT INTO DIM_CON
	VALUES ("22d9449e-d16b-44d2-b69e-9e2fabcb15ad",
	2976.000000,
	2336.000000,
	"767c5dfa-d1db-49f5-a7c0-98c3cd6a600b");
INSERT INTO GD_GE
	VALUES ("ecaebe7d-94d1-4b52-9238-21b1e741f874",
	"58bd531e-c351-4bce-8dd8-4db6a09cf661",
	"728b7882-730f-41c1-ae4e-7ab03e7f35e6",
	41,
	0,
	'ex2::ex2::Test Compound Expressions::Instance State Machine::Bool Event Acks');
INSERT INTO GD_SHP
	VALUES ("ecaebe7d-94d1-4b52-9238-21b1e741f874");
INSERT INTO GD_NCS
	VALUES ("ecaebe7d-94d1-4b52-9238-21b1e741f874");
INSERT INTO DIM_ND
	VALUES (160.000000,
	96.000000,
	"ecaebe7d-94d1-4b52-9238-21b1e741f874");
INSERT INTO DIM_GE
	VALUES (2832.000000,
	2000.000000,
	"ecaebe7d-94d1-4b52-9238-21b1e741f874",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("ecaebe7d-94d1-4b52-9238-21b1e741f874",
	1,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_CON
	VALUES ("4bab9f27-7ae7-4e5c-a74a-37f7024ed566",
	2864.000000,
	2000.000000,
	"ecaebe7d-94d1-4b52-9238-21b1e741f874");
INSERT INTO DIM_CON
	VALUES ("b4ed3474-73ac-410a-a01e-8dbd2cfddd55",
	2960.000000,
	2000.000000,
	"ecaebe7d-94d1-4b52-9238-21b1e741f874");
INSERT INTO DIM_CON
	VALUES ("4ba92d0c-d864-4d81-b1e2-f151e61d9dfb",
	2992.000000,
	2032.000000,
	"ecaebe7d-94d1-4b52-9238-21b1e741f874");
INSERT INTO DIM_CON
	VALUES ("078f9894-d474-48bb-95a4-b559c462cf88",
	2992.000000,
	2080.000000,
	"ecaebe7d-94d1-4b52-9238-21b1e741f874");
INSERT INTO DIM_CON
	VALUES ("f5141447-599e-4f89-a75d-d4ed6fe5e46d",
	2944.000000,
	2096.000000,
	"ecaebe7d-94d1-4b52-9238-21b1e741f874");
INSERT INTO DIM_CON
	VALUES ("19e7de07-539f-48a4-8b6b-81d540df465d",
	2832.000000,
	2016.000000,
	"ecaebe7d-94d1-4b52-9238-21b1e741f874");
INSERT INTO GD_GE
	VALUES ("57d54ec2-0f42-4263-8f3c-32d6427a3851",
	"58bd531e-c351-4bce-8dd8-4db6a09cf661",
	"cbcfa0d1-6fac-454e-924b-9c9916d2bd1f",
	41,
	0,
	'ex2::ex2::Test Compound Expressions::Instance State Machine::Int Event Acks');
INSERT INTO GD_SHP
	VALUES ("57d54ec2-0f42-4263-8f3c-32d6427a3851");
INSERT INTO GD_NCS
	VALUES ("57d54ec2-0f42-4263-8f3c-32d6427a3851");
INSERT INTO DIM_ND
	VALUES (160.000000,
	96.000000,
	"57d54ec2-0f42-4263-8f3c-32d6427a3851");
INSERT INTO DIM_GE
	VALUES (3152.000000,
	2000.000000,
	"57d54ec2-0f42-4263-8f3c-32d6427a3851",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("57d54ec2-0f42-4263-8f3c-32d6427a3851",
	1,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_CON
	VALUES ("b7376a10-908e-4288-897a-8981ca39464c",
	3216.000000,
	2096.000000,
	"57d54ec2-0f42-4263-8f3c-32d6427a3851");
INSERT INTO DIM_CON
	VALUES ("5e39f39c-6c6f-495f-b602-2bc665756f6b",
	3296.000000,
	2096.000000,
	"57d54ec2-0f42-4263-8f3c-32d6427a3851");
INSERT INTO DIM_CON
	VALUES ("d28ce9f9-88ac-442b-b6a8-8f86e6371af4",
	3152.000000,
	2032.000000,
	"57d54ec2-0f42-4263-8f3c-32d6427a3851");
INSERT INTO DIM_CON
	VALUES ("0e26b7c2-dd45-4999-890f-e4dba730d954",
	3152.000000,
	2080.000000,
	"57d54ec2-0f42-4263-8f3c-32d6427a3851");
INSERT INTO DIM_CON
	VALUES ("6dd55b45-85a0-486f-b73e-723dbb30f51a",
	3184.000000,
	2096.000000,
	"57d54ec2-0f42-4263-8f3c-32d6427a3851");
INSERT INTO DIM_CON
	VALUES ("079d4f64-fa50-4a21-ac67-59fb68e3faf8",
	3216.000000,
	2000.000000,
	"57d54ec2-0f42-4263-8f3c-32d6427a3851");
INSERT INTO GD_GE
	VALUES ("4953c0f0-570c-41e9-9073-b08048addce9",
	"58bd531e-c351-4bce-8dd8-4db6a09cf661",
	"0c4ad770-749f-491c-b878-9e1fad95531e",
	41,
	0,
	'ex2::ex2::Test Compound Expressions::Instance State Machine::Compound Expressions Using inst_ref_set<Object>');
INSERT INTO GD_SHP
	VALUES ("4953c0f0-570c-41e9-9073-b08048addce9");
INSERT INTO GD_NCS
	VALUES ("4953c0f0-570c-41e9-9073-b08048addce9");
INSERT INTO DIM_ND
	VALUES (176.000000,
	96.000000,
	"4953c0f0-570c-41e9-9073-b08048addce9");
INSERT INTO DIM_GE
	VALUES (1984.000000,
	1392.000000,
	"4953c0f0-570c-41e9-9073-b08048addce9",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("4953c0f0-570c-41e9-9073-b08048addce9",
	1,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_CON
	VALUES ("d9e2f094-66d4-4d44-bca0-e2115642f0de",
	2064.000000,
	1488.000000,
	"4953c0f0-570c-41e9-9073-b08048addce9");
INSERT INTO DIM_CON
	VALUES ("e45a6908-2fb7-4da1-94f4-1574f532b043",
	2064.000000,
	1392.000000,
	"4953c0f0-570c-41e9-9073-b08048addce9");
INSERT INTO GD_GE
	VALUES ("a6ebd1a7-ebd2-43bf-8cbb-4f478a548fa0",
	"58bd531e-c351-4bce-8dd8-4db6a09cf661",
	"b68b373c-42d2-47f2-91fd-5fca65f3b979",
	41,
	0,
	'ex2::ex2::Test Compound Expressions::Instance State Machine::Compound Expressions Using inst_ref<Object>');
INSERT INTO GD_SHP
	VALUES ("a6ebd1a7-ebd2-43bf-8cbb-4f478a548fa0");
INSERT INTO GD_NCS
	VALUES ("a6ebd1a7-ebd2-43bf-8cbb-4f478a548fa0");
INSERT INTO DIM_ND
	VALUES (176.000000,
	96.000000,
	"a6ebd1a7-ebd2-43bf-8cbb-4f478a548fa0");
INSERT INTO DIM_GE
	VALUES (1984.000000,
	1248.000000,
	"a6ebd1a7-ebd2-43bf-8cbb-4f478a548fa0",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("a6ebd1a7-ebd2-43bf-8cbb-4f478a548fa0",
	1,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_CON
	VALUES ("9cbfb2a2-91d1-406b-b3e8-584e51e6cfc0",
	2064.000000,
	1344.000000,
	"a6ebd1a7-ebd2-43bf-8cbb-4f478a548fa0");
INSERT INTO DIM_CON
	VALUES ("2c775bc9-5833-4fe7-b776-a79444372f81",
	1984.000000,
	1296.000000,
	"a6ebd1a7-ebd2-43bf-8cbb-4f478a548fa0");
INSERT INTO GD_GE
	VALUES ("662cca3e-e299-4857-a1b5-83dcefbbd307",
	"58bd531e-c351-4bce-8dd8-4db6a09cf661",
	"bd83c792-3ef8-437a-92d4-c11af4887e99",
	42,
	0,
	'ex2::ex2::Test Compound Expressions::Instance State Machine::Compound Expressions Using Constants::TCE2: next test');
INSERT INTO GD_CON
	VALUES ("662cca3e-e299-4857-a1b5-83dcefbbd307",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("4f496a74-b265-4ef7-9b6e-4ea59e63fe18",
	"662cca3e-e299-4857-a1b5-83dcefbbd307",
	1,
	0.000000,
	0.000000);
INSERT INTO DIM_ND
	VALUES (0.000000,
	0.000000,
	"4f496a74-b265-4ef7-9b6e-4ea59e63fe18");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"4f496a74-b265-4ef7-9b6e-4ea59e63fe18",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("4f496a74-b265-4ef7-9b6e-4ea59e63fe18",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("7ae7d8a9-a68d-47ba-b4e5-a9d2f4ae7d7f",
	"662cca3e-e299-4857-a1b5-83dcefbbd307",
	3,
	-105.000000,
	-1.000000);
INSERT INTO DIM_ND
	VALUES (118.000000,
	35.000000,
	"7ae7d8a9-a68d-47ba-b4e5-a9d2f4ae7d7f");
INSERT INTO DIM_GE
	VALUES (1671.000000,
	1352.000000,
	"7ae7d8a9-a68d-47ba-b4e5-a9d2f4ae7d7f",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("7ae7d8a9-a68d-47ba-b4e5-a9d2f4ae7d7f",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("453cea28-1647-42a8-ba52-5aab49b2f3b7",
	"662cca3e-e299-4857-a1b5-83dcefbbd307",
	2,
	0.000000,
	0.000000);
INSERT INTO DIM_ND
	VALUES (0.000000,
	0.000000,
	"453cea28-1647-42a8-ba52-5aab49b2f3b7");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"453cea28-1647-42a8-ba52-5aab49b2f3b7",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("453cea28-1647-42a8-ba52-5aab49b2f3b7",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_LS
	VALUES ("f85eda9f-50bf-4bd2-bd71-05c5c43ce0e9",
	"662cca3e-e299-4857-a1b5-83dcefbbd307",
	"00000000-0000-0000-0000-000000000000",
	"83bcbc45-d41a-496d-a33a-3cbc14b8b2d9",
	"ec34d40d-561d-45d3-8700-3fcdb2dde88d");
INSERT INTO DIM_WAY
	VALUES ("83bcbc45-d41a-496d-a33a-3cbc14b8b2d9",
	1792.000000,
	1344.000000,
	"662cca3e-e299-4857-a1b5-83dcefbbd307",
	"00000000-0000-0000-0000-000000000000",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_WAY
	VALUES ("ec34d40d-561d-45d3-8700-3fcdb2dde88d",
	1792.000000,
	1392.000000,
	"662cca3e-e299-4857-a1b5-83dcefbbd307",
	"00000000-0000-0000-0000-000000000000",
	"83bcbc45-d41a-496d-a33a-3cbc14b8b2d9");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"662cca3e-e299-4857-a1b5-83dcefbbd307",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("662cca3e-e299-4857-a1b5-83dcefbbd307",
	1,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ED
	VALUES ("85378c38-3dd0-4167-9029-4fb57c58804a",
	"aa4fe738-e739-4fad-b3ee-6c5a92443a85",
	"662cca3e-e299-4857-a1b5-83dcefbbd307");
INSERT INTO GD_GE
	VALUES ("c57ecfe1-adda-4b85-8c73-028548688a23",
	"58bd531e-c351-4bce-8dd8-4db6a09cf661",
	"6b9abeec-4070-4547-93fa-cdf507839249",
	42,
	0,
	'ex2::ex2::Test Compound Expressions::Instance State Machine::Compound Expressions Using Local Variables::TCE2: next test');
INSERT INTO GD_CON
	VALUES ("c57ecfe1-adda-4b85-8c73-028548688a23",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("ce65c315-8cb0-43c6-805c-46f3b18eb8c6",
	"c57ecfe1-adda-4b85-8c73-028548688a23",
	1,
	0.000000,
	0.000000);
INSERT INTO DIM_ND
	VALUES (0.000000,
	0.000000,
	"ce65c315-8cb0-43c6-805c-46f3b18eb8c6");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"ce65c315-8cb0-43c6-805c-46f3b18eb8c6",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("ce65c315-8cb0-43c6-805c-46f3b18eb8c6",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("c98f2d94-f5b2-4276-9b0c-e1e9b15f2a46",
	"c57ecfe1-adda-4b85-8c73-028548688a23",
	3,
	-103.000000,
	-2.000000);
INSERT INTO DIM_ND
	VALUES (114.000000,
	34.000000,
	"c98f2d94-f5b2-4276-9b0c-e1e9b15f2a46");
INSERT INTO DIM_GE
	VALUES (1673.000000,
	1495.000000,
	"c98f2d94-f5b2-4276-9b0c-e1e9b15f2a46",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("c98f2d94-f5b2-4276-9b0c-e1e9b15f2a46",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("ea818ea7-9c0a-453c-ace2-2549252b767b",
	"c57ecfe1-adda-4b85-8c73-028548688a23",
	2,
	0.000000,
	0.000000);
INSERT INTO DIM_ND
	VALUES (0.000000,
	0.000000,
	"ea818ea7-9c0a-453c-ace2-2549252b767b");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"ea818ea7-9c0a-453c-ace2-2549252b767b",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("ea818ea7-9c0a-453c-ace2-2549252b767b",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_LS
	VALUES ("9e64825a-5aa0-4653-9b44-7fbb8cd21e49",
	"c57ecfe1-adda-4b85-8c73-028548688a23",
	"00000000-0000-0000-0000-000000000000",
	"06223516-e1e5-4b1d-814b-827f48190797",
	"c8c7d508-5494-4377-a77c-988e197fe3db");
INSERT INTO DIM_WAY
	VALUES ("06223516-e1e5-4b1d-814b-827f48190797",
	1792.000000,
	1488.000000,
	"c57ecfe1-adda-4b85-8c73-028548688a23",
	"00000000-0000-0000-0000-000000000000",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_WAY
	VALUES ("c8c7d508-5494-4377-a77c-988e197fe3db",
	1792.000000,
	1536.000000,
	"c57ecfe1-adda-4b85-8c73-028548688a23",
	"00000000-0000-0000-0000-000000000000",
	"06223516-e1e5-4b1d-814b-827f48190797");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"c57ecfe1-adda-4b85-8c73-028548688a23",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("c57ecfe1-adda-4b85-8c73-028548688a23",
	1,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ED
	VALUES ("7170705c-92ca-44ef-8113-2b52227e5b2c",
	"9dceb7d9-3f65-4a00-aa04-3a0f81db7386",
	"c57ecfe1-adda-4b85-8c73-028548688a23");
INSERT INTO GD_GE
	VALUES ("d8b304b3-f5bd-470e-8b27-c46f2eeaa964",
	"58bd531e-c351-4bce-8dd8-4db6a09cf661",
	"07decc7e-e56a-4381-93f8-8abfee46840c",
	42,
	0,
	'ex2::ex2::Test Compound Expressions::Instance State Machine::Compound Expressions Using Object Attributes::TCE3: event with supp data');
INSERT INTO GD_CON
	VALUES ("d8b304b3-f5bd-470e-8b27-c46f2eeaa964",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("fe6ae9bc-416a-4357-9def-8aeafbe630b2",
	"d8b304b3-f5bd-470e-8b27-c46f2eeaa964",
	1,
	0.000000,
	0.000000);
INSERT INTO DIM_ND
	VALUES (0.000000,
	0.000000,
	"fe6ae9bc-416a-4357-9def-8aeafbe630b2");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"fe6ae9bc-416a-4357-9def-8aeafbe630b2",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("fe6ae9bc-416a-4357-9def-8aeafbe630b2",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("c4591183-e5c1-490a-a082-4820864da021",
	"d8b304b3-f5bd-470e-8b27-c46f2eeaa964",
	3,
	-11.000000,
	2.000000);
INSERT INTO DIM_ND
	VALUES (157.000000,
	42.000000,
	"c4591183-e5c1-490a-a082-4820864da021");
INSERT INTO DIM_GE
	VALUES (1618.000000,
	1639.000000,
	"c4591183-e5c1-490a-a082-4820864da021",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("c4591183-e5c1-490a-a082-4820864da021",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("ef8a9dbf-7434-48f5-9381-5197ec971307",
	"d8b304b3-f5bd-470e-8b27-c46f2eeaa964",
	2,
	0.000000,
	0.000000);
INSERT INTO DIM_ND
	VALUES (0.000000,
	0.000000,
	"ef8a9dbf-7434-48f5-9381-5197ec971307");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"ef8a9dbf-7434-48f5-9381-5197ec971307",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("ef8a9dbf-7434-48f5-9381-5197ec971307",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_LS
	VALUES ("3b5dee6a-cd57-4e67-b9a5-024c03362e87",
	"d8b304b3-f5bd-470e-8b27-c46f2eeaa964",
	"00000000-0000-0000-0000-000000000000",
	"6e834a96-7faa-4729-929c-4b2bdd177d40",
	"77548e83-3180-4122-86cf-9d4826cd09db");
INSERT INTO DIM_WAY
	VALUES ("6e834a96-7faa-4729-929c-4b2bdd177d40",
	1792.000000,
	1632.000000,
	"d8b304b3-f5bd-470e-8b27-c46f2eeaa964",
	"00000000-0000-0000-0000-000000000000",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_WAY
	VALUES ("77548e83-3180-4122-86cf-9d4826cd09db",
	1792.000000,
	1680.000000,
	"d8b304b3-f5bd-470e-8b27-c46f2eeaa964",
	"00000000-0000-0000-0000-000000000000",
	"6e834a96-7faa-4729-929c-4b2bdd177d40");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"d8b304b3-f5bd-470e-8b27-c46f2eeaa964",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("d8b304b3-f5bd-470e-8b27-c46f2eeaa964",
	1,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ED
	VALUES ("e4c107fc-897c-4d34-acea-cd5b1c6238fa",
	"28dd573c-6f6e-4556-9c94-d5479eb022bf",
	"d8b304b3-f5bd-470e-8b27-c46f2eeaa964");
INSERT INTO GD_GE
	VALUES ("7c8d6497-eab0-4883-a9e1-695611e1db68",
	"58bd531e-c351-4bce-8dd8-4db6a09cf661",
	"3655d86a-ecd8-4a12-8738-c84d1545e543",
	42,
	0,
	'ex2::ex2::Test Compound Expressions::Instance State Machine::Compound Expressions Using Constants::TCE1: start test');
INSERT INTO GD_CON
	VALUES ("7c8d6497-eab0-4883-a9e1-695611e1db68",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("c9e96c4b-1666-4299-a5ee-9be02885e5c5",
	"7c8d6497-eab0-4883-a9e1-695611e1db68",
	1,
	0.000000,
	0.000000);
INSERT INTO DIM_ND
	VALUES (0.000000,
	0.000000,
	"c9e96c4b-1666-4299-a5ee-9be02885e5c5");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"c9e96c4b-1666-4299-a5ee-9be02885e5c5",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("c9e96c4b-1666-4299-a5ee-9be02885e5c5",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("f8f99003-8db3-4ad5-8605-5d2a75e4e94a",
	"7c8d6497-eab0-4883-a9e1-695611e1db68",
	3,
	108.000000,
	-48.000000);
INSERT INTO DIM_ND
	VALUES (108.000000,
	22.000000,
	"f8f99003-8db3-4ad5-8605-5d2a75e4e94a");
INSERT INTO DIM_GE
	VALUES (1658.000000,
	1191.000000,
	"f8f99003-8db3-4ad5-8605-5d2a75e4e94a",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("f8f99003-8db3-4ad5-8605-5d2a75e4e94a",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("1e9ef40a-551b-4804-b200-604e59572932",
	"7c8d6497-eab0-4883-a9e1-695611e1db68",
	2,
	0.000000,
	0.000000);
INSERT INTO DIM_ND
	VALUES (0.000000,
	0.000000,
	"1e9ef40a-551b-4804-b200-604e59572932");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"1e9ef40a-551b-4804-b200-604e59572932",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("1e9ef40a-551b-4804-b200-604e59572932",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_LS
	VALUES ("b7ad4baf-617b-4909-9d69-f590548d75b8",
	"7c8d6497-eab0-4883-a9e1-695611e1db68",
	"00000000-0000-0000-0000-000000000000",
	"bd4ee6b6-a7f2-4650-b787-35916f9589cc",
	"2a0eccd8-1a05-4a05-a3f9-59d66d01a8f2");
INSERT INTO GD_LS
	VALUES ("7ab4a579-b5f0-4285-a057-3550460abd93",
	"7c8d6497-eab0-4883-a9e1-695611e1db68",
	"b7ad4baf-617b-4909-9d69-f590548d75b8",
	"2a0eccd8-1a05-4a05-a3f9-59d66d01a8f2",
	"58e3941d-243e-4f99-8401-a1ab5a5876b9");
INSERT INTO GD_LS
	VALUES ("d81cd329-241c-4600-b04c-b6bd78cf456c",
	"7c8d6497-eab0-4883-a9e1-695611e1db68",
	"7ab4a579-b5f0-4285-a057-3550460abd93",
	"58e3941d-243e-4f99-8401-a1ab5a5876b9",
	"90621fed-bb05-46f0-836b-75eb47994c9d");
INSERT INTO GD_LS
	VALUES ("c80d2746-c324-4833-b6d9-f85c5ebab2af",
	"7c8d6497-eab0-4883-a9e1-695611e1db68",
	"d81cd329-241c-4600-b04c-b6bd78cf456c",
	"90621fed-bb05-46f0-836b-75eb47994c9d",
	"e5cf4b0e-280d-4898-af1f-95773233456f");
INSERT INTO DIM_WAY
	VALUES ("bd4ee6b6-a7f2-4650-b787-35916f9589cc",
	1696.000000,
	1280.000000,
	"7c8d6497-eab0-4883-a9e1-695611e1db68",
	"00000000-0000-0000-0000-000000000000",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_WAY
	VALUES ("2a0eccd8-1a05-4a05-a3f9-59d66d01a8f2",
	1664.000000,
	1280.000000,
	"7c8d6497-eab0-4883-a9e1-695611e1db68",
	"00000000-0000-0000-0000-000000000000",
	"bd4ee6b6-a7f2-4650-b787-35916f9589cc");
INSERT INTO DIM_WAY
	VALUES ("58e3941d-243e-4f99-8401-a1ab5a5876b9",
	1664.000000,
	1216.000000,
	"7c8d6497-eab0-4883-a9e1-695611e1db68",
	"00000000-0000-0000-0000-000000000000",
	"2a0eccd8-1a05-4a05-a3f9-59d66d01a8f2");
INSERT INTO DIM_WAY
	VALUES ("90621fed-bb05-46f0-836b-75eb47994c9d",
	1728.000000,
	1216.000000,
	"7c8d6497-eab0-4883-a9e1-695611e1db68",
	"00000000-0000-0000-0000-000000000000",
	"58e3941d-243e-4f99-8401-a1ab5a5876b9");
INSERT INTO DIM_WAY
	VALUES ("e5cf4b0e-280d-4898-af1f-95773233456f",
	1728.000000,
	1248.000000,
	"7c8d6497-eab0-4883-a9e1-695611e1db68",
	"00000000-0000-0000-0000-000000000000",
	"90621fed-bb05-46f0-836b-75eb47994c9d");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"7c8d6497-eab0-4883-a9e1-695611e1db68",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("7c8d6497-eab0-4883-a9e1-695611e1db68",
	1,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ED
	VALUES ("923e55ef-0752-4d7f-b198-c8dcf2630540",
	"5984872e-dd4e-455d-87e6-38766fdd462d",
	"7c8d6497-eab0-4883-a9e1-695611e1db68");
INSERT INTO GD_GE
	VALUES ("eb892767-7d92-4145-b99d-3c9e76c2f741",
	"58bd531e-c351-4bce-8dd8-4db6a09cf661",
	"08805801-aa2c-414b-9a65-2a1253115452",
	42,
	0,
	'ex2::ex2::Test Compound Expressions::Instance State Machine::Compound Expressions Using Supplemental Data Items Received From An Event::TCE2: next test');
INSERT INTO GD_CON
	VALUES ("eb892767-7d92-4145-b99d-3c9e76c2f741",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("f3fa8397-5d6e-4cd6-a131-9be1f222b76e",
	"eb892767-7d92-4145-b99d-3c9e76c2f741",
	1,
	0.000000,
	0.000000);
INSERT INTO DIM_ND
	VALUES (0.000000,
	0.000000,
	"f3fa8397-5d6e-4cd6-a131-9be1f222b76e");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"f3fa8397-5d6e-4cd6-a131-9be1f222b76e",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("f3fa8397-5d6e-4cd6-a131-9be1f222b76e",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("d596595d-efef-483c-9653-954e7ee61cda",
	"eb892767-7d92-4145-b99d-3c9e76c2f741",
	3,
	-11.000000,
	-3.000000);
INSERT INTO DIM_ND
	VALUES (105.000000,
	23.000000,
	"d596595d-efef-483c-9653-954e7ee61cda");
INSERT INTO DIM_GE
	VALUES (1670.000000,
	1788.000000,
	"d596595d-efef-483c-9653-954e7ee61cda",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("d596595d-efef-483c-9653-954e7ee61cda",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("e931fcf6-602b-423d-ae27-9338615a5050",
	"eb892767-7d92-4145-b99d-3c9e76c2f741",
	2,
	0.000000,
	0.000000);
INSERT INTO DIM_ND
	VALUES (0.000000,
	0.000000,
	"e931fcf6-602b-423d-ae27-9338615a5050");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"e931fcf6-602b-423d-ae27-9338615a5050",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("e931fcf6-602b-423d-ae27-9338615a5050",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_LS
	VALUES ("a6a43d60-0b84-488d-a3aa-a3e39c889d44",
	"eb892767-7d92-4145-b99d-3c9e76c2f741",
	"00000000-0000-0000-0000-000000000000",
	"d2c204fd-65ed-4fa3-9213-07efc5269050",
	"f4187401-7308-4402-b440-f2d06fcade93");
INSERT INTO DIM_WAY
	VALUES ("d2c204fd-65ed-4fa3-9213-07efc5269050",
	1792.000000,
	1776.000000,
	"eb892767-7d92-4145-b99d-3c9e76c2f741",
	"00000000-0000-0000-0000-000000000000",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_WAY
	VALUES ("f4187401-7308-4402-b440-f2d06fcade93",
	1792.000000,
	1824.000000,
	"eb892767-7d92-4145-b99d-3c9e76c2f741",
	"00000000-0000-0000-0000-000000000000",
	"d2c204fd-65ed-4fa3-9213-07efc5269050");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"eb892767-7d92-4145-b99d-3c9e76c2f741",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("eb892767-7d92-4145-b99d-3c9e76c2f741",
	1,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ED
	VALUES ("4f32f80e-07b2-4f74-b77b-d08acf64ae04",
	"93aabd87-ebc6-4ed9-b128-ad728430b704",
	"eb892767-7d92-4145-b99d-3c9e76c2f741");
INSERT INTO GD_GE
	VALUES ("45e57611-ee64-462b-b271-e9d692ff0109",
	"58bd531e-c351-4bce-8dd8-4db6a09cf661",
	"7a5764bd-3f87-4b45-9a0a-771d16926045",
	42,
	0,
	'ex2::ex2::Test Compound Expressions::Instance State Machine::Compound Expressions Using Function Invocations::TCE2: next test');
INSERT INTO GD_CON
	VALUES ("45e57611-ee64-462b-b271-e9d692ff0109",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("ea3d16e9-9a2b-4b49-ba0e-2213c0ae99fc",
	"45e57611-ee64-462b-b271-e9d692ff0109",
	1,
	0.000000,
	0.000000);
INSERT INTO DIM_ND
	VALUES (0.000000,
	0.000000,
	"ea3d16e9-9a2b-4b49-ba0e-2213c0ae99fc");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"ea3d16e9-9a2b-4b49-ba0e-2213c0ae99fc",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("ea3d16e9-9a2b-4b49-ba0e-2213c0ae99fc",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("548cda63-d5b5-4f25-9cdb-207a94894c40",
	"45e57611-ee64-462b-b271-e9d692ff0109",
	3,
	-7.000000,
	-4.000000);
INSERT INTO DIM_ND
	VALUES (106.000000,
	22.000000,
	"548cda63-d5b5-4f25-9cdb-207a94894c40");
INSERT INTO DIM_GE
	VALUES (1673.000000,
	1931.000000,
	"548cda63-d5b5-4f25-9cdb-207a94894c40",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("548cda63-d5b5-4f25-9cdb-207a94894c40",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("e3a6519e-b448-42bd-9cc6-0d6177b2ef11",
	"45e57611-ee64-462b-b271-e9d692ff0109",
	2,
	0.000000,
	0.000000);
INSERT INTO DIM_ND
	VALUES (0.000000,
	0.000000,
	"e3a6519e-b448-42bd-9cc6-0d6177b2ef11");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"e3a6519e-b448-42bd-9cc6-0d6177b2ef11",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("e3a6519e-b448-42bd-9cc6-0d6177b2ef11",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_LS
	VALUES ("855653ca-bf34-4bfd-a609-d57325001236",
	"45e57611-ee64-462b-b271-e9d692ff0109",
	"00000000-0000-0000-0000-000000000000",
	"b1f6b541-4ec1-4d1d-b063-d8dcdc007d50",
	"6469384b-1659-4b9f-a47f-e17f697b023c");
INSERT INTO DIM_WAY
	VALUES ("b1f6b541-4ec1-4d1d-b063-d8dcdc007d50",
	1792.000000,
	1920.000000,
	"45e57611-ee64-462b-b271-e9d692ff0109",
	"00000000-0000-0000-0000-000000000000",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_WAY
	VALUES ("6469384b-1659-4b9f-a47f-e17f697b023c",
	1792.000000,
	1968.000000,
	"45e57611-ee64-462b-b271-e9d692ff0109",
	"00000000-0000-0000-0000-000000000000",
	"b1f6b541-4ec1-4d1d-b063-d8dcdc007d50");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"45e57611-ee64-462b-b271-e9d692ff0109",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("45e57611-ee64-462b-b271-e9d692ff0109",
	1,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ED
	VALUES ("282beb13-fe8e-4999-b5ab-52dda39f6596",
	"017a133f-1e07-4565-8450-0554d68ffd4d",
	"45e57611-ee64-462b-b271-e9d692ff0109");
INSERT INTO GD_GE
	VALUES ("812045d3-2db9-4bc7-9262-18ce0f133818",
	"58bd531e-c351-4bce-8dd8-4db6a09cf661",
	"3996d6de-1bf5-4f5c-af57-cc5fb9bd4f68",
	42,
	0,
	'ex2::ex2::Test Compound Expressions::Instance State Machine::Compound Expressions Using Transformer Invocations::TCE2: next test');
INSERT INTO GD_CON
	VALUES ("812045d3-2db9-4bc7-9262-18ce0f133818",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("f6f671bf-eb9a-4ef1-966a-1ee58c6ea461",
	"812045d3-2db9-4bc7-9262-18ce0f133818",
	1,
	0.000000,
	0.000000);
INSERT INTO DIM_ND
	VALUES (0.000000,
	0.000000,
	"f6f671bf-eb9a-4ef1-966a-1ee58c6ea461");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"f6f671bf-eb9a-4ef1-966a-1ee58c6ea461",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("f6f671bf-eb9a-4ef1-966a-1ee58c6ea461",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("a8cfd45e-a138-4911-8560-77f43209dd63",
	"812045d3-2db9-4bc7-9262-18ce0f133818",
	3,
	-6.000000,
	-5.000000);
INSERT INTO DIM_ND
	VALUES (106.000000,
	22.000000,
	"a8cfd45e-a138-4911-8560-77f43209dd63");
INSERT INTO DIM_GE
	VALUES (1674.000000,
	2074.000000,
	"a8cfd45e-a138-4911-8560-77f43209dd63",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("a8cfd45e-a138-4911-8560-77f43209dd63",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("f345053c-4753-45ba-941f-7a6f0d333a73",
	"812045d3-2db9-4bc7-9262-18ce0f133818",
	2,
	0.000000,
	0.000000);
INSERT INTO DIM_ND
	VALUES (0.000000,
	0.000000,
	"f345053c-4753-45ba-941f-7a6f0d333a73");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"f345053c-4753-45ba-941f-7a6f0d333a73",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("f345053c-4753-45ba-941f-7a6f0d333a73",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_LS
	VALUES ("657a2ef5-8513-4076-906a-b10a5be9330a",
	"812045d3-2db9-4bc7-9262-18ce0f133818",
	"00000000-0000-0000-0000-000000000000",
	"e1d555b0-9b19-4cba-ae12-291adda79488",
	"73d89f85-f8b6-48f7-86c8-2b4bd393e6cd");
INSERT INTO DIM_WAY
	VALUES ("e1d555b0-9b19-4cba-ae12-291adda79488",
	1792.000000,
	2064.000000,
	"812045d3-2db9-4bc7-9262-18ce0f133818",
	"00000000-0000-0000-0000-000000000000",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_WAY
	VALUES ("73d89f85-f8b6-48f7-86c8-2b4bd393e6cd",
	1792.000000,
	2112.000000,
	"812045d3-2db9-4bc7-9262-18ce0f133818",
	"00000000-0000-0000-0000-000000000000",
	"e1d555b0-9b19-4cba-ae12-291adda79488");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"812045d3-2db9-4bc7-9262-18ce0f133818",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("812045d3-2db9-4bc7-9262-18ce0f133818",
	1,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ED
	VALUES ("9e91b0b0-160c-49f3-8333-9eef5ed03cf3",
	"d3ae0133-124d-41dc-a1f1-56273bfff70d",
	"812045d3-2db9-4bc7-9262-18ce0f133818");
INSERT INTO GD_GE
	VALUES ("9385efd1-27a2-49dd-8294-32fe4b7e35f0",
	"58bd531e-c351-4bce-8dd8-4db6a09cf661",
	"374e427a-f022-4a0f-9e52-7b37877478d4",
	42,
	0,
	'ex2::ex2::Test Compound Expressions::Instance State Machine::Compound Expressions Using Bridge Invocations::TCE2: next test');
INSERT INTO GD_CON
	VALUES ("9385efd1-27a2-49dd-8294-32fe4b7e35f0",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("a01fb0eb-36d4-4eae-a349-67368d82e8a1",
	"9385efd1-27a2-49dd-8294-32fe4b7e35f0",
	1,
	0.000000,
	0.000000);
INSERT INTO DIM_ND
	VALUES (0.000000,
	0.000000,
	"a01fb0eb-36d4-4eae-a349-67368d82e8a1");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"a01fb0eb-36d4-4eae-a349-67368d82e8a1",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("a01fb0eb-36d4-4eae-a349-67368d82e8a1",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("39b7b8a4-70ce-44ec-bf59-7d6e0695a8b5",
	"9385efd1-27a2-49dd-8294-32fe4b7e35f0",
	3,
	-7.000000,
	-5.000000);
INSERT INTO DIM_ND
	VALUES (106.000000,
	22.000000,
	"39b7b8a4-70ce-44ec-bf59-7d6e0695a8b5");
INSERT INTO DIM_GE
	VALUES (1673.000000,
	2218.000000,
	"39b7b8a4-70ce-44ec-bf59-7d6e0695a8b5",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("39b7b8a4-70ce-44ec-bf59-7d6e0695a8b5",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("f26e1d58-9837-4113-825a-91371cbe496c",
	"9385efd1-27a2-49dd-8294-32fe4b7e35f0",
	2,
	0.000000,
	0.000000);
INSERT INTO DIM_ND
	VALUES (0.000000,
	0.000000,
	"f26e1d58-9837-4113-825a-91371cbe496c");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"f26e1d58-9837-4113-825a-91371cbe496c",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("f26e1d58-9837-4113-825a-91371cbe496c",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_LS
	VALUES ("e6e95547-0fc5-4af5-9f7a-2a607a16cea2",
	"9385efd1-27a2-49dd-8294-32fe4b7e35f0",
	"00000000-0000-0000-0000-000000000000",
	"ed66d0ab-9c15-4789-b6e2-d2b3ecf30fcc",
	"19eda62e-c8a9-4def-81ec-a97b601d1f57");
INSERT INTO DIM_WAY
	VALUES ("ed66d0ab-9c15-4789-b6e2-d2b3ecf30fcc",
	1792.000000,
	2208.000000,
	"9385efd1-27a2-49dd-8294-32fe4b7e35f0",
	"00000000-0000-0000-0000-000000000000",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_WAY
	VALUES ("19eda62e-c8a9-4def-81ec-a97b601d1f57",
	1792.000000,
	2256.000000,
	"9385efd1-27a2-49dd-8294-32fe4b7e35f0",
	"00000000-0000-0000-0000-000000000000",
	"ed66d0ab-9c15-4789-b6e2-d2b3ecf30fcc");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"9385efd1-27a2-49dd-8294-32fe4b7e35f0",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("9385efd1-27a2-49dd-8294-32fe4b7e35f0",
	1,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ED
	VALUES ("e1738d32-92d2-4f1b-8e7b-b9e749b130bf",
	"bfb296f3-2f21-4c53-bc37-d246f138d5a5",
	"9385efd1-27a2-49dd-8294-32fe4b7e35f0");
INSERT INTO GD_GE
	VALUES ("ef9c19b3-01b9-41b0-ad27-68a46c5ba2fa",
	"58bd531e-c351-4bce-8dd8-4db6a09cf661",
	"764cd8a3-38fb-49a0-b07c-2ff52d3d45b8",
	42,
	0,
	'ex2::ex2::Test Compound Expressions::Instance State Machine::Bridges Within Expressions::TCE2: next test');
INSERT INTO GD_CON
	VALUES ("ef9c19b3-01b9-41b0-ad27-68a46c5ba2fa",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("4316c120-8b68-4a16-8062-90e5aca2b4e5",
	"ef9c19b3-01b9-41b0-ad27-68a46c5ba2fa",
	1,
	0.000000,
	0.000000);
INSERT INTO DIM_ND
	VALUES (0.000000,
	0.000000,
	"4316c120-8b68-4a16-8062-90e5aca2b4e5");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"4316c120-8b68-4a16-8062-90e5aca2b4e5",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("4316c120-8b68-4a16-8062-90e5aca2b4e5",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("01eaa211-ac79-425e-b329-d006e109ec75",
	"ef9c19b3-01b9-41b0-ad27-68a46c5ba2fa",
	3,
	131.000000,
	0.000000);
INSERT INTO DIM_ND
	VALUES (105.000000,
	23.000000,
	"01eaa211-ac79-425e-b329-d006e109ec75");
INSERT INTO DIM_GE
	VALUES (2084.000000,
	1791.000000,
	"01eaa211-ac79-425e-b329-d006e109ec75",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("01eaa211-ac79-425e-b329-d006e109ec75",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("3e142a5e-4e9a-43f4-b1dd-e0aa6f703ebc",
	"ef9c19b3-01b9-41b0-ad27-68a46c5ba2fa",
	2,
	0.000000,
	0.000000);
INSERT INTO DIM_ND
	VALUES (0.000000,
	0.000000,
	"3e142a5e-4e9a-43f4-b1dd-e0aa6f703ebc");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"3e142a5e-4e9a-43f4-b1dd-e0aa6f703ebc",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("3e142a5e-4e9a-43f4-b1dd-e0aa6f703ebc",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_LS
	VALUES ("e7ceb955-d183-4d1c-a3b9-654947d480c9",
	"ef9c19b3-01b9-41b0-ad27-68a46c5ba2fa",
	"00000000-0000-0000-0000-000000000000",
	"f6c8807b-14df-4d39-86fb-1e98a9e418ce",
	"5dbd2acb-f98a-4b4f-8358-4daffd03a544");
INSERT INTO DIM_WAY
	VALUES ("f6c8807b-14df-4d39-86fb-1e98a9e418ce",
	2064.000000,
	1776.000000,
	"ef9c19b3-01b9-41b0-ad27-68a46c5ba2fa",
	"00000000-0000-0000-0000-000000000000",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_WAY
	VALUES ("5dbd2acb-f98a-4b4f-8358-4daffd03a544",
	2064.000000,
	1824.000000,
	"ef9c19b3-01b9-41b0-ad27-68a46c5ba2fa",
	"00000000-0000-0000-0000-000000000000",
	"f6c8807b-14df-4d39-86fb-1e98a9e418ce");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"ef9c19b3-01b9-41b0-ad27-68a46c5ba2fa",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("ef9c19b3-01b9-41b0-ad27-68a46c5ba2fa",
	1,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ED
	VALUES ("e567ba14-0b52-44d0-a0a9-48fd3411865f",
	"f27ea491-64bb-428a-b4c0-cef99cfe9243",
	"ef9c19b3-01b9-41b0-ad27-68a46c5ba2fa");
INSERT INTO GD_GE
	VALUES ("86f0d2eb-88d4-4385-b6c6-72ddefa466fe",
	"58bd531e-c351-4bce-8dd8-4db6a09cf661",
	"328063bb-b837-409d-9b21-dfd80704d257",
	42,
	0,
	'ex2::ex2::Test Compound Expressions::Instance State Machine::Stress Limits of Compound Expressions::TCE2: next test');
INSERT INTO GD_CON
	VALUES ("86f0d2eb-88d4-4385-b6c6-72ddefa466fe",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("419f9c3d-62e7-4068-b877-7b1fe6a8a854",
	"86f0d2eb-88d4-4385-b6c6-72ddefa466fe",
	1,
	0.000000,
	0.000000);
INSERT INTO DIM_ND
	VALUES (0.000000,
	0.000000,
	"419f9c3d-62e7-4068-b877-7b1fe6a8a854");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"419f9c3d-62e7-4068-b877-7b1fe6a8a854",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("419f9c3d-62e7-4068-b877-7b1fe6a8a854",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("1679a115-3765-4700-855c-1a1a412ebaa5",
	"86f0d2eb-88d4-4385-b6c6-72ddefa466fe",
	3,
	127.000000,
	-4.000000);
INSERT INTO DIM_ND
	VALUES (105.000000,
	23.000000,
	"1679a115-3765-4700-855c-1a1a412ebaa5");
INSERT INTO DIM_GE
	VALUES (2080.000000,
	1643.000000,
	"1679a115-3765-4700-855c-1a1a412ebaa5",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("1679a115-3765-4700-855c-1a1a412ebaa5",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("1591c3fe-7507-4d63-84ad-d0e9ebf191a3",
	"86f0d2eb-88d4-4385-b6c6-72ddefa466fe",
	2,
	0.000000,
	0.000000);
INSERT INTO DIM_ND
	VALUES (0.000000,
	0.000000,
	"1591c3fe-7507-4d63-84ad-d0e9ebf191a3");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"1591c3fe-7507-4d63-84ad-d0e9ebf191a3",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("1591c3fe-7507-4d63-84ad-d0e9ebf191a3",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_LS
	VALUES ("8bf323a9-e9f5-4740-9950-72722f9cb82c",
	"86f0d2eb-88d4-4385-b6c6-72ddefa466fe",
	"00000000-0000-0000-0000-000000000000",
	"11341571-f474-4e9c-8073-8b262abbc28b",
	"727954f5-4180-4c32-8074-4d5cffc29b09");
INSERT INTO DIM_WAY
	VALUES ("11341571-f474-4e9c-8073-8b262abbc28b",
	2064.000000,
	1632.000000,
	"86f0d2eb-88d4-4385-b6c6-72ddefa466fe",
	"00000000-0000-0000-0000-000000000000",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_WAY
	VALUES ("727954f5-4180-4c32-8074-4d5cffc29b09",
	2064.000000,
	1680.000000,
	"86f0d2eb-88d4-4385-b6c6-72ddefa466fe",
	"00000000-0000-0000-0000-000000000000",
	"11341571-f474-4e9c-8073-8b262abbc28b");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"86f0d2eb-88d4-4385-b6c6-72ddefa466fe",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("86f0d2eb-88d4-4385-b6c6-72ddefa466fe",
	1,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ED
	VALUES ("aec4973b-d9a7-4370-b9ed-5a8f7bf41e4e",
	"289273fc-b603-43f4-aaee-3125984795fd",
	"86f0d2eb-88d4-4385-b6c6-72ddefa466fe");
INSERT INTO GD_GE
	VALUES ("8b8d5d9e-e101-4602-b61f-ce47feaed7ea",
	"58bd531e-c351-4bce-8dd8-4db6a09cf661",
	"ee780f64-2976-42c8-86c3-588512e0fef4",
	42,
	0,
	'ex2::ex2::Test Compound Expressions::Instance State Machine::Transforms Within Expressions::TCE4: next test with supp data');
INSERT INTO GD_CON
	VALUES ("8b8d5d9e-e101-4602-b61f-ce47feaed7ea",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("88776a46-229a-465b-8ff4-999975ae5f27",
	"8b8d5d9e-e101-4602-b61f-ce47feaed7ea",
	1,
	0.000000,
	0.000000);
INSERT INTO DIM_ND
	VALUES (0.000000,
	0.000000,
	"88776a46-229a-465b-8ff4-999975ae5f27");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"88776a46-229a-465b-8ff4-999975ae5f27",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("88776a46-229a-465b-8ff4-999975ae5f27",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("248913ea-e4a2-4b32-bced-42bf5f8803a8",
	"8b8d5d9e-e101-4602-b61f-ce47feaed7ea",
	3,
	196.000000,
	-1.000000);
INSERT INTO DIM_ND
	VALUES (175.000000,
	42.000000,
	"248913ea-e4a2-4b32-bced-42bf5f8803a8");
INSERT INTO DIM_GE
	VALUES (2079.000000,
	1924.000000,
	"248913ea-e4a2-4b32-bced-42bf5f8803a8",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("248913ea-e4a2-4b32-bced-42bf5f8803a8",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("d2d41315-fc47-4b36-b785-35011b798a93",
	"8b8d5d9e-e101-4602-b61f-ce47feaed7ea",
	2,
	0.000000,
	0.000000);
INSERT INTO DIM_ND
	VALUES (0.000000,
	0.000000,
	"d2d41315-fc47-4b36-b785-35011b798a93");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"d2d41315-fc47-4b36-b785-35011b798a93",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("d2d41315-fc47-4b36-b785-35011b798a93",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_LS
	VALUES ("03695cac-eaeb-4622-9f42-d909db334daf",
	"8b8d5d9e-e101-4602-b61f-ce47feaed7ea",
	"00000000-0000-0000-0000-000000000000",
	"938ceed5-0b13-4565-8c29-e8bf72e3f8dd",
	"6ef710b8-5c47-4830-8aa3-5c4e7878adff");
INSERT INTO DIM_WAY
	VALUES ("938ceed5-0b13-4565-8c29-e8bf72e3f8dd",
	2064.000000,
	1920.000000,
	"8b8d5d9e-e101-4602-b61f-ce47feaed7ea",
	"00000000-0000-0000-0000-000000000000",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_WAY
	VALUES ("6ef710b8-5c47-4830-8aa3-5c4e7878adff",
	2064.000000,
	1968.000000,
	"8b8d5d9e-e101-4602-b61f-ce47feaed7ea",
	"00000000-0000-0000-0000-000000000000",
	"938ceed5-0b13-4565-8c29-e8bf72e3f8dd");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"8b8d5d9e-e101-4602-b61f-ce47feaed7ea",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("8b8d5d9e-e101-4602-b61f-ce47feaed7ea",
	1,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ED
	VALUES ("899b70fa-6536-4966-a5f4-a959c1258c65",
	"90a89861-ce4b-4d87-9323-07a12c982dac",
	"8b8d5d9e-e101-4602-b61f-ce47feaed7ea");
INSERT INTO GD_GE
	VALUES ("798d8459-6fa6-4db0-926e-37e255a20c7d",
	"58bd531e-c351-4bce-8dd8-4db6a09cf661",
	"83f1e1e3-724d-4c21-93e9-d65ecb05c0a2",
	42,
	0,
	'ex2::ex2::Test Compound Expressions::Instance State Machine::Unary Ops::TCE4: next test with supp data');
INSERT INTO GD_CON
	VALUES ("798d8459-6fa6-4db0-926e-37e255a20c7d",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("06bc2da2-ed0c-4b38-af61-8209921cebe4",
	"798d8459-6fa6-4db0-926e-37e255a20c7d",
	1,
	0.000000,
	0.000000);
INSERT INTO DIM_ND
	VALUES (0.000000,
	0.000000,
	"06bc2da2-ed0c-4b38-af61-8209921cebe4");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"06bc2da2-ed0c-4b38-af61-8209921cebe4",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("06bc2da2-ed0c-4b38-af61-8209921cebe4",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("35a2e454-6771-41d9-8f03-9cb9a5db181b",
	"798d8459-6fa6-4db0-926e-37e255a20c7d",
	3,
	197.000000,
	0.000000);
INSERT INTO DIM_ND
	VALUES (175.000000,
	42.000000,
	"35a2e454-6771-41d9-8f03-9cb9a5db181b");
INSERT INTO DIM_GE
	VALUES (2080.000000,
	2069.000000,
	"35a2e454-6771-41d9-8f03-9cb9a5db181b",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("35a2e454-6771-41d9-8f03-9cb9a5db181b",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("fbcc76d8-647a-43cf-9274-e2e35cd16803",
	"798d8459-6fa6-4db0-926e-37e255a20c7d",
	2,
	0.000000,
	0.000000);
INSERT INTO DIM_ND
	VALUES (0.000000,
	0.000000,
	"fbcc76d8-647a-43cf-9274-e2e35cd16803");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"fbcc76d8-647a-43cf-9274-e2e35cd16803",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("fbcc76d8-647a-43cf-9274-e2e35cd16803",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_LS
	VALUES ("ffdd5a13-c8d8-4f23-b684-5514ce141712",
	"798d8459-6fa6-4db0-926e-37e255a20c7d",
	"00000000-0000-0000-0000-000000000000",
	"dd6be962-8dc5-4635-8505-403063cfd35b",
	"99290eaf-a4a9-4918-9686-ef5a468eb22a");
INSERT INTO DIM_WAY
	VALUES ("dd6be962-8dc5-4635-8505-403063cfd35b",
	2064.000000,
	2064.000000,
	"798d8459-6fa6-4db0-926e-37e255a20c7d",
	"00000000-0000-0000-0000-000000000000",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_WAY
	VALUES ("99290eaf-a4a9-4918-9686-ef5a468eb22a",
	2064.000000,
	2112.000000,
	"798d8459-6fa6-4db0-926e-37e255a20c7d",
	"00000000-0000-0000-0000-000000000000",
	"dd6be962-8dc5-4635-8505-403063cfd35b");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"798d8459-6fa6-4db0-926e-37e255a20c7d",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("798d8459-6fa6-4db0-926e-37e255a20c7d",
	1,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ED
	VALUES ("c9bb7bd4-ab66-409e-b625-f1116f0f3721",
	"3bf047a8-152d-4b28-95fe-cb77f2666d6e",
	"798d8459-6fa6-4db0-926e-37e255a20c7d");
INSERT INTO GD_GE
	VALUES ("765b783f-8141-4288-bf86-a2ef0fcad192",
	"58bd531e-c351-4bce-8dd8-4db6a09cf661",
	"cded7adf-872f-47a7-bbf1-c73866058db1",
	42,
	0,
	'ex2::ex2::Test Compound Expressions::Instance State Machine::If Expressions::TCE4: next test with supp data');
INSERT INTO GD_CON
	VALUES ("765b783f-8141-4288-bf86-a2ef0fcad192",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("ea5880ba-36f9-4b36-ad00-77b168ef6888",
	"765b783f-8141-4288-bf86-a2ef0fcad192",
	1,
	0.000000,
	0.000000);
INSERT INTO DIM_ND
	VALUES (0.000000,
	0.000000,
	"ea5880ba-36f9-4b36-ad00-77b168ef6888");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"ea5880ba-36f9-4b36-ad00-77b168ef6888",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("ea5880ba-36f9-4b36-ad00-77b168ef6888",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("a3b6bbbb-de77-4e25-ba8a-49be5556f62f",
	"765b783f-8141-4288-bf86-a2ef0fcad192",
	3,
	196.000000,
	-1.000000);
INSERT INTO DIM_ND
	VALUES (175.000000,
	42.000000,
	"a3b6bbbb-de77-4e25-ba8a-49be5556f62f");
INSERT INTO DIM_GE
	VALUES (2079.000000,
	2212.000000,
	"a3b6bbbb-de77-4e25-ba8a-49be5556f62f",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("a3b6bbbb-de77-4e25-ba8a-49be5556f62f",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("affa5de6-1cfc-4bf8-82a5-4e2f47432d44",
	"765b783f-8141-4288-bf86-a2ef0fcad192",
	2,
	0.000000,
	0.000000);
INSERT INTO DIM_ND
	VALUES (0.000000,
	0.000000,
	"affa5de6-1cfc-4bf8-82a5-4e2f47432d44");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"affa5de6-1cfc-4bf8-82a5-4e2f47432d44",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("affa5de6-1cfc-4bf8-82a5-4e2f47432d44",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_LS
	VALUES ("2d065cfc-93ab-422d-9427-847444cd8ca9",
	"765b783f-8141-4288-bf86-a2ef0fcad192",
	"00000000-0000-0000-0000-000000000000",
	"2f8da410-71f9-4f92-887c-473458458bf5",
	"a8db1efc-0ef2-476c-8a2b-517e90b0989e");
INSERT INTO DIM_WAY
	VALUES ("2f8da410-71f9-4f92-887c-473458458bf5",
	2064.000000,
	2208.000000,
	"765b783f-8141-4288-bf86-a2ef0fcad192",
	"00000000-0000-0000-0000-000000000000",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_WAY
	VALUES ("a8db1efc-0ef2-476c-8a2b-517e90b0989e",
	2064.000000,
	2256.000000,
	"765b783f-8141-4288-bf86-a2ef0fcad192",
	"00000000-0000-0000-0000-000000000000",
	"2f8da410-71f9-4f92-887c-473458458bf5");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"765b783f-8141-4288-bf86-a2ef0fcad192",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("765b783f-8141-4288-bf86-a2ef0fcad192",
	1,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ED
	VALUES ("8ed726b8-20a4-4bf5-9fe8-8b4c91285277",
	"20cf4f50-b010-477e-8d3a-1fe497b0f66a",
	"765b783f-8141-4288-bf86-a2ef0fcad192");
INSERT INTO GD_GE
	VALUES ("6f8d1551-3c7e-4713-a4c8-cee61c45a044",
	"58bd531e-c351-4bce-8dd8-4db6a09cf661",
	"75982f72-184c-4512-a8c5-efb1c205cf0c",
	42,
	0,
	'ex2::ex2::Test Compound Expressions::Instance State Machine::Expressions Within Parameters::TCE5: bool event');
INSERT INTO GD_CON
	VALUES ("6f8d1551-3c7e-4713-a4c8-cee61c45a044",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("164b4abd-6824-4c09-942b-91cc14dfc3bc",
	"6f8d1551-3c7e-4713-a4c8-cee61c45a044",
	1,
	0.000000,
	0.000000);
INSERT INTO DIM_ND
	VALUES (0.000000,
	0.000000,
	"164b4abd-6824-4c09-942b-91cc14dfc3bc");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"164b4abd-6824-4c09-942b-91cc14dfc3bc",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("164b4abd-6824-4c09-942b-91cc14dfc3bc",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("924027cb-c2e2-4dde-abe0-7fc3b4b3b355",
	"6f8d1551-3c7e-4713-a4c8-cee61c45a044",
	3,
	149.000000,
	-38.000000);
INSERT INTO DIM_ND
	VALUES (153.000000,
	23.000000,
	"924027cb-c2e2-4dde-abe0-7fc3b4b3b355");
INSERT INTO DIM_GE
	VALUES (2317.000000,
	2208.000000,
	"924027cb-c2e2-4dde-abe0-7fc3b4b3b355",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("924027cb-c2e2-4dde-abe0-7fc3b4b3b355",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("93f009a7-31fe-4adb-ac30-209ebd51b17f",
	"6f8d1551-3c7e-4713-a4c8-cee61c45a044",
	2,
	0.000000,
	0.000000);
INSERT INTO DIM_ND
	VALUES (0.000000,
	0.000000,
	"93f009a7-31fe-4adb-ac30-209ebd51b17f");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"93f009a7-31fe-4adb-ac30-209ebd51b17f",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("93f009a7-31fe-4adb-ac30-209ebd51b17f",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_LS
	VALUES ("6153d016-0f9d-4b2d-a0c3-1861cc386d9d",
	"6f8d1551-3c7e-4713-a4c8-cee61c45a044",
	"00000000-0000-0000-0000-000000000000",
	"8726c4f7-d4e2-46d5-931f-0eab0a1db4a7",
	"beaf5a9b-d1b2-41e0-a4d0-917fbc56ae87");
INSERT INTO DIM_WAY
	VALUES ("8726c4f7-d4e2-46d5-931f-0eab0a1db4a7",
	2160.000000,
	2288.000000,
	"6f8d1551-3c7e-4713-a4c8-cee61c45a044",
	"00000000-0000-0000-0000-000000000000",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_WAY
	VALUES ("beaf5a9b-d1b2-41e0-a4d0-917fbc56ae87",
	2496.000000,
	2240.000000,
	"6f8d1551-3c7e-4713-a4c8-cee61c45a044",
	"00000000-0000-0000-0000-000000000000",
	"8726c4f7-d4e2-46d5-931f-0eab0a1db4a7");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"6f8d1551-3c7e-4713-a4c8-cee61c45a044",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("6f8d1551-3c7e-4713-a4c8-cee61c45a044",
	1,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ED
	VALUES ("8d1dbcfd-416c-4f65-8cfa-b964e81831d7",
	"812d6f19-c2c5-4e60-9bc9-647299713c6a",
	"6f8d1551-3c7e-4713-a4c8-cee61c45a044");
INSERT INTO GD_GE
	VALUES ("1a2699cd-5543-4d68-9d65-007aa0e8e223",
	"58bd531e-c351-4bce-8dd8-4db6a09cf661",
	"49d4b123-5205-4fd5-b246-b05ab91a78b7",
	42,
	0,
	'ex2::ex2::Test Compound Expressions::Instance State Machine::Expressions Within Parameters::TCE6: int event');
INSERT INTO GD_CON
	VALUES ("1a2699cd-5543-4d68-9d65-007aa0e8e223",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("8e7f8d47-a519-4021-a8fc-704c656c2f27",
	"1a2699cd-5543-4d68-9d65-007aa0e8e223",
	1,
	0.000000,
	0.000000);
INSERT INTO DIM_ND
	VALUES (0.000000,
	0.000000,
	"8e7f8d47-a519-4021-a8fc-704c656c2f27");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"8e7f8d47-a519-4021-a8fc-704c656c2f27",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("8e7f8d47-a519-4021-a8fc-704c656c2f27",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("9146be2c-2ff7-4cf1-ac18-815f98ec457f",
	"1a2699cd-5543-4d68-9d65-007aa0e8e223",
	3,
	130.000000,
	35.000000);
INSERT INTO DIM_ND
	VALUES (115.000000,
	42.000000,
	"9146be2c-2ff7-4cf1-ac18-815f98ec457f");
INSERT INTO DIM_GE
	VALUES (2336.000000,
	2378.000000,
	"9146be2c-2ff7-4cf1-ac18-815f98ec457f",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("9146be2c-2ff7-4cf1-ac18-815f98ec457f",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("d1d6212d-f6fc-40fe-a466-7d67e058035f",
	"1a2699cd-5543-4d68-9d65-007aa0e8e223",
	2,
	0.000000,
	0.000000);
INSERT INTO DIM_ND
	VALUES (0.000000,
	0.000000,
	"d1d6212d-f6fc-40fe-a466-7d67e058035f");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"d1d6212d-f6fc-40fe-a466-7d67e058035f",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("d1d6212d-f6fc-40fe-a466-7d67e058035f",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_LS
	VALUES ("f4a1ee81-0e2a-4afd-928d-709f9e7aebec",
	"1a2699cd-5543-4d68-9d65-007aa0e8e223",
	"00000000-0000-0000-0000-000000000000",
	"fe536d9b-fb05-4b97-a1e0-ea26f11a4973",
	"6d9fe301-25c0-4148-acd2-ee273d0d1572");
INSERT INTO DIM_WAY
	VALUES ("fe536d9b-fb05-4b97-a1e0-ea26f11a4973",
	2160.000000,
	2320.000000,
	"1a2699cd-5543-4d68-9d65-007aa0e8e223",
	"00000000-0000-0000-0000-000000000000",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_WAY
	VALUES ("6d9fe301-25c0-4148-acd2-ee273d0d1572",
	2496.000000,
	2368.000000,
	"1a2699cd-5543-4d68-9d65-007aa0e8e223",
	"00000000-0000-0000-0000-000000000000",
	"fe536d9b-fb05-4b97-a1e0-ea26f11a4973");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"1a2699cd-5543-4d68-9d65-007aa0e8e223",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("1a2699cd-5543-4d68-9d65-007aa0e8e223",
	1,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ED
	VALUES ("a3924892-c809-4fc6-8463-f850e0a6283a",
	"cbcbedd5-e404-4865-8408-d3d52659efa8",
	"1a2699cd-5543-4d68-9d65-007aa0e8e223");
INSERT INTO GD_GE
	VALUES ("166ad1a6-8b68-4f8f-990c-71c5c3382459",
	"58bd531e-c351-4bce-8dd8-4db6a09cf661",
	"067825df-f096-41ad-90b0-c40200cf671b",
	42,
	0,
	'ex2::ex2::Test Compound Expressions::Instance State Machine::Count Acks from Bool Event::TCE6: int event');
INSERT INTO GD_CON
	VALUES ("166ad1a6-8b68-4f8f-990c-71c5c3382459",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("95ad60cf-d847-417d-867a-12cc363ae3ea",
	"166ad1a6-8b68-4f8f-990c-71c5c3382459",
	1,
	0.000000,
	0.000000);
INSERT INTO DIM_ND
	VALUES (0.000000,
	0.000000,
	"95ad60cf-d847-417d-867a-12cc363ae3ea");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"95ad60cf-d847-417d-867a-12cc363ae3ea",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("95ad60cf-d847-417d-867a-12cc363ae3ea",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("69f1d186-dff2-4f04-957a-309f0962b0f9",
	"166ad1a6-8b68-4f8f-990c-71c5c3382459",
	3,
	-28.000000,
	6.000000);
INSERT INTO DIM_ND
	VALUES (115.000000,
	42.000000,
	"69f1d186-dff2-4f04-957a-309f0962b0f9");
INSERT INTO DIM_GE
	VALUES (2379.000000,
	2299.000000,
	"69f1d186-dff2-4f04-957a-309f0962b0f9",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("69f1d186-dff2-4f04-957a-309f0962b0f9",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("87ab6cce-3cc4-46a9-82ee-963342119fe8",
	"166ad1a6-8b68-4f8f-990c-71c5c3382459",
	2,
	0.000000,
	0.000000);
INSERT INTO DIM_ND
	VALUES (0.000000,
	0.000000,
	"87ab6cce-3cc4-46a9-82ee-963342119fe8");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"87ab6cce-3cc4-46a9-82ee-963342119fe8",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("87ab6cce-3cc4-46a9-82ee-963342119fe8",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_LS
	VALUES ("8c5c184a-ec1e-47a5-92aa-a1e85a23f794",
	"166ad1a6-8b68-4f8f-990c-71c5c3382459",
	"00000000-0000-0000-0000-000000000000",
	"933b5389-8c63-4e46-9cf8-12309ac98932",
	"a7d53756-2937-4e6e-a66a-93d7d5e8faa5");
INSERT INTO DIM_WAY
	VALUES ("933b5389-8c63-4e46-9cf8-12309ac98932",
	2528.000000,
	2272.000000,
	"166ad1a6-8b68-4f8f-990c-71c5c3382459",
	"00000000-0000-0000-0000-000000000000",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_WAY
	VALUES ("a7d53756-2937-4e6e-a66a-93d7d5e8faa5",
	2528.000000,
	2352.000000,
	"166ad1a6-8b68-4f8f-990c-71c5c3382459",
	"00000000-0000-0000-0000-000000000000",
	"933b5389-8c63-4e46-9cf8-12309ac98932");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"166ad1a6-8b68-4f8f-990c-71c5c3382459",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("166ad1a6-8b68-4f8f-990c-71c5c3382459",
	1,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ED
	VALUES ("96289d72-7a54-48ff-9cd4-bab5b513bc09",
	"4e801ba3-7046-4d61-8132-310ce04ba976",
	"166ad1a6-8b68-4f8f-990c-71c5c3382459");
INSERT INTO GD_GE
	VALUES ("04a66127-fafe-435b-8c52-55e9a7995c08",
	"58bd531e-c351-4bce-8dd8-4db6a09cf661",
	"8b62f101-a759-498c-bf73-b15fd2f582dc",
	42,
	0,
	'ex2::ex2::Test Compound Expressions::Instance State Machine::Count Acks from Int Event::TCE5: bool event');
INSERT INTO GD_CON
	VALUES ("04a66127-fafe-435b-8c52-55e9a7995c08",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("a0dbe506-381f-4aa2-baff-54e396fb5c73",
	"04a66127-fafe-435b-8c52-55e9a7995c08",
	1,
	0.000000,
	0.000000);
INSERT INTO DIM_ND
	VALUES (0.000000,
	0.000000,
	"a0dbe506-381f-4aa2-baff-54e396fb5c73");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"a0dbe506-381f-4aa2-baff-54e396fb5c73",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("a0dbe506-381f-4aa2-baff-54e396fb5c73",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("467c931f-264d-4589-b382-4b6346fe0ccc",
	"04a66127-fafe-435b-8c52-55e9a7995c08",
	3,
	165.000000,
	2.000000);
INSERT INTO DIM_ND
	VALUES (153.000000,
	23.000000,
	"467c931f-264d-4589-b382-4b6346fe0ccc");
INSERT INTO DIM_GE
	VALUES (2646.000000,
	2305.000000,
	"467c931f-264d-4589-b382-4b6346fe0ccc",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("467c931f-264d-4589-b382-4b6346fe0ccc",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("d7d0e915-0c16-4e2b-a27f-95dc6c70aff4",
	"04a66127-fafe-435b-8c52-55e9a7995c08",
	2,
	0.000000,
	0.000000);
INSERT INTO DIM_ND
	VALUES (0.000000,
	0.000000,
	"d7d0e915-0c16-4e2b-a27f-95dc6c70aff4");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"d7d0e915-0c16-4e2b-a27f-95dc6c70aff4",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("d7d0e915-0c16-4e2b-a27f-95dc6c70aff4",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_LS
	VALUES ("f5f456cf-abb4-49a1-ae5d-fadf65d6376c",
	"04a66127-fafe-435b-8c52-55e9a7995c08",
	"00000000-0000-0000-0000-000000000000",
	"cb84749a-c354-4710-9953-c6aa66d1b6aa",
	"a92f7fa7-cc7f-4ef2-b677-a05456603731");
INSERT INTO DIM_WAY
	VALUES ("cb84749a-c354-4710-9953-c6aa66d1b6aa",
	2640.000000,
	2352.000000,
	"04a66127-fafe-435b-8c52-55e9a7995c08",
	"00000000-0000-0000-0000-000000000000",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_WAY
	VALUES ("a92f7fa7-cc7f-4ef2-b677-a05456603731",
	2640.000000,
	2272.000000,
	"04a66127-fafe-435b-8c52-55e9a7995c08",
	"00000000-0000-0000-0000-000000000000",
	"cb84749a-c354-4710-9953-c6aa66d1b6aa");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"04a66127-fafe-435b-8c52-55e9a7995c08",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("04a66127-fafe-435b-8c52-55e9a7995c08",
	1,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ED
	VALUES ("59e2973e-0b63-43c8-82ed-dc324b715db7",
	"d8df0d02-9a83-43ac-98aa-3e806753bf0b",
	"04a66127-fafe-435b-8c52-55e9a7995c08");
INSERT INTO GD_GE
	VALUES ("2fcb597b-8b0c-4204-be20-79916b01a1d8",
	"58bd531e-c351-4bce-8dd8-4db6a09cf661",
	"b6b9f10b-274f-4b2d-8570-f584f6b4d47c",
	42,
	0,
	'ex2::ex2::Test Compound Expressions::Instance State Machine::Count Acks from Bool Event::TCE5: bool event');
INSERT INTO GD_CON
	VALUES ("2fcb597b-8b0c-4204-be20-79916b01a1d8",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("a3af3efd-43d8-451f-ae40-799e3db2b194",
	"2fcb597b-8b0c-4204-be20-79916b01a1d8",
	1,
	0.000000,
	0.000000);
INSERT INTO DIM_ND
	VALUES (0.000000,
	0.000000,
	"a3af3efd-43d8-451f-ae40-799e3db2b194");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"a3af3efd-43d8-451f-ae40-799e3db2b194",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("a3af3efd-43d8-451f-ae40-799e3db2b194",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("3b3a2e5f-f46a-4d82-8976-be6ea3324f86",
	"2fcb597b-8b0c-4204-be20-79916b01a1d8",
	3,
	1.000000,
	2.000000);
INSERT INTO DIM_ND
	VALUES (153.000000,
	23.000000,
	"3b3a2e5f-f46a-4d82-8976-be6ea3324f86");
INSERT INTO DIM_GE
	VALUES (2503.000000,
	2117.000000,
	"3b3a2e5f-f46a-4d82-8976-be6ea3324f86",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("3b3a2e5f-f46a-4d82-8976-be6ea3324f86",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("57df8d92-6bd5-487f-b379-188c882d76f0",
	"2fcb597b-8b0c-4204-be20-79916b01a1d8",
	2,
	0.000000,
	0.000000);
INSERT INTO DIM_ND
	VALUES (0.000000,
	0.000000,
	"57df8d92-6bd5-487f-b379-188c882d76f0");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"57df8d92-6bd5-487f-b379-188c882d76f0",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("57df8d92-6bd5-487f-b379-188c882d76f0",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_LS
	VALUES ("2af4e20d-35a2-415e-bd09-957a96a61278",
	"2fcb597b-8b0c-4204-be20-79916b01a1d8",
	"00000000-0000-0000-0000-000000000000",
	"7560c7f7-67cd-4a00-904e-e99e1c575809",
	"2494339a-2c7a-4359-82df-fef5f832a2c9");
INSERT INTO GD_LS
	VALUES ("4da53d96-4926-4de3-9743-070da7fc0eea",
	"2fcb597b-8b0c-4204-be20-79916b01a1d8",
	"2af4e20d-35a2-415e-bd09-957a96a61278",
	"2494339a-2c7a-4359-82df-fef5f832a2c9",
	"396ba22d-cdfb-4724-82d2-fc93cafd8345");
INSERT INTO GD_LS
	VALUES ("f41bd156-0297-4198-8a3d-dc97a66c5f2a",
	"2fcb597b-8b0c-4204-be20-79916b01a1d8",
	"4da53d96-4926-4de3-9743-070da7fc0eea",
	"396ba22d-cdfb-4724-82d2-fc93cafd8345",
	"51250955-1142-4323-9ba9-1ff4ef15fd9b");
INSERT INTO DIM_WAY
	VALUES ("7560c7f7-67cd-4a00-904e-e99e1c575809",
	2512.000000,
	2176.000000,
	"2fcb597b-8b0c-4204-be20-79916b01a1d8",
	"00000000-0000-0000-0000-000000000000",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_WAY
	VALUES ("2494339a-2c7a-4359-82df-fef5f832a2c9",
	2512.000000,
	2144.000000,
	"2fcb597b-8b0c-4204-be20-79916b01a1d8",
	"00000000-0000-0000-0000-000000000000",
	"7560c7f7-67cd-4a00-904e-e99e1c575809");
INSERT INTO DIM_WAY
	VALUES ("396ba22d-cdfb-4724-82d2-fc93cafd8345",
	2640.000000,
	2144.000000,
	"2fcb597b-8b0c-4204-be20-79916b01a1d8",
	"00000000-0000-0000-0000-000000000000",
	"2494339a-2c7a-4359-82df-fef5f832a2c9");
INSERT INTO DIM_WAY
	VALUES ("51250955-1142-4323-9ba9-1ff4ef15fd9b",
	2640.000000,
	2176.000000,
	"2fcb597b-8b0c-4204-be20-79916b01a1d8",
	"00000000-0000-0000-0000-000000000000",
	"396ba22d-cdfb-4724-82d2-fc93cafd8345");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"2fcb597b-8b0c-4204-be20-79916b01a1d8",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("2fcb597b-8b0c-4204-be20-79916b01a1d8",
	1,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ED
	VALUES ("0524bed1-f46a-47cc-afd9-d821e408dbf9",
	"457c9a98-3d87-4a26-a0bf-90ba861b9fba",
	"2fcb597b-8b0c-4204-be20-79916b01a1d8");
INSERT INTO GD_GE
	VALUES ("d1e184d0-7d65-460b-ac4d-8cad143fe757",
	"58bd531e-c351-4bce-8dd8-4db6a09cf661",
	"1021bc60-f8ff-4c51-b941-3acf4fd98990",
	42,
	0,
	'ex2::ex2::Test Compound Expressions::Instance State Machine::Count Acks from Int Event::TCE6: int event');
INSERT INTO GD_CON
	VALUES ("d1e184d0-7d65-460b-ac4d-8cad143fe757",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("49119590-66ab-47ef-b3f1-d41471f284bf",
	"d1e184d0-7d65-460b-ac4d-8cad143fe757",
	1,
	0.000000,
	0.000000);
INSERT INTO DIM_ND
	VALUES (0.000000,
	0.000000,
	"49119590-66ab-47ef-b3f1-d41471f284bf");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"49119590-66ab-47ef-b3f1-d41471f284bf",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("49119590-66ab-47ef-b3f1-d41471f284bf",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("5f1341fb-ca96-4539-80d9-7150352dc9d9",
	"d1e184d0-7d65-460b-ac4d-8cad143fe757",
	3,
	-18.000000,
	56.000000);
INSERT INTO DIM_ND
	VALUES (115.000000,
	42.000000,
	"5f1341fb-ca96-4539-80d9-7150352dc9d9");
INSERT INTO DIM_GE
	VALUES (2511.000000,
	2488.000000,
	"5f1341fb-ca96-4539-80d9-7150352dc9d9",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("5f1341fb-ca96-4539-80d9-7150352dc9d9",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("b6680c51-f277-41cb-81e0-d915dac1f253",
	"d1e184d0-7d65-460b-ac4d-8cad143fe757",
	2,
	0.000000,
	0.000000);
INSERT INTO DIM_ND
	VALUES (0.000000,
	0.000000,
	"b6680c51-f277-41cb-81e0-d915dac1f253");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"b6680c51-f277-41cb-81e0-d915dac1f253",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("b6680c51-f277-41cb-81e0-d915dac1f253",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_LS
	VALUES ("80be2c25-95b7-45dc-8cdf-dbc4cd38a8b1",
	"d1e184d0-7d65-460b-ac4d-8cad143fe757",
	"00000000-0000-0000-0000-000000000000",
	"36260fe0-1a8a-4c83-a91f-d490861f9e57",
	"860614be-7666-47cd-b559-e9df27774d0e");
INSERT INTO GD_LS
	VALUES ("221e4610-0fbc-478e-9a27-abc7d7a92d6d",
	"d1e184d0-7d65-460b-ac4d-8cad143fe757",
	"80be2c25-95b7-45dc-8cdf-dbc4cd38a8b1",
	"860614be-7666-47cd-b559-e9df27774d0e",
	"d80ef481-0c1d-46df-839e-7ae38153b741");
INSERT INTO GD_LS
	VALUES ("ab73c129-b84b-453b-8546-bca8c80ef006",
	"d1e184d0-7d65-460b-ac4d-8cad143fe757",
	"221e4610-0fbc-478e-9a27-abc7d7a92d6d",
	"d80ef481-0c1d-46df-839e-7ae38153b741",
	"d377921f-85a5-4cfb-b5c2-ae845a051ed7");
INSERT INTO DIM_WAY
	VALUES ("36260fe0-1a8a-4c83-a91f-d490861f9e57",
	2512.000000,
	2448.000000,
	"d1e184d0-7d65-460b-ac4d-8cad143fe757",
	"00000000-0000-0000-0000-000000000000",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_WAY
	VALUES ("860614be-7666-47cd-b559-e9df27774d0e",
	2512.000000,
	2480.000000,
	"d1e184d0-7d65-460b-ac4d-8cad143fe757",
	"00000000-0000-0000-0000-000000000000",
	"36260fe0-1a8a-4c83-a91f-d490861f9e57");
INSERT INTO DIM_WAY
	VALUES ("d80ef481-0c1d-46df-839e-7ae38153b741",
	2656.000000,
	2480.000000,
	"d1e184d0-7d65-460b-ac4d-8cad143fe757",
	"00000000-0000-0000-0000-000000000000",
	"860614be-7666-47cd-b559-e9df27774d0e");
INSERT INTO DIM_WAY
	VALUES ("d377921f-85a5-4cfb-b5c2-ae845a051ed7",
	2656.000000,
	2448.000000,
	"d1e184d0-7d65-460b-ac4d-8cad143fe757",
	"00000000-0000-0000-0000-000000000000",
	"d80ef481-0c1d-46df-839e-7ae38153b741");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"d1e184d0-7d65-460b-ac4d-8cad143fe757",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("d1e184d0-7d65-460b-ac4d-8cad143fe757",
	1,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ED
	VALUES ("00370b39-2650-4a9a-b817-47a3ba75b340",
	"f2fe7bcf-7e15-4bcb-a7b6-0343e3f8415d",
	"d1e184d0-7d65-460b-ac4d-8cad143fe757");
INSERT INTO GD_GE
	VALUES ("eb1b435e-b880-462e-901f-1b3eba6ad144",
	"58bd531e-c351-4bce-8dd8-4db6a09cf661",
	"29bf3b38-2e58-43e9-97c6-e37d5a6ed2ea",
	42,
	0,
	'ex2::ex2::Test Compound Expressions::Instance State Machine::Count Acks from Bool Event::TCE4: next test with supp data');
INSERT INTO GD_CON
	VALUES ("eb1b435e-b880-462e-901f-1b3eba6ad144",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("d33d0a58-3eab-4f66-9a64-c7112ea48ec9",
	"eb1b435e-b880-462e-901f-1b3eba6ad144",
	1,
	0.000000,
	0.000000);
INSERT INTO DIM_ND
	VALUES (0.000000,
	0.000000,
	"d33d0a58-3eab-4f66-9a64-c7112ea48ec9");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"d33d0a58-3eab-4f66-9a64-c7112ea48ec9",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("d33d0a58-3eab-4f66-9a64-c7112ea48ec9",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("37d39c3d-4985-4eb1-89de-8c5efefbaec1",
	"eb1b435e-b880-462e-901f-1b3eba6ad144",
	3,
	-19.000000,
	-7.000000);
INSERT INTO DIM_ND
	VALUES (175.000000,
	42.000000,
	"37d39c3d-4985-4eb1-89de-8c5efefbaec1");
INSERT INTO DIM_GE
	VALUES (2688.000000,
	2153.000000,
	"37d39c3d-4985-4eb1-89de-8c5efefbaec1",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("37d39c3d-4985-4eb1-89de-8c5efefbaec1",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("7f7bf271-cb32-40b0-8de4-a6499710d9fa",
	"eb1b435e-b880-462e-901f-1b3eba6ad144",
	2,
	0.000000,
	0.000000);
INSERT INTO DIM_ND
	VALUES (0.000000,
	0.000000,
	"7f7bf271-cb32-40b0-8de4-a6499710d9fa");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"7f7bf271-cb32-40b0-8de4-a6499710d9fa",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("7f7bf271-cb32-40b0-8de4-a6499710d9fa",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_LS
	VALUES ("b12f5a17-cc10-499d-907f-980fd2eae332",
	"eb1b435e-b880-462e-901f-1b3eba6ad144",
	"00000000-0000-0000-0000-000000000000",
	"024dc15c-5f5e-4585-a9e2-3eb3334e321b",
	"cd3ed827-a65f-4c3b-a35a-b61229ab67f0");
INSERT INTO GD_LS
	VALUES ("da7194cd-c40e-480c-be08-5d0a73388eff",
	"eb1b435e-b880-462e-901f-1b3eba6ad144",
	"b12f5a17-cc10-499d-907f-980fd2eae332",
	"cd3ed827-a65f-4c3b-a35a-b61229ab67f0",
	"d5a320a6-e5f7-428e-bbf7-ee839cdd60a0");
INSERT INTO DIM_WAY
	VALUES ("024dc15c-5f5e-4585-a9e2-3eb3334e321b",
	2672.000000,
	2208.000000,
	"eb1b435e-b880-462e-901f-1b3eba6ad144",
	"00000000-0000-0000-0000-000000000000",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_WAY
	VALUES ("cd3ed827-a65f-4c3b-a35a-b61229ab67f0",
	2912.000000,
	2208.000000,
	"eb1b435e-b880-462e-901f-1b3eba6ad144",
	"00000000-0000-0000-0000-000000000000",
	"024dc15c-5f5e-4585-a9e2-3eb3334e321b");
INSERT INTO DIM_WAY
	VALUES ("d5a320a6-e5f7-428e-bbf7-ee839cdd60a0",
	2912.000000,
	2256.000000,
	"eb1b435e-b880-462e-901f-1b3eba6ad144",
	"00000000-0000-0000-0000-000000000000",
	"cd3ed827-a65f-4c3b-a35a-b61229ab67f0");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"eb1b435e-b880-462e-901f-1b3eba6ad144",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("eb1b435e-b880-462e-901f-1b3eba6ad144",
	1,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ED
	VALUES ("c7a7d82c-ffc9-4454-948d-6476e2464637",
	"0cd22114-e34d-474a-9b33-aa348a5cdccd",
	"eb1b435e-b880-462e-901f-1b3eba6ad144");
INSERT INTO GD_GE
	VALUES ("410569a2-3afc-4d6e-9145-7244ff85de17",
	"58bd531e-c351-4bce-8dd8-4db6a09cf661",
	"8522426e-d0bb-400e-be05-ac2a8da8a082",
	42,
	0,
	'ex2::ex2::Test Compound Expressions::Instance State Machine::Count Acks from Int Event::TCE4: next test with supp data');
INSERT INTO GD_CON
	VALUES ("410569a2-3afc-4d6e-9145-7244ff85de17",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("f3213c5f-dea4-42c5-b1f6-c32b873324ea",
	"410569a2-3afc-4d6e-9145-7244ff85de17",
	1,
	0.000000,
	0.000000);
INSERT INTO DIM_ND
	VALUES (0.000000,
	0.000000,
	"f3213c5f-dea4-42c5-b1f6-c32b873324ea");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"f3213c5f-dea4-42c5-b1f6-c32b873324ea",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("f3213c5f-dea4-42c5-b1f6-c32b873324ea",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("fb42c5cc-9648-421e-965a-303e7ef90e29",
	"410569a2-3afc-4d6e-9145-7244ff85de17",
	3,
	-8.000000,
	55.000000);
INSERT INTO DIM_ND
	VALUES (175.000000,
	42.000000,
	"fb42c5cc-9648-421e-965a-303e7ef90e29");
INSERT INTO DIM_GE
	VALUES (2699.000000,
	2423.000000,
	"fb42c5cc-9648-421e-965a-303e7ef90e29",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("fb42c5cc-9648-421e-965a-303e7ef90e29",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("38462107-01fd-4a93-88e8-d124cf976a43",
	"410569a2-3afc-4d6e-9145-7244ff85de17",
	2,
	0.000000,
	0.000000);
INSERT INTO DIM_ND
	VALUES (0.000000,
	0.000000,
	"38462107-01fd-4a93-88e8-d124cf976a43");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"38462107-01fd-4a93-88e8-d124cf976a43",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("38462107-01fd-4a93-88e8-d124cf976a43",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_LS
	VALUES ("567b0179-ad00-4340-af51-14816478df9e",
	"410569a2-3afc-4d6e-9145-7244ff85de17",
	"00000000-0000-0000-0000-000000000000",
	"90a84967-9ec1-4c2d-a5dc-dc6bdfcd7312",
	"8cbb89df-d861-42c8-81aa-7fc8b98829ee");
INSERT INTO GD_LS
	VALUES ("e93d6e7a-a10c-4d60-8ebf-a3f8ba5aa9cb",
	"410569a2-3afc-4d6e-9145-7244ff85de17",
	"567b0179-ad00-4340-af51-14816478df9e",
	"8cbb89df-d861-42c8-81aa-7fc8b98829ee",
	"f64f2481-5cd5-44e4-9230-d325edc61540");
INSERT INTO DIM_WAY
	VALUES ("90a84967-9ec1-4c2d-a5dc-dc6bdfcd7312",
	2672.000000,
	2416.000000,
	"410569a2-3afc-4d6e-9145-7244ff85de17",
	"00000000-0000-0000-0000-000000000000",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_WAY
	VALUES ("8cbb89df-d861-42c8-81aa-7fc8b98829ee",
	2912.000000,
	2416.000000,
	"410569a2-3afc-4d6e-9145-7244ff85de17",
	"00000000-0000-0000-0000-000000000000",
	"90a84967-9ec1-4c2d-a5dc-dc6bdfcd7312");
INSERT INTO DIM_WAY
	VALUES ("f64f2481-5cd5-44e4-9230-d325edc61540",
	2912.000000,
	2368.000000,
	"410569a2-3afc-4d6e-9145-7244ff85de17",
	"00000000-0000-0000-0000-000000000000",
	"8cbb89df-d861-42c8-81aa-7fc8b98829ee");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"410569a2-3afc-4d6e-9145-7244ff85de17",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("410569a2-3afc-4d6e-9145-7244ff85de17",
	1,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ED
	VALUES ("939ddec8-99c4-48e0-b382-028635eb2dc7",
	"5e33899f-beb6-40f4-ba42-99fe5497de96",
	"410569a2-3afc-4d6e-9145-7244ff85de17");
INSERT INTO GD_GE
	VALUES ("1bf56be7-369b-4333-9731-f581b87c2c6b",
	"58bd531e-c351-4bce-8dd8-4db6a09cf661",
	"194a6611-16e8-4855-9aa7-54266d5bf421",
	42,
	0,
	'ex2::ex2::Test Compound Expressions::Instance State Machine::Bool Event Acks::TCE5: bool event');
INSERT INTO GD_CON
	VALUES ("1bf56be7-369b-4333-9731-f581b87c2c6b",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("5f21406c-4adc-4122-bc28-36451cedcf17",
	"1bf56be7-369b-4333-9731-f581b87c2c6b",
	1,
	0.000000,
	0.000000);
INSERT INTO DIM_ND
	VALUES (0.000000,
	0.000000,
	"5f21406c-4adc-4122-bc28-36451cedcf17");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"5f21406c-4adc-4122-bc28-36451cedcf17",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("5f21406c-4adc-4122-bc28-36451cedcf17",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("8531d6fa-4847-40c9-8fc1-ed11cd0ec92f",
	"1bf56be7-369b-4333-9731-f581b87c2c6b",
	3,
	-6.000000,
	-1.000000);
INSERT INTO DIM_ND
	VALUES (153.000000,
	23.000000,
	"8531d6fa-4847-40c9-8fc1-ed11cd0ec92f");
INSERT INTO DIM_GE
	VALUES (2832.000000,
	1938.000000,
	"8531d6fa-4847-40c9-8fc1-ed11cd0ec92f",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("8531d6fa-4847-40c9-8fc1-ed11cd0ec92f",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("31bfea3e-2484-4c92-acff-7a7529960dad",
	"1bf56be7-369b-4333-9731-f581b87c2c6b",
	2,
	0.000000,
	0.000000);
INSERT INTO DIM_ND
	VALUES (0.000000,
	0.000000,
	"31bfea3e-2484-4c92-acff-7a7529960dad");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"31bfea3e-2484-4c92-acff-7a7529960dad",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("31bfea3e-2484-4c92-acff-7a7529960dad",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_LS
	VALUES ("32eadb32-e13a-4449-938f-3620f6f98269",
	"1bf56be7-369b-4333-9731-f581b87c2c6b",
	"00000000-0000-0000-0000-000000000000",
	"7fd8b42b-c6ee-406f-b569-7abedd520936",
	"3874a02e-3522-4944-8e1c-d9cca5ccc367");
INSERT INTO GD_LS
	VALUES ("e94b9e6a-1df0-419e-b6cf-7ff3fbe752da",
	"1bf56be7-369b-4333-9731-f581b87c2c6b",
	"32eadb32-e13a-4449-938f-3620f6f98269",
	"3874a02e-3522-4944-8e1c-d9cca5ccc367",
	"aa106a4c-ea0e-4386-8c49-3ff7b94e7807");
INSERT INTO GD_LS
	VALUES ("30640fc4-ec52-46c5-8bee-b6c8a7a2c074",
	"1bf56be7-369b-4333-9731-f581b87c2c6b",
	"e94b9e6a-1df0-419e-b6cf-7ff3fbe752da",
	"aa106a4c-ea0e-4386-8c49-3ff7b94e7807",
	"1a9c05c5-9811-4c38-aa3c-dd722d7f9023");
INSERT INTO DIM_WAY
	VALUES ("7fd8b42b-c6ee-406f-b569-7abedd520936",
	2864.000000,
	2000.000000,
	"1bf56be7-369b-4333-9731-f581b87c2c6b",
	"00000000-0000-0000-0000-000000000000",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_WAY
	VALUES ("3874a02e-3522-4944-8e1c-d9cca5ccc367",
	2864.000000,
	1968.000000,
	"1bf56be7-369b-4333-9731-f581b87c2c6b",
	"00000000-0000-0000-0000-000000000000",
	"7fd8b42b-c6ee-406f-b569-7abedd520936");
INSERT INTO DIM_WAY
	VALUES ("aa106a4c-ea0e-4386-8c49-3ff7b94e7807",
	2960.000000,
	1968.000000,
	"1bf56be7-369b-4333-9731-f581b87c2c6b",
	"00000000-0000-0000-0000-000000000000",
	"3874a02e-3522-4944-8e1c-d9cca5ccc367");
INSERT INTO DIM_WAY
	VALUES ("1a9c05c5-9811-4c38-aa3c-dd722d7f9023",
	2960.000000,
	2000.000000,
	"1bf56be7-369b-4333-9731-f581b87c2c6b",
	"00000000-0000-0000-0000-000000000000",
	"aa106a4c-ea0e-4386-8c49-3ff7b94e7807");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"1bf56be7-369b-4333-9731-f581b87c2c6b",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("1bf56be7-369b-4333-9731-f581b87c2c6b",
	1,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ED
	VALUES ("4bab9f27-7ae7-4e5c-a74a-37f7024ed566",
	"b4ed3474-73ac-410a-a01e-8dbd2cfddd55",
	"1bf56be7-369b-4333-9731-f581b87c2c6b");
INSERT INTO GD_GE
	VALUES ("e46f6085-3132-4710-9000-4f6e1d166c66",
	"58bd531e-c351-4bce-8dd8-4db6a09cf661",
	"8f49ac2e-6d97-4d53-96a7-c9be2d72d200",
	42,
	0,
	'ex2::ex2::Test Compound Expressions::Instance State Machine::Int Event Acks::TCE6: int event');
INSERT INTO GD_CON
	VALUES ("e46f6085-3132-4710-9000-4f6e1d166c66",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("2c3d1cfd-57d2-46a2-bfc4-c990a4adc12a",
	"e46f6085-3132-4710-9000-4f6e1d166c66",
	1,
	0.000000,
	0.000000);
INSERT INTO DIM_ND
	VALUES (0.000000,
	0.000000,
	"2c3d1cfd-57d2-46a2-bfc4-c990a4adc12a");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"2c3d1cfd-57d2-46a2-bfc4-c990a4adc12a",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("2c3d1cfd-57d2-46a2-bfc4-c990a4adc12a",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("0383e2c3-0e2c-4368-801f-4b9f10867471",
	"e46f6085-3132-4710-9000-4f6e1d166c66",
	3,
	-10.000000,
	59.000000);
INSERT INTO DIM_ND
	VALUES (115.000000,
	42.000000,
	"0383e2c3-0e2c-4368-801f-4b9f10867471");
INSERT INTO DIM_GE
	VALUES (3191.000000,
	2139.000000,
	"0383e2c3-0e2c-4368-801f-4b9f10867471",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("0383e2c3-0e2c-4368-801f-4b9f10867471",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("02419896-3e50-4f32-b45a-ae0537dc6486",
	"e46f6085-3132-4710-9000-4f6e1d166c66",
	2,
	0.000000,
	0.000000);
INSERT INTO DIM_ND
	VALUES (0.000000,
	0.000000,
	"02419896-3e50-4f32-b45a-ae0537dc6486");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"02419896-3e50-4f32-b45a-ae0537dc6486",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("02419896-3e50-4f32-b45a-ae0537dc6486",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_LS
	VALUES ("f67b02f0-e22f-44c5-b615-7c8ef139b5f5",
	"e46f6085-3132-4710-9000-4f6e1d166c66",
	"00000000-0000-0000-0000-000000000000",
	"c4e3fb24-1a1b-4a05-aee6-84bb5f7475b1",
	"4909b076-01ab-47a1-b82a-c922f11d4383");
INSERT INTO GD_LS
	VALUES ("db9c42bb-8cf2-4dcb-873b-398348e3413d",
	"e46f6085-3132-4710-9000-4f6e1d166c66",
	"f67b02f0-e22f-44c5-b615-7c8ef139b5f5",
	"4909b076-01ab-47a1-b82a-c922f11d4383",
	"70b7e77e-b54a-4a87-9f20-42ca883aedf9");
INSERT INTO GD_LS
	VALUES ("abea513a-9c48-4437-9454-2e8d397b963a",
	"e46f6085-3132-4710-9000-4f6e1d166c66",
	"db9c42bb-8cf2-4dcb-873b-398348e3413d",
	"70b7e77e-b54a-4a87-9f20-42ca883aedf9",
	"1355e2da-84ee-43c4-b568-49264a65bc4b");
INSERT INTO DIM_WAY
	VALUES ("c4e3fb24-1a1b-4a05-aee6-84bb5f7475b1",
	3216.000000,
	2096.000000,
	"e46f6085-3132-4710-9000-4f6e1d166c66",
	"00000000-0000-0000-0000-000000000000",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_WAY
	VALUES ("4909b076-01ab-47a1-b82a-c922f11d4383",
	3216.000000,
	2128.000000,
	"e46f6085-3132-4710-9000-4f6e1d166c66",
	"00000000-0000-0000-0000-000000000000",
	"c4e3fb24-1a1b-4a05-aee6-84bb5f7475b1");
INSERT INTO DIM_WAY
	VALUES ("70b7e77e-b54a-4a87-9f20-42ca883aedf9",
	3296.000000,
	2128.000000,
	"e46f6085-3132-4710-9000-4f6e1d166c66",
	"00000000-0000-0000-0000-000000000000",
	"4909b076-01ab-47a1-b82a-c922f11d4383");
INSERT INTO DIM_WAY
	VALUES ("1355e2da-84ee-43c4-b568-49264a65bc4b",
	3296.000000,
	2096.000000,
	"e46f6085-3132-4710-9000-4f6e1d166c66",
	"00000000-0000-0000-0000-000000000000",
	"70b7e77e-b54a-4a87-9f20-42ca883aedf9");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"e46f6085-3132-4710-9000-4f6e1d166c66",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("e46f6085-3132-4710-9000-4f6e1d166c66",
	1,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ED
	VALUES ("b7376a10-908e-4288-897a-8981ca39464c",
	"5e39f39c-6c6f-495f-b602-2bc665756f6b",
	"e46f6085-3132-4710-9000-4f6e1d166c66");
INSERT INTO GD_GE
	VALUES ("a4d4017b-bad0-42be-b4cc-21a1ea99316a",
	"58bd531e-c351-4bce-8dd8-4db6a09cf661",
	"085d387a-8d88-4012-8657-057ab08adbc8",
	42,
	0,
	'ex2::ex2::Test Compound Expressions::Instance State Machine::Int Event Acks::TCE5: bool event');
INSERT INTO GD_CON
	VALUES ("a4d4017b-bad0-42be-b4cc-21a1ea99316a",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("0baeb964-a878-43e2-8e8e-30d8ea8f621f",
	"a4d4017b-bad0-42be-b4cc-21a1ea99316a",
	1,
	0.000000,
	0.000000);
INSERT INTO DIM_ND
	VALUES (0.000000,
	0.000000,
	"0baeb964-a878-43e2-8e8e-30d8ea8f621f");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"0baeb964-a878-43e2-8e8e-30d8ea8f621f",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("0baeb964-a878-43e2-8e8e-30d8ea8f621f",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("6ef0ae88-fab3-454f-9ea1-4ae4769a53ee",
	"a4d4017b-bad0-42be-b4cc-21a1ea99316a",
	3,
	-3.000000,
	-8.000000);
INSERT INTO DIM_ND
	VALUES (153.000000,
	23.000000,
	"6ef0ae88-fab3-454f-9ea1-4ae4769a53ee");
INSERT INTO DIM_GE
	VALUES (2995.000000,
	1995.000000,
	"6ef0ae88-fab3-454f-9ea1-4ae4769a53ee",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("6ef0ae88-fab3-454f-9ea1-4ae4769a53ee",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("19ba2899-b2f9-4173-b885-3120eb675595",
	"a4d4017b-bad0-42be-b4cc-21a1ea99316a",
	2,
	0.000000,
	0.000000);
INSERT INTO DIM_ND
	VALUES (0.000000,
	0.000000,
	"19ba2899-b2f9-4173-b885-3120eb675595");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"19ba2899-b2f9-4173-b885-3120eb675595",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("19ba2899-b2f9-4173-b885-3120eb675595",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_LS
	VALUES ("67d666ea-b3c5-4e7a-967c-6e7e47bc0122",
	"a4d4017b-bad0-42be-b4cc-21a1ea99316a",
	"00000000-0000-0000-0000-000000000000",
	"b03bc849-edd5-4c95-b6c5-d983f6b6e35b",
	"f5c0ecde-316b-468e-babc-40fa90d063f8");
INSERT INTO DIM_WAY
	VALUES ("b03bc849-edd5-4c95-b6c5-d983f6b6e35b",
	3152.000000,
	2032.000000,
	"a4d4017b-bad0-42be-b4cc-21a1ea99316a",
	"00000000-0000-0000-0000-000000000000",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_WAY
	VALUES ("f5c0ecde-316b-468e-babc-40fa90d063f8",
	2992.000000,
	2032.000000,
	"a4d4017b-bad0-42be-b4cc-21a1ea99316a",
	"00000000-0000-0000-0000-000000000000",
	"b03bc849-edd5-4c95-b6c5-d983f6b6e35b");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"a4d4017b-bad0-42be-b4cc-21a1ea99316a",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("a4d4017b-bad0-42be-b4cc-21a1ea99316a",
	1,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ED
	VALUES ("d28ce9f9-88ac-442b-b6a8-8f86e6371af4",
	"4ba92d0c-d864-4d81-b1e2-f151e61d9dfb",
	"a4d4017b-bad0-42be-b4cc-21a1ea99316a");
INSERT INTO GD_GE
	VALUES ("53cc88f4-505e-4849-bb36-604992ed685a",
	"58bd531e-c351-4bce-8dd8-4db6a09cf661",
	"b50a700e-10d3-4c6d-ab1b-bc73166259e4",
	42,
	0,
	'ex2::ex2::Test Compound Expressions::Instance State Machine::Bool Event Acks::TCE6: int event');
INSERT INTO GD_CON
	VALUES ("53cc88f4-505e-4849-bb36-604992ed685a",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("fc9ca28f-67df-41da-a716-6fbe90415cff",
	"53cc88f4-505e-4849-bb36-604992ed685a",
	1,
	0.000000,
	0.000000);
INSERT INTO DIM_ND
	VALUES (0.000000,
	0.000000,
	"fc9ca28f-67df-41da-a716-6fbe90415cff");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"fc9ca28f-67df-41da-a716-6fbe90415cff",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("fc9ca28f-67df-41da-a716-6fbe90415cff",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("09a53023-d08c-40e4-9c90-d0b73124a282",
	"53cc88f4-505e-4849-bb36-604992ed685a",
	3,
	-22.000000,
	65.000000);
INSERT INTO DIM_ND
	VALUES (115.000000,
	42.000000,
	"09a53023-d08c-40e4-9c90-d0b73124a282");
INSERT INTO DIM_GE
	VALUES (2995.000000,
	2097.000000,
	"09a53023-d08c-40e4-9c90-d0b73124a282",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("09a53023-d08c-40e4-9c90-d0b73124a282",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("8d9f2d30-57fe-44f8-b81e-dcc434a23083",
	"53cc88f4-505e-4849-bb36-604992ed685a",
	2,
	0.000000,
	0.000000);
INSERT INTO DIM_ND
	VALUES (0.000000,
	0.000000,
	"8d9f2d30-57fe-44f8-b81e-dcc434a23083");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"8d9f2d30-57fe-44f8-b81e-dcc434a23083",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("8d9f2d30-57fe-44f8-b81e-dcc434a23083",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_LS
	VALUES ("912155c0-5559-43e9-8226-081633c6bf86",
	"53cc88f4-505e-4849-bb36-604992ed685a",
	"00000000-0000-0000-0000-000000000000",
	"fb65be52-d2e0-41b2-921e-be338122c271",
	"7430e347-4625-45ef-9aa9-25c41765a14d");
INSERT INTO DIM_WAY
	VALUES ("fb65be52-d2e0-41b2-921e-be338122c271",
	2992.000000,
	2080.000000,
	"53cc88f4-505e-4849-bb36-604992ed685a",
	"00000000-0000-0000-0000-000000000000",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_WAY
	VALUES ("7430e347-4625-45ef-9aa9-25c41765a14d",
	3152.000000,
	2080.000000,
	"53cc88f4-505e-4849-bb36-604992ed685a",
	"00000000-0000-0000-0000-000000000000",
	"fb65be52-d2e0-41b2-921e-be338122c271");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"53cc88f4-505e-4849-bb36-604992ed685a",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("53cc88f4-505e-4849-bb36-604992ed685a",
	1,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ED
	VALUES ("078f9894-d474-48bb-95a4-b559c462cf88",
	"0e26b7c2-dd45-4999-890f-e4dba730d954",
	"53cc88f4-505e-4849-bb36-604992ed685a");
INSERT INTO GD_GE
	VALUES ("8a053792-a402-442d-9339-549142b0519f",
	"58bd531e-c351-4bce-8dd8-4db6a09cf661",
	"c4808869-4080-4e6f-be96-371726d3da72",
	42,
	0,
	'ex2::ex2::Test Compound Expressions::Instance State Machine::More Expressions within Parms::TCE5: bool event');
INSERT INTO GD_CON
	VALUES ("8a053792-a402-442d-9339-549142b0519f",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("7d286874-00cc-4bfd-83e9-f3d356c5b7ef",
	"8a053792-a402-442d-9339-549142b0519f",
	1,
	0.000000,
	0.000000);
INSERT INTO DIM_ND
	VALUES (0.000000,
	0.000000,
	"7d286874-00cc-4bfd-83e9-f3d356c5b7ef");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"7d286874-00cc-4bfd-83e9-f3d356c5b7ef",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("7d286874-00cc-4bfd-83e9-f3d356c5b7ef",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("1be2715e-156b-4c71-8878-f58fab9ecf95",
	"8a053792-a402-442d-9339-549142b0519f",
	3,
	170.000000,
	33.000000);
INSERT INTO DIM_ND
	VALUES (153.000000,
	23.000000,
	"1be2715e-156b-4c71-8878-f58fab9ecf95");
INSERT INTO DIM_GE
	VALUES (2955.000000,
	2200.000000,
	"1be2715e-156b-4c71-8878-f58fab9ecf95",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("1be2715e-156b-4c71-8878-f58fab9ecf95",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("7db6fb97-d955-4b9e-9266-db561083650f",
	"8a053792-a402-442d-9339-549142b0519f",
	2,
	0.000000,
	0.000000);
INSERT INTO DIM_ND
	VALUES (0.000000,
	0.000000,
	"7db6fb97-d955-4b9e-9266-db561083650f");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"7db6fb97-d955-4b9e-9266-db561083650f",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("7db6fb97-d955-4b9e-9266-db561083650f",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_LS
	VALUES ("1cdf6d6f-837a-4c9a-9b5d-f34b6fcbd54e",
	"8a053792-a402-442d-9339-549142b0519f",
	"00000000-0000-0000-0000-000000000000",
	"69ab7759-c1ab-4e84-9ea9-ace6e0f79bfa",
	"4e1fcac3-532c-4bdc-8e0d-068a7c8e4e9e");
INSERT INTO DIM_WAY
	VALUES ("69ab7759-c1ab-4e84-9ea9-ace6e0f79bfa",
	2944.000000,
	2256.000000,
	"8a053792-a402-442d-9339-549142b0519f",
	"00000000-0000-0000-0000-000000000000",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_WAY
	VALUES ("4e1fcac3-532c-4bdc-8e0d-068a7c8e4e9e",
	2944.000000,
	2096.000000,
	"8a053792-a402-442d-9339-549142b0519f",
	"00000000-0000-0000-0000-000000000000",
	"69ab7759-c1ab-4e84-9ea9-ace6e0f79bfa");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"8a053792-a402-442d-9339-549142b0519f",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("8a053792-a402-442d-9339-549142b0519f",
	1,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ED
	VALUES ("5ee63bee-99fe-4882-893b-0e80da78110b",
	"f5141447-599e-4f89-a75d-d4ed6fe5e46d",
	"8a053792-a402-442d-9339-549142b0519f");
INSERT INTO GD_GE
	VALUES ("147d9806-85b9-4490-a38e-f84889d9d4b9",
	"58bd531e-c351-4bce-8dd8-4db6a09cf661",
	"607921f3-580a-4ddd-8d53-1a70e723c788",
	42,
	0,
	'ex2::ex2::Test Compound Expressions::Instance State Machine::More Expressions within Parms::TCE6: int event');
INSERT INTO GD_CON
	VALUES ("147d9806-85b9-4490-a38e-f84889d9d4b9",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("99767262-c43c-45b4-a85b-5b6e18339083",
	"147d9806-85b9-4490-a38e-f84889d9d4b9",
	1,
	0.000000,
	0.000000);
INSERT INTO DIM_ND
	VALUES (0.000000,
	0.000000,
	"99767262-c43c-45b4-a85b-5b6e18339083");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"99767262-c43c-45b4-a85b-5b6e18339083",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("99767262-c43c-45b4-a85b-5b6e18339083",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("324a365e-8e0a-4d49-bd03-66a01716db2c",
	"147d9806-85b9-4490-a38e-f84889d9d4b9",
	3,
	-26.000000,
	150.000000);
INSERT INTO DIM_ND
	VALUES (115.000000,
	42.000000,
	"324a365e-8e0a-4d49-bd03-66a01716db2c");
INSERT INTO DIM_GE
	VALUES (3037.000000,
	2347.000000,
	"324a365e-8e0a-4d49-bd03-66a01716db2c",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("324a365e-8e0a-4d49-bd03-66a01716db2c",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("0bd82b41-7585-4ab4-a26a-06751635a625",
	"147d9806-85b9-4490-a38e-f84889d9d4b9",
	2,
	0.000000,
	0.000000);
INSERT INTO DIM_ND
	VALUES (0.000000,
	0.000000,
	"0bd82b41-7585-4ab4-a26a-06751635a625");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"0bd82b41-7585-4ab4-a26a-06751635a625",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("0bd82b41-7585-4ab4-a26a-06751635a625",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_LS
	VALUES ("fc7a281b-4e74-45fe-a996-17cfd5c1288a",
	"147d9806-85b9-4490-a38e-f84889d9d4b9",
	"00000000-0000-0000-0000-000000000000",
	"b649d082-5f1d-4cd7-9bc1-3d2675e73fb3",
	"52909680-b510-4a1e-ac89-4d4af383bdd1");
INSERT INTO GD_LS
	VALUES ("5357e68d-ec1e-4e0e-8762-e86313ed2572",
	"147d9806-85b9-4490-a38e-f84889d9d4b9",
	"fc7a281b-4e74-45fe-a996-17cfd5c1288a",
	"52909680-b510-4a1e-ac89-4d4af383bdd1",
	"ce684176-4f75-4e3d-899c-c9b24f6072e0");
INSERT INTO DIM_WAY
	VALUES ("b649d082-5f1d-4cd7-9bc1-3d2675e73fb3",
	2976.000000,
	2336.000000,
	"147d9806-85b9-4490-a38e-f84889d9d4b9",
	"00000000-0000-0000-0000-000000000000",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_WAY
	VALUES ("52909680-b510-4a1e-ac89-4d4af383bdd1",
	3184.000000,
	2336.000000,
	"147d9806-85b9-4490-a38e-f84889d9d4b9",
	"00000000-0000-0000-0000-000000000000",
	"b649d082-5f1d-4cd7-9bc1-3d2675e73fb3");
INSERT INTO DIM_WAY
	VALUES ("ce684176-4f75-4e3d-899c-c9b24f6072e0",
	3184.000000,
	2096.000000,
	"147d9806-85b9-4490-a38e-f84889d9d4b9",
	"00000000-0000-0000-0000-000000000000",
	"52909680-b510-4a1e-ac89-4d4af383bdd1");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"147d9806-85b9-4490-a38e-f84889d9d4b9",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("147d9806-85b9-4490-a38e-f84889d9d4b9",
	1,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ED
	VALUES ("22d9449e-d16b-44d2-b69e-9e2fabcb15ad",
	"6dd55b45-85a0-486f-b73e-723dbb30f51a",
	"147d9806-85b9-4490-a38e-f84889d9d4b9");
INSERT INTO GD_GE
	VALUES ("86692190-a6a8-4d28-8791-0f72548a1a10",
	"58bd531e-c351-4bce-8dd8-4db6a09cf661",
	"0ba44e92-9191-4f60-bbdc-5785a6932b04",
	42,
	0,
	'ex2::ex2::Test Compound Expressions::Instance State Machine::Bool Event Acks::TCE4: next test with supp data');
INSERT INTO GD_CON
	VALUES ("86692190-a6a8-4d28-8791-0f72548a1a10",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("6d8afa7c-8d8e-44c8-b90b-222a321b036c",
	"86692190-a6a8-4d28-8791-0f72548a1a10",
	1,
	0.000000,
	0.000000);
INSERT INTO DIM_ND
	VALUES (0.000000,
	0.000000,
	"6d8afa7c-8d8e-44c8-b90b-222a321b036c");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"6d8afa7c-8d8e-44c8-b90b-222a321b036c",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("6d8afa7c-8d8e-44c8-b90b-222a321b036c",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("e62eb767-8f27-4b06-94e4-9ed14ceabd6a",
	"86692190-a6a8-4d28-8791-0f72548a1a10",
	3,
	-15.000000,
	-5.000000);
INSERT INTO DIM_ND
	VALUES (175.000000,
	42.000000,
	"e62eb767-8f27-4b06-94e4-9ed14ceabd6a");
INSERT INTO DIM_GE
	VALUES (2588.000000,
	1963.000000,
	"e62eb767-8f27-4b06-94e4-9ed14ceabd6a",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("e62eb767-8f27-4b06-94e4-9ed14ceabd6a",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("3d236b79-098b-4504-8858-a0eacd7c2dc0",
	"86692190-a6a8-4d28-8791-0f72548a1a10",
	2,
	0.000000,
	0.000000);
INSERT INTO DIM_ND
	VALUES (0.000000,
	0.000000,
	"3d236b79-098b-4504-8858-a0eacd7c2dc0");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"3d236b79-098b-4504-8858-a0eacd7c2dc0",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("3d236b79-098b-4504-8858-a0eacd7c2dc0",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_LS
	VALUES ("c450a9cc-7395-4123-a3db-360744953447",
	"86692190-a6a8-4d28-8791-0f72548a1a10",
	"00000000-0000-0000-0000-000000000000",
	"f4315f6f-b1be-4e2a-b0e9-05f18db0a4b3",
	"ca4dbe09-a941-4914-a91d-e3b48714f89e");
INSERT INTO DIM_WAY
	VALUES ("f4315f6f-b1be-4e2a-b0e9-05f18db0a4b3",
	2832.000000,
	2016.000000,
	"86692190-a6a8-4d28-8791-0f72548a1a10",
	"00000000-0000-0000-0000-000000000000",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_WAY
	VALUES ("ca4dbe09-a941-4914-a91d-e3b48714f89e",
	2544.000000,
	2016.000000,
	"86692190-a6a8-4d28-8791-0f72548a1a10",
	"00000000-0000-0000-0000-000000000000",
	"f4315f6f-b1be-4e2a-b0e9-05f18db0a4b3");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"86692190-a6a8-4d28-8791-0f72548a1a10",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("86692190-a6a8-4d28-8791-0f72548a1a10",
	1,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ED
	VALUES ("19e7de07-539f-48a4-8b6b-81d540df465d",
	"d5ba6d5f-798a-4ed9-beb7-7a22aa4b7766",
	"86692190-a6a8-4d28-8791-0f72548a1a10");
INSERT INTO GD_GE
	VALUES ("d255c1c8-305e-4bb1-ae07-cec340280b6d",
	"58bd531e-c351-4bce-8dd8-4db6a09cf661",
	"6b753678-3406-4c73-8912-a10455d69f20",
	42,
	0,
	'ex2::ex2::Test Compound Expressions::Instance State Machine::Int Event Acks::TCE4: next test with supp data');
INSERT INTO GD_CON
	VALUES ("d255c1c8-305e-4bb1-ae07-cec340280b6d",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("e18041d9-cfcb-4bbc-953d-5a039f0455e2",
	"d255c1c8-305e-4bb1-ae07-cec340280b6d",
	1,
	0.000000,
	0.000000);
INSERT INTO DIM_ND
	VALUES (0.000000,
	0.000000,
	"e18041d9-cfcb-4bbc-953d-5a039f0455e2");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"e18041d9-cfcb-4bbc-953d-5a039f0455e2",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("e18041d9-cfcb-4bbc-953d-5a039f0455e2",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("6210272f-1cb9-40c8-8711-cc1c5f9bd652",
	"d255c1c8-305e-4bb1-ae07-cec340280b6d",
	3,
	-198.000000,
	-5.000000);
INSERT INTO DIM_ND
	VALUES (175.000000,
	42.000000,
	"6210272f-1cb9-40c8-8711-cc1c5f9bd652");
INSERT INTO DIM_GE
	VALUES (2597.000000,
	1787.000000,
	"6210272f-1cb9-40c8-8711-cc1c5f9bd652",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("6210272f-1cb9-40c8-8711-cc1c5f9bd652",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("535fbe2c-b983-4961-a552-8595371feb0e",
	"d255c1c8-305e-4bb1-ae07-cec340280b6d",
	2,
	0.000000,
	0.000000);
INSERT INTO DIM_ND
	VALUES (0.000000,
	0.000000,
	"535fbe2c-b983-4961-a552-8595371feb0e");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"535fbe2c-b983-4961-a552-8595371feb0e",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("535fbe2c-b983-4961-a552-8595371feb0e",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_LS
	VALUES ("74dc991d-8bc9-4c85-a113-3accd5c85570",
	"d255c1c8-305e-4bb1-ae07-cec340280b6d",
	"00000000-0000-0000-0000-000000000000",
	"5a4f77ee-00a8-43ee-a7d3-035911ad1537",
	"c3662139-4da9-4384-8d78-6a0ba9ae09fc");
INSERT INTO GD_LS
	VALUES ("5d4616fa-0e49-4c02-85fb-3a074c4322f1",
	"d255c1c8-305e-4bb1-ae07-cec340280b6d",
	"74dc991d-8bc9-4c85-a113-3accd5c85570",
	"c3662139-4da9-4384-8d78-6a0ba9ae09fc",
	"0790d2cd-aaaa-4b04-985f-b078e0b6bd6e");
INSERT INTO DIM_WAY
	VALUES ("5a4f77ee-00a8-43ee-a7d3-035911ad1537",
	3216.000000,
	2000.000000,
	"d255c1c8-305e-4bb1-ae07-cec340280b6d",
	"00000000-0000-0000-0000-000000000000",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_WAY
	VALUES ("c3662139-4da9-4384-8d78-6a0ba9ae09fc",
	3216.000000,
	1840.000000,
	"d255c1c8-305e-4bb1-ae07-cec340280b6d",
	"00000000-0000-0000-0000-000000000000",
	"5a4f77ee-00a8-43ee-a7d3-035911ad1537");
INSERT INTO DIM_WAY
	VALUES ("0790d2cd-aaaa-4b04-985f-b078e0b6bd6e",
	2544.000000,
	1840.000000,
	"d255c1c8-305e-4bb1-ae07-cec340280b6d",
	"00000000-0000-0000-0000-000000000000",
	"c3662139-4da9-4384-8d78-6a0ba9ae09fc");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"d255c1c8-305e-4bb1-ae07-cec340280b6d",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("d255c1c8-305e-4bb1-ae07-cec340280b6d",
	1,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ED
	VALUES ("079d4f64-fa50-4a21-ac67-59fb68e3faf8",
	"91ae8499-c572-4dc4-9a4b-0e7b96050009",
	"d255c1c8-305e-4bb1-ae07-cec340280b6d");
INSERT INTO GD_GE
	VALUES ("0c7c04b4-7bd4-447f-b837-6067dae3aa7a",
	"58bd531e-c351-4bce-8dd8-4db6a09cf661",
	"05297d72-1d45-4c0a-8506-f29ef770b96a",
	42,
	0,
	'ex2::ex2::Test Compound Expressions::Instance State Machine::Compound Expressions Using inst_ref_set<Object>::TCE2: next test');
INSERT INTO GD_CON
	VALUES ("0c7c04b4-7bd4-447f-b837-6067dae3aa7a",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("c14f973c-927e-41a9-9087-bceeec7a818a",
	"0c7c04b4-7bd4-447f-b837-6067dae3aa7a",
	1,
	0.000000,
	0.000000);
INSERT INTO DIM_ND
	VALUES (0.000000,
	0.000000,
	"c14f973c-927e-41a9-9087-bceeec7a818a");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"c14f973c-927e-41a9-9087-bceeec7a818a",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("c14f973c-927e-41a9-9087-bceeec7a818a",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("f3c86806-8952-415d-8a63-97cb59f25db5",
	"0c7c04b4-7bd4-447f-b837-6067dae3aa7a",
	3,
	139.000000,
	-4.000000);
INSERT INTO DIM_ND
	VALUES (105.000000,
	23.000000,
	"f3c86806-8952-415d-8a63-97cb59f25db5");
INSERT INTO DIM_GE
	VALUES (2092.000000,
	1499.000000,
	"f3c86806-8952-415d-8a63-97cb59f25db5",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("f3c86806-8952-415d-8a63-97cb59f25db5",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("5fe56bdc-d66c-4ce3-afb2-e031c44c4308",
	"0c7c04b4-7bd4-447f-b837-6067dae3aa7a",
	2,
	0.000000,
	0.000000);
INSERT INTO DIM_ND
	VALUES (0.000000,
	0.000000,
	"5fe56bdc-d66c-4ce3-afb2-e031c44c4308");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"5fe56bdc-d66c-4ce3-afb2-e031c44c4308",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("5fe56bdc-d66c-4ce3-afb2-e031c44c4308",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_LS
	VALUES ("87a86b93-1b47-4039-be27-91536be3f8c5",
	"0c7c04b4-7bd4-447f-b837-6067dae3aa7a",
	"00000000-0000-0000-0000-000000000000",
	"347ee616-644d-4226-9e96-7a1a982e6d68",
	"d51539d0-ab84-48ba-94e2-98a5ff837793");
INSERT INTO DIM_WAY
	VALUES ("347ee616-644d-4226-9e96-7a1a982e6d68",
	2064.000000,
	1488.000000,
	"0c7c04b4-7bd4-447f-b837-6067dae3aa7a",
	"00000000-0000-0000-0000-000000000000",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_WAY
	VALUES ("d51539d0-ab84-48ba-94e2-98a5ff837793",
	2064.000000,
	1536.000000,
	"0c7c04b4-7bd4-447f-b837-6067dae3aa7a",
	"00000000-0000-0000-0000-000000000000",
	"347ee616-644d-4226-9e96-7a1a982e6d68");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"0c7c04b4-7bd4-447f-b837-6067dae3aa7a",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("0c7c04b4-7bd4-447f-b837-6067dae3aa7a",
	1,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ED
	VALUES ("d9e2f094-66d4-4d44-bca0-e2115642f0de",
	"4a623f02-996f-4279-b698-0d530575f833",
	"0c7c04b4-7bd4-447f-b837-6067dae3aa7a");
INSERT INTO GD_GE
	VALUES ("251200ba-f17a-43e9-a9de-215c6e19a3d4",
	"58bd531e-c351-4bce-8dd8-4db6a09cf661",
	"87c007d1-836d-4901-b8e0-6bdd54795893",
	42,
	0,
	'ex2::ex2::Test Compound Expressions::Instance State Machine::Compound Expressions Using inst_ref<Object>::TCE2: next test');
INSERT INTO GD_CON
	VALUES ("251200ba-f17a-43e9-a9de-215c6e19a3d4",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("8258fdac-4acc-48fe-8bad-4f8912947efb",
	"251200ba-f17a-43e9-a9de-215c6e19a3d4",
	1,
	0.000000,
	0.000000);
INSERT INTO DIM_ND
	VALUES (0.000000,
	0.000000,
	"8258fdac-4acc-48fe-8bad-4f8912947efb");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"8258fdac-4acc-48fe-8bad-4f8912947efb",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("8258fdac-4acc-48fe-8bad-4f8912947efb",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("3278ee6e-77cd-44de-abbb-3a46b4d48e0d",
	"251200ba-f17a-43e9-a9de-215c6e19a3d4",
	3,
	138.000000,
	-1.000000);
INSERT INTO DIM_ND
	VALUES (105.000000,
	23.000000,
	"3278ee6e-77cd-44de-abbb-3a46b4d48e0d");
INSERT INTO DIM_GE
	VALUES (2091.000000,
	1358.000000,
	"3278ee6e-77cd-44de-abbb-3a46b4d48e0d",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("3278ee6e-77cd-44de-abbb-3a46b4d48e0d",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("abdc72e8-36e1-44ae-a40d-4e7b8e8a0f04",
	"251200ba-f17a-43e9-a9de-215c6e19a3d4",
	2,
	0.000000,
	0.000000);
INSERT INTO DIM_ND
	VALUES (0.000000,
	0.000000,
	"abdc72e8-36e1-44ae-a40d-4e7b8e8a0f04");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"abdc72e8-36e1-44ae-a40d-4e7b8e8a0f04",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("abdc72e8-36e1-44ae-a40d-4e7b8e8a0f04",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_LS
	VALUES ("18d870df-3e83-4f87-a554-3d9fa8689df4",
	"251200ba-f17a-43e9-a9de-215c6e19a3d4",
	"00000000-0000-0000-0000-000000000000",
	"dc0f1330-399f-4e7e-9a9d-a750577b67a7",
	"b8b90309-1253-4aab-9a1e-4fd946c58464");
INSERT INTO DIM_WAY
	VALUES ("dc0f1330-399f-4e7e-9a9d-a750577b67a7",
	2064.000000,
	1344.000000,
	"251200ba-f17a-43e9-a9de-215c6e19a3d4",
	"00000000-0000-0000-0000-000000000000",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_WAY
	VALUES ("b8b90309-1253-4aab-9a1e-4fd946c58464",
	2064.000000,
	1392.000000,
	"251200ba-f17a-43e9-a9de-215c6e19a3d4",
	"00000000-0000-0000-0000-000000000000",
	"dc0f1330-399f-4e7e-9a9d-a750577b67a7");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"251200ba-f17a-43e9-a9de-215c6e19a3d4",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("251200ba-f17a-43e9-a9de-215c6e19a3d4",
	1,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ED
	VALUES ("9cbfb2a2-91d1-406b-b3e8-584e51e6cfc0",
	"e45a6908-2fb7-4da1-94f4-1574f532b043",
	"251200ba-f17a-43e9-a9de-215c6e19a3d4");
INSERT INTO GD_GE
	VALUES ("172798e2-40d5-4441-9b9b-fc5766fb2d71",
	"58bd531e-c351-4bce-8dd8-4db6a09cf661",
	"fcf33d51-8aab-477d-88bc-3bf7d040e1c3",
	42,
	0,
	'ex2::ex2::Test Compound Expressions::Instance State Machine::Order of Operations::TCE2: next test');
INSERT INTO GD_CON
	VALUES ("172798e2-40d5-4441-9b9b-fc5766fb2d71",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("26ba3f84-9ee1-480a-8c6e-c5e7609de323",
	"172798e2-40d5-4441-9b9b-fc5766fb2d71",
	1,
	0.000000,
	0.000000);
INSERT INTO DIM_ND
	VALUES (0.000000,
	0.000000,
	"26ba3f84-9ee1-480a-8c6e-c5e7609de323");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"26ba3f84-9ee1-480a-8c6e-c5e7609de323",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("26ba3f84-9ee1-480a-8c6e-c5e7609de323",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("e14ff785-3dcc-4700-b67f-6e3df36e0a44",
	"172798e2-40d5-4441-9b9b-fc5766fb2d71",
	3,
	53.000000,
	540.000000);
INSERT INTO DIM_ND
	VALUES (105.000000,
	23.000000,
	"e14ff785-3dcc-4700-b67f-6e3df36e0a44");
INSERT INTO DIM_GE
	VALUES (1878.000000,
	2339.000000,
	"e14ff785-3dcc-4700-b67f-6e3df36e0a44",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("e14ff785-3dcc-4700-b67f-6e3df36e0a44",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("25d46507-4dd4-4e17-bff5-e5bb9ca355b3",
	"172798e2-40d5-4441-9b9b-fc5766fb2d71",
	2,
	0.000000,
	0.000000);
INSERT INTO DIM_ND
	VALUES (0.000000,
	0.000000,
	"25d46507-4dd4-4e17-bff5-e5bb9ca355b3");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"25d46507-4dd4-4e17-bff5-e5bb9ca355b3",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("25d46507-4dd4-4e17-bff5-e5bb9ca355b3",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_LS
	VALUES ("7be495ea-efb5-4862-ba2a-6ca373fbdf76",
	"172798e2-40d5-4441-9b9b-fc5766fb2d71",
	"00000000-0000-0000-0000-000000000000",
	"3388c835-ed91-4c03-bb4e-0a0df042d1ba",
	"dae948f7-424e-4b18-aad4-22c7b0ff4f40");
INSERT INTO GD_LS
	VALUES ("47a83338-c3b1-4671-a048-8c5b81275dd8",
	"172798e2-40d5-4441-9b9b-fc5766fb2d71",
	"7be495ea-efb5-4862-ba2a-6ca373fbdf76",
	"dae948f7-424e-4b18-aad4-22c7b0ff4f40",
	"8044cb82-87c5-4543-aedf-2d40561d96ba");
INSERT INTO GD_LS
	VALUES ("9def0f9e-8ff3-47e2-84a6-bf294fed19ca",
	"172798e2-40d5-4441-9b9b-fc5766fb2d71",
	"47a83338-c3b1-4671-a048-8c5b81275dd8",
	"8044cb82-87c5-4543-aedf-2d40561d96ba",
	"8b4cee0c-dcb0-4f35-9c2c-e8f5bf038ec1");
INSERT INTO DIM_WAY
	VALUES ("3388c835-ed91-4c03-bb4e-0a0df042d1ba",
	1872.000000,
	2320.000000,
	"172798e2-40d5-4441-9b9b-fc5766fb2d71",
	"00000000-0000-0000-0000-000000000000",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_WAY
	VALUES ("dae948f7-424e-4b18-aad4-22c7b0ff4f40",
	1936.000000,
	2320.000000,
	"172798e2-40d5-4441-9b9b-fc5766fb2d71",
	"00000000-0000-0000-0000-000000000000",
	"3388c835-ed91-4c03-bb4e-0a0df042d1ba");
INSERT INTO DIM_WAY
	VALUES ("8044cb82-87c5-4543-aedf-2d40561d96ba",
	1936.000000,
	1296.000000,
	"172798e2-40d5-4441-9b9b-fc5766fb2d71",
	"00000000-0000-0000-0000-000000000000",
	"dae948f7-424e-4b18-aad4-22c7b0ff4f40");
INSERT INTO DIM_WAY
	VALUES ("8b4cee0c-dcb0-4f35-9c2c-e8f5bf038ec1",
	1984.000000,
	1296.000000,
	"172798e2-40d5-4441-9b9b-fc5766fb2d71",
	"00000000-0000-0000-0000-000000000000",
	"8044cb82-87c5-4543-aedf-2d40561d96ba");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"172798e2-40d5-4441-9b9b-fc5766fb2d71",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("172798e2-40d5-4441-9b9b-fc5766fb2d71",
	1,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ED
	VALUES ("355f6b41-c9d6-4083-a9c2-d5fdc62d22a6",
	"2c775bc9-5833-4fe7-b776-a79444372f81",
	"172798e2-40d5-4441-9b9b-fc5766fb2d71");
INSERT INTO DIM_DIA
	VALUES ("58bd531e-c351-4bce-8dd8-4db6a09cf661",
	'',
	0.768700,
	1164.000000,
	1602.000000,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO O_OBJ_PROXY
	VALUES ("2e6883f6-3fb1-4a92-b4c5-94dbca221dc6",
	'Test Compound Expressions',
	2,
	'TCE',
	'',
	"00000000-0000-0000-0000-000000000000",
	'../Test Compound Expressions.xtuml');
