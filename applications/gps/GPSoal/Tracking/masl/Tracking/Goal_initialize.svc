public service Tracking::Goal.initialize ( sequenceNumber: in integer ) is
goalSpec: instance of GoalSpec;
goal: instance of Goal;
session: instance of WorkoutSession;
goalachievement: instance of GoalAchievement;
begin;
  // Create and activate an instance of a goal specified by
  //   the goal specification, if it exists, identified by 
  //   the incoming parameter.
  
  // Find the goal specification for this goal, then
  //   create and relate this goal to the specification
  //   and to the singleton workout session.
  goalSpec := find_one GoalSpec( sequenceNumber = sequenceNumber );
  if ( null /= goalSpec ) then
    goal := create Goal( session_startTime => goalSpec.session_startTime, spec_sequenceNumber => goalSpec.sequenceNumber, ID => goalSpec.last_goal_ID + 1, Current_State => Executing );
    link goal R9.specified_by goalSpec;
    session := find_one WorkoutSession();  // WorkoutSession is a singleton
    link goal  R11.is_currently_executing_within session;
    goalSpec.last_goal_ID := goal.ID;
  
    // Initialize this goal.
    goal.calculateStart();
    goal.disposition := Increase;
  
    // Start a timer that periodically causes evaluation of goal achievement.
    GoalAchievement.initialize();
    goalachievement := find_one GoalAchievement();
    schedule goal.evaluationTimer generate Goal.Evaluate() to goal delay @PT0.000001S@ * goalachievement.evaluationPeriod delta @PT0.000001S@ * goalachievement.evaluationPeriod;
  end if;
end service;
